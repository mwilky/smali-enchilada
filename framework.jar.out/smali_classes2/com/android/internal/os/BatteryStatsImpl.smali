.class public Lcom/android/internal/os/BatteryStatsImpl;
.super Landroid/os/BatteryStats;
.source "BatteryStatsImpl.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/internal/os/BatteryStatsImpl$Constants;,
        Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;,
        Lcom/android/internal/os/BatteryStatsImpl$Uid;,
        Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;,
        Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;,
        Lcom/android/internal/os/BatteryStatsImpl$DualTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;,
        Lcom/android/internal/os/BatteryStatsImpl$Timer;,
        Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;,
        Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;,
        Lcom/android/internal/os/BatteryStatsImpl$Counter;,
        Lcom/android/internal/os/BatteryStatsImpl$TimeBase;,
        Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;,
        Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;,
        Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;,
        Lcom/android/internal/os/BatteryStatsImpl$Clocks;,
        Lcom/android/internal/os/BatteryStatsImpl$MyHandler;,
        Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;,
        Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;,
        Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;,
        Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;
    }
.end annotation


# static fields
.field static final BATTERY_DELTA_LEVEL_FLAG:I = 0x1

.field public static final BATTERY_PLUGGED_NONE:I = 0x0

.field public static final CREATOR:Landroid/os/Parcelable$Creator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/Parcelable$Creator<",
            "Lcom/android/internal/os/BatteryStatsImpl;",
            ">;"
        }
    .end annotation
.end field

.field private static final DEBUG:Z = false

.field public static final DEBUG_ENERGY:Z = false

.field private static final DEBUG_ENERGY_CPU:Z = false

.field private static final DEBUG_HISTORY:Z = false

.field private static final DEBUG_MEMORY:Z = false

.field static final DELAY_UPDATE_WAKELOCKS:J = 0x1388L

.field static final DELTA_BATTERY_CHARGE_FLAG:I = 0x1000000

.field static final DELTA_BATTERY_LEVEL_FLAG:I = 0x80000

.field static final DELTA_EVENT_FLAG:I = 0x800000

.field static final DELTA_STATE2_FLAG:I = 0x200000

.field static final DELTA_STATE_FLAG:I = 0x100000

.field static final DELTA_STATE_MASK:I = -0x2000000

.field static final DELTA_TIME_ABS:I = 0x7fffd

.field static final DELTA_TIME_INT:I = 0x7fffe

.field static final DELTA_TIME_LONG:I = 0x7ffff

.field static final DELTA_TIME_MASK:I = 0x7ffff

.field static final DELTA_WAKELOCK_FLAG:I = 0x400000

.field private static final MAGIC:I = -0x458a8b8b

.field static final MAX_DAILY_ITEMS:I = 0xa

.field static final MAX_HISTORY_BUFFER:I

.field private static final MAX_HISTORY_ITEMS:I

.field static final MAX_LEVEL_STEPS:I = 0xc8

.field static final MAX_MAX_HISTORY_BUFFER:I

.field private static final MAX_MAX_HISTORY_ITEMS:I

.field private static final MAX_WAKELOCKS_PER_UID:I

.field static final MSG_REPORT_CHARGING:I = 0x3

.field static final MSG_REPORT_CPU_UPDATE_NEEDED:I = 0x1

.field static final MSG_REPORT_POWER_CHANGE:I = 0x2

.field static final MSG_REPORT_RESET_STATS:I = 0x4

.field private static final NUM_BT_TX_LEVELS:I = 0x1

.field private static final NUM_WIFI_TX_LEVELS:I = 0x1

.field private static final RPM_STATS_UPDATE_FREQ_MS:J = 0x3e8L

.field static final STATE_BATTERY_HEALTH_MASK:I = 0x7

.field static final STATE_BATTERY_HEALTH_SHIFT:I = 0x1a

.field static final STATE_BATTERY_MASK:I = -0x1000000

.field static final STATE_BATTERY_PLUG_MASK:I = 0x3

.field static final STATE_BATTERY_PLUG_SHIFT:I = 0x18

.field static final STATE_BATTERY_STATUS_MASK:I = 0x7

.field static final STATE_BATTERY_STATUS_SHIFT:I = 0x1d

.field private static final TAG:Ljava/lang/String; = "BatteryStatsImpl"

.field private static final USB_DATA_CONNECTED:I = 0x2

.field private static final USB_DATA_DISCONNECTED:I = 0x1

.field private static final USB_DATA_UNKNOWN:I = 0x0

.field private static final USE_OLD_HISTORY:Z = false

.field private static final VERSION:I = 0xb1

.field public static final WAKE_LOCK_WEIGHT:I = 0x32
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field private static mOemExService:Lcom/oem/os/IOemExService;


# instance fields
.field final mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

.field mActiveHistoryStates:I

.field mActiveHistoryStates2:I

.field mAudioOnNesting:I

.field mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mAudioTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field mBluetoothScanNesting:I

.field final mBluetoothScanOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
        visibility = .enum Lcom/android/internal/annotations/VisibleForTesting$Visibility;->PACKAGE:Lcom/android/internal/annotations/VisibleForTesting$Visibility;
    .end annotation
.end field

.field private mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

.field mCameraOnNesting:I

.field mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mCameraTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mChangedStates:I

.field mChangedStates2:I

.field final mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field mCharging:Z

.field public final mCheckinFile:Lcom/android/internal/os/AtomicFile;

.field protected mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

.field private final mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field private mCpuFreqs:[J

.field private mCpuTimeReadsTrackingStartTime:J
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field final mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field mCurStepCpuSystemTime:J

.field mCurStepCpuUserTime:J

.field mCurStepMode:I

.field mCurStepStatIOWaitTime:J

.field mCurStepStatIdleTime:J

.field mCurStepStatIrqTime:J

.field mCurStepStatSoftIrqTime:J

.field mCurStepStatSystemTime:J

.field mCurStepStatUserTime:J

.field mCurrentBatteryLevel:I

.field final mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field final mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field public final mDailyFile:Lcom/android/internal/os/AtomicFile;

.field final mDailyItems:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$DailyItem;",
            ">;"
        }
    .end annotation
.end field

.field mDailyPackageChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation
.end field

.field mDailyStartTime:J

.field mDeviceIdleMode:I

.field mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDeviceIdling:Z

.field mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDeviceLightIdling:Z

.field mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mDischargeAmountScreenDoze:I

.field mDischargeAmountScreenDozeSinceCharge:I

.field mDischargeAmountScreenOff:I

.field mDischargeAmountScreenOffSinceCharge:I

.field mDischargeAmountScreenOn:I

.field mDischargeAmountScreenOnSinceCharge:I

.field private mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mDischargeCurrentLevel:I

.field private mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field private mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mDischargePlugLevel:I

.field private mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mDischargeScreenDozeUnplugLevel:I

.field private mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mDischargeScreenOffUnplugLevel:I

.field mDischargeScreenOnUnplugLevel:I

.field mDischargeStartLevel:I

.field final mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

.field mDischargeUnplugLevel:I

.field mDistributeWakelockCpu:Z

.field final mDrawTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mEndPlatformVersion:Ljava/lang/String;

.field private mEstimatedBatteryCapacity:I

.field private mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

.field private final mFile:Lcom/android/internal/util/JournaledFile;

.field mFlashlightOnNesting:I

.field mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mFlashlightTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final mFullTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final mFullWifiLockTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mGlobalWifiRunning:Z

.field mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mGpsNesting:I

.field mGpsSignalQualityBin:I

.field protected final mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
        visibility = .enum Lcom/android/internal/annotations/VisibleForTesting$Visibility;->PACKAGE:Lcom/android/internal/annotations/VisibleForTesting$Visibility;
    .end annotation
.end field

.field public mHandler:Landroid/os/Handler;

.field mHasBluetoothReporting:Z

.field mHasModemReporting:Z

.field mHasWifiReporting:Z

.field protected mHaveBatteryLevel:Z

.field mHighDischargeAmountSinceCharge:I

.field mHistory:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryBaseTime:J

.field final mHistoryBuffer:Landroid/os/Parcel;

.field mHistoryBufferLastPos:I

.field mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

.field private mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

.field mHistoryOverflow:Z

.field final mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

.field final mHistoryTagPool:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Landroid/os/BatteryStats$HistoryTag;",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mInitStepMode:I

.field private mInitialAcquireWakeName:Ljava/lang/String;

.field private mInitialAcquireWakeUid:I

.field mInteractive:Z

.field mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mIsCellularTxPowerHigh:Z

.field final mIsolatedUids:Landroid/util/SparseIntArray;

.field private mIteratingHistory:Z

.field protected mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field private final mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

.field private final mKernelMemoryStats:Landroid/util/LongSparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/LongSparseArray<",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field protected mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field protected mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field protected mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field protected mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field private final mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

.field private final mKernelWakelockStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field private final mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

.field mLastChargeStepLevel:I

.field mLastChargingStateLevel:I

.field mLastDischargeStepLevel:I

.field mLastHistoryElapsedRealtime:J

.field mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field mLastHistoryStepLevel:B

.field mLastIdleTimeStart:J

.field private mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

.field private mLastModemNetworkStats:Landroid/net/NetworkStats;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "mModemNetworkLock"
    .end annotation
.end field

.field protected mLastPartialTimers:Ljava/util/ArrayList;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field private mLastRpmStatsUpdateTimeMs:J

.field mLastStepCpuSystemTime:J

.field mLastStepCpuUserTime:J

.field mLastStepStatIOWaitTime:J

.field mLastStepStatIdleTime:J

.field mLastStepStatIrqTime:J

.field mLastStepStatSoftIrqTime:J

.field mLastStepStatSystemTime:J

.field mLastStepStatUserTime:J

.field mLastWakeupReason:Ljava/lang/String;

.field mLastWakeupUptimeMs:J

.field private mLastWifiNetworkStats:Landroid/net/NetworkStats;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "mWifiNetworkLock"
    .end annotation
.end field

.field mLastWriteTime:J

.field private mLoadedNumConnectivityChange:I

.field mLongestFullIdleTime:J

.field mLongestLightIdleTime:J

.field mLowDischargeAmountSinceCharge:I

.field mMaxChargeStepLevel:I

.field private mMaxLearnedBatteryCapacity:I

.field mMinDischargeStepLevel:I

.field private mMinLearnedBatteryCapacity:I

.field mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mMobileRadioActiveStartTime:J

.field mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field mMobileRadioPowerState:I

.field mModStepMode:I

.field mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field private mModemIfaces:[Ljava/lang/String;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "mModemNetworkLock"
    .end annotation
.end field

.field private final mModemNetworkLock:Ljava/lang/Object;

.field final mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field final mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

.field private final mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

.field private final mNetworkStatsPool:Landroid/util/Pools$Pool;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/Pools$Pool<",
            "Landroid/net/NetworkStats;",
            ">;"
        }
    .end annotation
.end field

.field mNextHistoryTagIdx:I

.field mNextMaxDailyDeadline:J

.field mNextMinDailyDeadline:J

.field mNoAutoReset:Z

.field private mNumAllUidCpuTimeReads:I
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field private mNumBatchedSingleUidCpuTimeReads:J
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field private mNumConnectivityChange:I

.field mNumHistoryItems:I

.field mNumHistoryTagChars:I

.field private mNumSingleUidCpuTimeReads:J
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field private mNumUidsRemoved:I
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field mOnBattery:Z

.field protected mOnBatteryInternal:Z
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field protected final mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

.field protected final mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

.field protected mPartialTimers:Ljava/util/ArrayList;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected mPendingRemovedUids:Ljava/util/Queue;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
        visibility = .enum Lcom/android/internal/annotations/VisibleForTesting$Visibility;->PACKAGE:Lcom/android/internal/annotations/VisibleForTesting$Visibility;
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Queue<",
            "Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;",
            ">;"
        }
    .end annotation
.end field

.field protected final mPendingUids:Landroid/util/SparseIntArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field mPendingWrite:Landroid/os/Parcel;

.field public mPerProcStateCpuTimesAvailable:Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation
.end field

.field mPhoneDataConnectionType:I

.field final mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mPhoneOn:Z

.field mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private mPhoneServiceState:I

.field private mPhoneServiceStateRaw:I

.field mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mPhoneSignalStrengthBin:I

.field mPhoneSignalStrengthBinRaw:I

.field final mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private mPhoneSimStateRaw:I

.field private final mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

.field protected mPowerProfile:Lcom/android/internal/os/PowerProfile;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field mPowerSaveModeEnabled:Z

.field mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mPretendScreenOff:Z

.field mReadHistoryChars:I

.field final mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field mReadHistoryStrings:[Ljava/lang/String;

.field mReadHistoryUids:[I

.field private mReadOverflow:Z

.field mRealtime:J

.field mRealtimeStart:J

.field public mRecordAllHistory:Z

.field protected mRecordingHistory:Z

.field private final mRpmStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field mScreenBrightnessBin:I

.field final mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field protected mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
        visibility = .enum Lcom/android/internal/annotations/VisibleForTesting$Visibility;->PACKAGE:Lcom/android/internal/annotations/VisibleForTesting$Visibility;
    .end annotation
.end field

.field private final mScreenOffRpmStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field protected mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
        visibility = .enum Lcom/android/internal/annotations/VisibleForTesting$Visibility;->PACKAGE:Lcom/android/internal/annotations/VisibleForTesting$Visibility;
    .end annotation
.end field

.field protected mScreenState:I
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
        visibility = .enum Lcom/android/internal/annotations/VisibleForTesting$Visibility;->PACKAGE:Lcom/android/internal/annotations/VisibleForTesting$Visibility;
    .end annotation
.end field

.field mSensorNesting:I

.field final mSensorTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field mShuttingDown:Z

.field mStartClockTime:J

.field mStartCount:I

.field mStartPlatformVersion:Ljava/lang/String;

.field mTempTotalCpuSystemTimeUs:J

.field mTempTotalCpuUserTimeUs:J

.field final mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

.field private final mTmpRpmStats:Lcom/android/internal/os/RpmStats;

.field private final mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

.field mTrackRunningHistoryElapsedRealtime:J

.field mTrackRunningHistoryUptime:J

.field final mUidStats:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Lcom/android/internal/os/BatteryStatsImpl$Uid;",
            ">;"
        }
    .end annotation
.end field

.field private mUnpluggedNumConnectivityChange:I

.field mUptime:J

.field mUptimeStart:J

.field mUsbDataState:I

.field protected mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation
.end field

.field mVideoOnNesting:I

.field mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mVideoTurnedOnTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWakeLockAllocationsUs:[[J

.field mWakeLockImportant:Z

.field mWakeLockNesting:I

.field private final mWakeupReasonStats:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

.field final mWifiBatchedScanTimers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray<",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;>;"
        }
    .end annotation
.end field

.field mWifiFullLockNesting:I

.field private mWifiIfaces:[Ljava/lang/String;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "mWifiNetworkLock"
    .end annotation
.end field

.field mWifiMulticastNesting:I

.field final mWifiMulticastTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field private final mWifiNetworkLock:Ljava/lang/Object;

.field mWifiOn:Z

.field mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mWifiRadioPowerState:I

.field final mWifiRunningTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWifiScanNesting:I

.field final mWifiScanTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field mWifiSignalStrengthBin:I

.field final mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mWifiState:I

.field final mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field mWifiSupplState:I

.field final mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

.field final mWindowTimers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;"
        }
    .end annotation
.end field

.field final mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .line 142
    const/4 v0, 0x0

    sput-object v0, Lcom/android/internal/os/BatteryStatsImpl;->mOemExService:Lcom/oem/os/IOemExService;

    .line 168
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 169
    const/16 v0, 0x320

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_ITEMS:I

    .line 170
    const/16 v0, 0x4b0

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_MAX_HISTORY_ITEMS:I

    .line 171
    const/16 v0, 0x28

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    .line 172
    const v0, 0x18000

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_BUFFER:I

    .line 173
    const/high16 v0, 0x20000

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_MAX_HISTORY_BUFFER:I

    goto :goto_0

    .line 175
    :cond_0
    const/16 v0, 0xfa0

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_ITEMS:I

    .line 176
    const/16 v0, 0x1770

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_MAX_HISTORY_ITEMS:I

    .line 177
    const/16 v0, 0xc8

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    .line 178
    const/high16 v0, 0x80000

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_BUFFER:I

    .line 179
    const/high16 v0, 0xa0000

    sput v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_MAX_HISTORY_BUFFER:I

    .line 15162
    :goto_0
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$6;

    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$6;-><init>()V

    sput-object v0, Lcom/android/internal/os/BatteryStatsImpl;->CREATOR:Landroid/os/Parcelable$Creator;

    return-void
.end method

.method public constructor <init>()V
    .locals 1

    .line 1053
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 1054
    return-void
.end method

.method public constructor <init>(Landroid/os/Parcel;)V
    .locals 1
    .param p1, "p"    # Landroid/os/Parcel;

    .line 10254
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    invoke-direct {v0}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    invoke-direct {p0, v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Landroid/os/Parcel;)V

    .line 10255
    return-void
.end method

.method public constructor <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V
    .locals 14
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 1056
    invoke-direct {p0}, Landroid/os/BatteryStats;-><init>()V

    .line 210
    new-instance v0, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 211
    new-instance v0, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 213
    new-instance v0, Lcom/android/internal/os/KernelUidCpuTimeReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelUidCpuTimeReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    .line 217
    new-instance v0, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    .line 220
    new-instance v0, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    .line 223
    new-instance v0, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    invoke-direct {v0}, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    .line 229
    new-instance v0, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 231
    new-instance v0, Landroid/util/LongSparseArray;

    invoke-direct {v0}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 236
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 244
    new-instance v1, Landroid/util/SparseIntArray;

    invoke-direct {v1}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 252
    nop

    .line 253
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iput-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 260
    new-instance v1, Lcom/android/internal/os/RpmStats;

    invoke-direct {v1}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 264
    const-wide/16 v1, -0x3e8

    iput-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 275
    new-instance v1, Ljava/util/LinkedList;

    invoke-direct {v1}, Ljava/util/LinkedList;-><init>()V

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 600
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 601
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 609
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 614
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 620
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 622
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 623
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 624
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 625
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 626
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 627
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 628
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 629
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 630
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 631
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 632
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 633
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 634
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 635
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 638
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 643
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 647
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 655
    new-instance v2, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 658
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 659
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 662
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 663
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 664
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 665
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 666
    new-instance v3, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 667
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 671
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 672
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 673
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 674
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    .line 675
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 676
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 677
    const-wide/16 v4, 0x0

    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 678
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 679
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 681
    new-instance v6, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 689
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 690
    iput-byte v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 691
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 692
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 693
    new-instance v6, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v6}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 741
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 748
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 749
    const/4 v6, 0x5

    new-array v7, v6, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 790
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 792
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 793
    const/4 v7, 0x2

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 797
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 798
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 799
    sget v7, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 804
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 805
    const/16 v7, 0x15

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 808
    const/16 v7, 0xa

    new-array v8, v7, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 810
    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 840
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 846
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 852
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 860
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 861
    const/16 v7, 0x8

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 863
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 864
    const/16 v7, 0xd

    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 866
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 867
    new-array v6, v6, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 876
    iput-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 878
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 886
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 899
    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 930
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 931
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 932
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 936
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v6, 0xc8

    invoke-direct {v0, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 937
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v7, 0x190

    invoke-direct {v0, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 942
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v0, v6}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 943
    new-instance v0, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v0, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 947
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 948
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 949
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 951
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 953
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 955
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 956
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 957
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 963
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 965
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 966
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 980
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 982
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 998
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1004
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1005
    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1006
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3847
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    .line 3848
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    .line 4378
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 6028
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6056
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6096
    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 11061
    new-instance v0, Lcom/android/internal/net/NetworkStatsFactory;

    invoke-direct {v0}, Lcom/android/internal/net/NetworkStatsFactory;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    .line 11062
    new-instance v0, Landroid/util/Pools$SynchronizedPool;

    const/4 v6, 0x6

    invoke-direct {v0, v6}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11064
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 11066
    sget-object v0, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 11069
    new-instance v0, Landroid/net/NetworkStats;

    invoke-direct {v0, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11072
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 11074
    sget-object v0, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 11077
    new-instance v0, Landroid/net/NetworkStats;

    invoke-direct {v0, v4, v5, v3}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11356
    new-instance v0, Landroid/telephony/ModemActivityInfo;

    new-array v11, v2, [I

    const-wide/16 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    move-object v6, v0

    invoke-direct/range {v6 .. v13}, Landroid/telephony/ModemActivityInfo;-><init>(JII[III)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11607
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v0, p0, v1}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Lcom/android/internal/os/BatteryStatsImpl$1;)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13532
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    .line 13533
    new-instance v0, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v0}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 1057
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 1058
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    .line 1059
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Lcom/android/internal/os/AtomicFile;

    .line 1060
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    .line 1061
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 1062
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 1063
    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 1064
    new-instance v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-direct {v0, p0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    .line 1065
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 1066
    return-void
.end method

.method public constructor <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Landroid/os/Parcel;)V
    .locals 15
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;
    .param p2, "p"    # Landroid/os/Parcel;

    move-object v0, p0

    .line 10257
    invoke-direct {v0}, Landroid/os/BatteryStats;-><init>()V

    .line 210
    new-instance v1, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v1}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 211
    new-instance v1, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v1}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 213
    new-instance v1, Lcom/android/internal/os/KernelUidCpuTimeReader;

    invoke-direct {v1}, Lcom/android/internal/os/KernelUidCpuTimeReader;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    .line 217
    new-instance v1, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-direct {v1}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    .line 220
    new-instance v1, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    invoke-direct {v1}, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    .line 223
    new-instance v1, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    invoke-direct {v1}, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    .line 229
    new-instance v1, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v1}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 231
    new-instance v1, Landroid/util/LongSparseArray;

    invoke-direct {v1}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 236
    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 244
    new-instance v2, Landroid/util/SparseIntArray;

    invoke-direct {v2}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 252
    nop

    .line 253
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 260
    new-instance v2, Lcom/android/internal/os/RpmStats;

    invoke-direct {v2}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 264
    const-wide/16 v2, -0x3e8

    iput-wide v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 275
    new-instance v2, Ljava/util/LinkedList;

    invoke-direct {v2}, Ljava/util/LinkedList;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 600
    const/4 v2, 0x0

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 601
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 609
    new-instance v3, Landroid/util/SparseIntArray;

    invoke-direct {v3}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 614
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 620
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 622
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 623
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 624
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 625
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 626
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 627
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 628
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 629
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 630
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 631
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 632
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 633
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 634
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 635
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 638
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 643
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 647
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 655
    new-instance v3, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v3}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 658
    const/4 v3, 0x0

    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 659
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 662
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 663
    new-instance v4, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v4}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 664
    new-instance v4, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v4}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 665
    new-instance v4, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v4}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 666
    new-instance v4, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v4}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 667
    new-instance v4, Ljava/util/HashMap;

    invoke-direct {v4}, Ljava/util/HashMap;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 671
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 672
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 673
    const/4 v4, -0x1

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 674
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    .line 675
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 676
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 677
    const-wide/16 v5, 0x0

    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 678
    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 679
    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 681
    new-instance v7, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 689
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 690
    iput-byte v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 691
    new-instance v7, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 692
    new-instance v7, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 693
    new-instance v7, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 741
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 748
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 749
    const/4 v7, 0x5

    new-array v8, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 790
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 792
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 793
    const/4 v8, 0x2

    new-array v8, v8, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 797
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 798
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 799
    sget v8, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    new-array v8, v8, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 804
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 805
    const/16 v8, 0x15

    new-array v8, v8, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 808
    const/16 v8, 0xa

    new-array v9, v8, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 810
    new-array v8, v8, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 840
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 846
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 852
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 860
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 861
    const/16 v8, 0x8

    new-array v8, v8, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 863
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 864
    const/16 v8, 0xd

    new-array v8, v8, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 866
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 867
    new-array v7, v7, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 876
    iput-boolean v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 878
    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 886
    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 899
    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 930
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 931
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 932
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 936
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v7, 0xc8

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 937
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v8, 0x190

    invoke-direct {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 942
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 943
    new-instance v1, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 947
    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 948
    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 949
    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 951
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 953
    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 955
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 956
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 957
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 963
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 965
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 966
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 980
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 982
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 998
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1004
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1005
    iput-wide v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1006
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3847
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    .line 3848
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    .line 4378
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 6028
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6056
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6096
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 11061
    new-instance v1, Lcom/android/internal/net/NetworkStatsFactory;

    invoke-direct {v1}, Lcom/android/internal/net/NetworkStatsFactory;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    .line 11062
    new-instance v1, Landroid/util/Pools$SynchronizedPool;

    const/4 v7, 0x6

    invoke-direct {v1, v7}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11064
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 11066
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 11069
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v5, v6, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11072
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 11074
    sget-object v1, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 11077
    new-instance v1, Landroid/net/NetworkStats;

    invoke-direct {v1, v5, v6, v4}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11356
    new-instance v1, Landroid/telephony/ModemActivityInfo;

    new-array v12, v3, [I

    const-wide/16 v8, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object v7, v1

    invoke-direct/range {v7 .. v14}, Landroid/telephony/ModemActivityInfo;-><init>(JII[III)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11607
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v1, v0, v2}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Lcom/android/internal/os/BatteryStatsImpl$1;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13532
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    .line 13533
    new-instance v1, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v1}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 10258
    invoke-direct/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 10259
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    .line 10260
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Lcom/android/internal/os/AtomicFile;

    .line 10261
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    .line 10262
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 10263
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 10264
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-direct {v1, v0, v3}, Lcom/android/internal/os/BatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    .line 10265
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 10266
    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->readFromParcel(Landroid/os/Parcel;)V

    .line 10267
    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 10268
    return-void
.end method

.method private constructor <init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;)V
    .locals 28
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;
    .param p2, "systemDir"    # Ljava/io/File;
    .param p3, "handler"    # Landroid/os/Handler;
    .param p4, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;
    .param p5, "userInfoProvider"    # Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    .line 10151
    invoke-direct/range {p0 .. p0}, Landroid/os/BatteryStats;-><init>()V

    .line 210
    new-instance v2, Lcom/android/internal/os/KernelWakelockReader;

    invoke-direct {v2}, Lcom/android/internal/os/KernelWakelockReader;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    .line 211
    new-instance v2, Lcom/android/internal/os/KernelWakelockStats;

    invoke-direct {v2}, Lcom/android/internal/os/KernelWakelockStats;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    .line 213
    new-instance v2, Lcom/android/internal/os/KernelUidCpuTimeReader;

    invoke-direct {v2}, Lcom/android/internal/os/KernelUidCpuTimeReader;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    .line 217
    new-instance v2, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-direct {v2}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    .line 220
    new-instance v2, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    invoke-direct {v2}, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    .line 223
    new-instance v2, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    invoke-direct {v2}, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    .line 229
    new-instance v2, Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-direct {v2}, Lcom/android/internal/os/KernelMemoryBandwidthStats;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    .line 231
    new-instance v2, Landroid/util/LongSparseArray;

    invoke-direct {v2}, Landroid/util/LongSparseArray;-><init>()V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    .line 236
    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 244
    new-instance v3, Landroid/util/SparseIntArray;

    invoke-direct {v3}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    .line 252
    nop

    .line 253
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v3

    iput-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    .line 260
    new-instance v3, Lcom/android/internal/os/RpmStats;

    invoke-direct {v3}, Lcom/android/internal/os/RpmStats;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    .line 264
    const-wide/16 v3, -0x3e8

    iput-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 275
    new-instance v3, Ljava/util/LinkedList;

    invoke-direct {v3}, Ljava/util/LinkedList;-><init>()V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 600
    const/4 v3, 0x0

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 601
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 609
    new-instance v4, Landroid/util/SparseIntArray;

    invoke-direct {v4}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 614
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 620
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    .line 622
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    .line 623
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    .line 624
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDrawTimers:Ljava/util/ArrayList;

    .line 625
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorTimers:Landroid/util/SparseArray;

    .line 626
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    .line 627
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    .line 628
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    .line 629
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    .line 630
    new-instance v4, Landroid/util/SparseArray;

    invoke-direct {v4}, Landroid/util/SparseArray;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    .line 631
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    .line 632
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    .line 633
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    .line 634
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    .line 635
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanOnTimers:Ljava/util/ArrayList;

    .line 638
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    .line 643
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 647
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 655
    new-instance v4, Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-direct {v4}, Landroid/os/BatteryStats$HistoryEventTracker;-><init>()V

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    .line 658
    const/4 v4, 0x0

    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 659
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 662
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v5

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 663
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 664
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    .line 665
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 666
    new-instance v5, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v5}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    .line 667
    new-instance v5, Ljava/util/HashMap;

    invoke-direct {v5}, Ljava/util/HashMap;-><init>()V

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    .line 671
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 672
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 673
    const/4 v5, -0x1

    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 674
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    .line 675
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 676
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 677
    const-wide/16 v6, 0x0

    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 678
    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 679
    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 681
    new-instance v8, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 689
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 690
    iput-byte v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 691
    new-instance v8, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 692
    new-instance v8, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 693
    new-instance v8, Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v8}, Landroid/os/BatteryStats$HistoryStepDetails;-><init>()V

    iput-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 741
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 748
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 749
    const/4 v8, 0x5

    new-array v9, v8, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 790
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 792
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 793
    const/4 v9, 0x2

    new-array v10, v9, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 797
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 798
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 799
    sget v10, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    new-array v10, v10, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 804
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 805
    const/16 v10, 0x15

    new-array v11, v10, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 808
    const/16 v11, 0xa

    new-array v12, v11, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 810
    new-array v12, v11, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 840
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 846
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 852
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 860
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 861
    const/16 v12, 0x8

    new-array v13, v12, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 863
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 864
    const/16 v13, 0xd

    new-array v14, v13, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 866
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 867
    new-array v14, v8, [Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 876
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 878
    iput v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 886
    iput v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 899
    iput-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 930
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 931
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 932
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 936
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v15, 0xc8

    invoke-direct {v14, v15}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 937
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    const/16 v9, 0x190

    invoke-direct {v14, v9}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 942
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v14, v15}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 943
    new-instance v14, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v14, v9}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    iput-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    .line 947
    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 948
    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 949
    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 951
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    .line 953
    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 955
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 956
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 957
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 963
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 965
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 966
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 980
    new-instance v9, Ljava/util/HashMap;

    invoke-direct {v9}, Ljava/util/HashMap;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    .line 982
    new-instance v9, Ljava/util/HashMap;

    invoke-direct {v9}, Ljava/util/HashMap;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    .line 998
    new-instance v9, Ljava/util/HashMap;

    invoke-direct {v9}, Ljava/util/HashMap;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    .line 1004
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 1005
    iput-wide v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 1006
    new-instance v9, Ljava/util/HashMap;

    invoke-direct {v9}, Ljava/util/HashMap;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    .line 3847
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates:I

    .line 3848
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChangedStates2:I

    .line 4378
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 6028
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6056
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6096
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 11061
    new-instance v9, Lcom/android/internal/net/NetworkStatsFactory;

    invoke-direct {v9}, Lcom/android/internal/net/NetworkStatsFactory;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    .line 11062
    new-instance v9, Landroid/util/Pools$SynchronizedPool;

    const/4 v14, 0x6

    invoke-direct {v9, v14}, Landroid/util/Pools$SynchronizedPool;-><init>(I)V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11064
    new-instance v9, Ljava/lang/Object;

    invoke-direct {v9}, Ljava/lang/Object;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    .line 11066
    sget-object v9, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 11069
    new-instance v9, Landroid/net/NetworkStats;

    invoke-direct {v9, v6, v7, v5}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11072
    new-instance v9, Ljava/lang/Object;

    invoke-direct {v9}, Ljava/lang/Object;-><init>()V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    .line 11074
    sget-object v9, Llibcore/util/EmptyArray;->STRING:[Ljava/lang/String;

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 11077
    new-instance v9, Landroid/net/NetworkStats;

    invoke-direct {v9, v6, v7, v5}, Landroid/net/NetworkStats;-><init>(JI)V

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    .line 11356
    new-instance v6, Landroid/telephony/ModemActivityInfo;

    new-array v7, v4, [I

    const-wide/16 v18, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    move-object/from16 v17, v6

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v24}, Landroid/telephony/ModemActivityInfo;-><init>(JII[III)V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11607
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    invoke-direct {v6, v0, v3}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Lcom/android/internal/os/BatteryStatsImpl$1;)V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .line 13532
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    .line 13533
    new-instance v6, Ljava/util/concurrent/locks/ReentrantLock;

    invoke-direct {v6}, Ljava/util/concurrent/locks/ReentrantLock;-><init>()V

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    .line 10152
    invoke-direct/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V

    .line 10154
    if-eqz v1, :cond_0

    .line 10155
    new-instance v3, Lcom/android/internal/util/JournaledFile;

    new-instance v6, Ljava/io/File;

    const-string v7, "batterystats.bin"

    invoke-direct {v6, v1, v7}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    new-instance v7, Ljava/io/File;

    const-string v9, "batterystats.bin.tmp"

    invoke-direct {v7, v1, v9}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v3, v6, v7}, Lcom/android/internal/util/JournaledFile;-><init>(Ljava/io/File;Ljava/io/File;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    goto :goto_0

    .line 10158
    :cond_0
    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    .line 10160
    :goto_0
    new-instance v3, Lcom/android/internal/os/AtomicFile;

    new-instance v6, Ljava/io/File;

    const-string v7, "batterystats-checkin.bin"

    invoke-direct {v6, v1, v7}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v3, v6}, Lcom/android/internal/os/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCheckinFile:Lcom/android/internal/os/AtomicFile;

    .line 10161
    new-instance v3, Lcom/android/internal/os/AtomicFile;

    new-instance v6, Ljava/io/File;

    const-string v7, "batterystats-daily.xml"

    invoke-direct {v6, v1, v7}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v3, v6}, Lcom/android/internal/os/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    .line 10162
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;

    invoke-virtual/range {p3 .. p3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v6

    invoke-direct {v3, v0, v6}, Lcom/android/internal/os/BatteryStatsImpl$MyHandler;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Looper;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    .line 10163
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-direct {v3, v0, v6}, Lcom/android/internal/os/BatteryStatsImpl$Constants;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Handler;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    .line 10164
    iget v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    add-int/2addr v3, v2

    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 10165
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0x1

    const/16 v21, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v6

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10166
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v24, 0x0

    const/16 v25, -0x1

    const/16 v26, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v6

    move-object/from16 v27, v7

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10167
    move v3, v4

    .local v3, "i":I
    :goto_1
    if-ge v3, v8, :cond_1

    .line 10168
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int/lit8 v20, v3, -0x64

    const/16 v21, 0x0

    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v7

    move-object/from16 v18, v9

    move-object/from16 v22, v14

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v6, v3

    .line 10167
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 10171
    .end local v3    # "i":I
    :cond_1
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0xa

    const/16 v21, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v6

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10172
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v24, 0x0

    const/16 v25, -0x2

    const/16 v26, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v6

    move-object/from16 v27, v7

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10174
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0xb

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v6

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10176
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v25, -0xe

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v6

    move-object/from16 v27, v7

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10177
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0xf

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v6

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10178
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v25, -0xc

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v3

    move-object/from16 v23, v6

    move-object/from16 v27, v7

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10179
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0x3

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v6

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10180
    move v3, v4

    .restart local v3    # "i":I
    :goto_2
    sget v6, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    if-ge v3, v6, :cond_2

    .line 10181
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v14, v3, -0xc8

    const/16 v21, 0x0

    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v7

    move-object/from16 v18, v9

    move/from16 v20, v14

    move-object/from16 v22, v15

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v6, v3

    .line 10180
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 10184
    .end local v3    # "i":I
    :cond_2
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0xc7

    const/16 v21, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v3

    move-object/from16 v18, v6

    move-object/from16 v22, v7

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10186
    move v3, v4

    .restart local v3    # "i":I
    :goto_3
    if-ge v3, v10, :cond_3

    .line 10187
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v14, v3, -0x12c

    const/16 v21, 0x0

    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v7

    move-object/from16 v18, v9

    move/from16 v20, v14

    move-object/from16 v22, v15

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v6, v3

    .line 10186
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 10190
    .end local v3    # "i":I
    :cond_3
    move v3, v4

    .restart local v3    # "i":I
    :goto_4
    if-ge v3, v11, :cond_4

    .line 10191
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v7, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v6, v3

    .line 10192
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v7, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v7, v6, v3

    .line 10190
    add-int/lit8 v3, v3, 0x1

    goto :goto_4

    .line 10194
    .end local v3    # "i":I
    :cond_4
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v6, v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10195
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v6, v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10197
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;I)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 10199
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    const/16 v20, -0x190

    const/16 v21, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v2

    move-object/from16 v18, v3

    move-object/from16 v22, v6

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10200
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v24, 0x0

    const/16 v25, -0x191

    const/16 v26, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v2

    move-object/from16 v23, v3

    move-object/from16 v27, v6

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10202
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10203
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10204
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10205
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, 0x17

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v2

    move-object/from16 v18, v3

    move-object/from16 v22, v6

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10207
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v25, -0x4

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v22, v2

    move-object/from16 v23, v3

    move-object/from16 v27, v6

    invoke-direct/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10208
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v20, -0x5

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v2

    move-object/from16 v18, v3

    move-object/from16 v22, v6

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10209
    move v2, v4

    .local v2, "i":I
    :goto_5
    if-ge v2, v12, :cond_5

    .line 10210
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v9, v2, -0x258

    const/16 v21, 0x0

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v6

    move-object/from16 v18, v7

    move/from16 v20, v9

    move-object/from16 v22, v10

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v3, v2

    .line 10209
    add-int/lit8 v2, v2, 0x1

    goto :goto_5

    .line 10213
    .end local v2    # "i":I
    :cond_5
    move v2, v4

    .restart local v2    # "i":I
    :goto_6
    if-ge v2, v13, :cond_6

    .line 10214
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v19, 0x0

    rsub-int v9, v2, -0x2bc

    const/16 v21, 0x0

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object/from16 v17, v6

    move-object/from16 v18, v7

    move/from16 v20, v9

    move-object/from16 v22, v10

    invoke-direct/range {v17 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v3, v2

    .line 10213
    add-int/lit8 v2, v2, 0x1

    goto :goto_6

    .line 10217
    .end local v2    # "i":I
    :cond_6
    move v2, v4

    .restart local v2    # "i":I
    :goto_7
    if-ge v2, v8, :cond_7

    .line 10218
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v11, 0x0

    rsub-int v12, v2, -0x320

    const/4 v13, 0x0

    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v9, v6

    invoke-direct/range {v9 .. v14}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v6, v3, v2

    .line 10217
    add-int/lit8 v2, v2, 0x1

    goto :goto_7

    .line 10221
    .end local v2    # "i":I
    :cond_7
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v11, 0x0

    const/16 v12, -0x384

    const/4 v13, 0x0

    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v9, v2

    invoke-direct/range {v9 .. v14}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10222
    move v2, v4

    .restart local v2    # "i":I
    :goto_8
    const/4 v3, 0x2

    if-ge v2, v3, :cond_8

    .line 10223
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v13, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v9, 0x0

    rsub-int v10, v2, -0x3e8

    const/4 v11, 0x0

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v7, v13

    invoke-direct/range {v7 .. v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v13, v6, v2

    .line 10222
    add-int/lit8 v2, v2, 0x1

    goto :goto_8

    .line 10226
    .end local v2    # "i":I
    :cond_8
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v8, 0x0

    const/4 v9, -0x7

    const/4 v10, 0x0

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v6, v2

    invoke-direct/range {v6 .. v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10227
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v14, 0x0

    const/4 v15, -0x8

    const/16 v16, 0x0

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v12, v2

    move-object/from16 v17, v3

    invoke-direct/range {v12 .. v17}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10228
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v9, -0x9

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v6, v2

    invoke-direct/range {v6 .. v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10229
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v15, -0xd

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v12, v2

    move-object/from16 v17, v3

    invoke-direct/range {v12 .. v17}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10230
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v9, -0xe

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v6, v2

    invoke-direct/range {v6 .. v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 10231
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10232
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10233
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10234
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10235
    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 10236
    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 10237
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    const-wide/16 v6, 0x3e8

    mul-long/2addr v2, v6

    .line 10238
    .local v2, "uptime":J
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v8}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    mul-long/2addr v8, v6

    .line 10239
    .local v8, "realtime":J
    invoke-virtual {v0, v2, v3, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->initTimes(JJ)V

    .line 10240
    sget-object v6, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    iput-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 10241
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    .line 10242
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 10243
    iput v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 10244
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 10245
    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 10246
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->initDischarge()V

    .line 10247
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 10248
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    .line 10249
    move-object/from16 v4, p4

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 10250
    move-object/from16 v5, p5

    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 10251
    return-void
.end method

.method public constructor <init>(Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;)V
    .locals 6
    .param p1, "systemDir"    # Ljava/io/File;
    .param p2, "handler"    # Landroid/os/Handler;
    .param p3, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;
    .param p4, "userInfoProvider"    # Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    .line 10146
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;

    invoke-direct {v1}, Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;-><init>()V

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Ljava/io/File;Landroid/os/Handler;Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;)V

    .line 10147
    return-void
.end method

.method static synthetic access$000(Lcom/android/internal/os/BatteryStatsImpl;)Lcom/android/internal/os/BatteryStatsImpl$Constants;
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 132
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    return-object v0
.end method

.method static synthetic access$1000(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 132
    invoke-static {p0}, Lcom/android/internal/os/BatteryStatsImpl;->detachLongCounterIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)V

    return-void
.end method

.method static synthetic access$108(Lcom/android/internal/os/BatteryStatsImpl;)I
    .locals 2
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 132
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    add-int/lit8 v1, v0, 0x1

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    return v0
.end method

.method static synthetic access$1300(Lcom/android/internal/os/BatteryStatsImpl;)Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 132
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    return-object v0
.end method

.method static synthetic access$1402(Lcom/android/internal/os/BatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # J

    .line 132
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    return-wide p1
.end method

.method static synthetic access$1408(Lcom/android/internal/os/BatteryStatsImpl;)J
    .locals 4
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 132
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    const-wide/16 v2, 0x1

    add-long/2addr v2, v0

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    return-wide v0
.end method

.method static synthetic access$1502(Lcom/android/internal/os/BatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # J

    .line 132
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    return-wide p1
.end method

.method static synthetic access$1508(Lcom/android/internal/os/BatteryStatsImpl;)J
    .locals 4
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 132
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    const-wide/16 v2, 0x1

    add-long/2addr v2, v0

    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    return-wide v0
.end method

.method static synthetic access$1700()Lcom/oem/os/IOemExService;
    .locals 1

    .line 132
    sget-object v0, Lcom/android/internal/os/BatteryStatsImpl;->mOemExService:Lcom/oem/os/IOemExService;

    return-object v0
.end method

.method static synthetic access$1702(Lcom/oem/os/IOemExService;)Lcom/oem/os/IOemExService;
    .locals 0
    .param p0, "x0"    # Lcom/oem/os/IOemExService;

    .line 132
    sput-object p0, Lcom/android/internal/os/BatteryStatsImpl;->mOemExService:Lcom/oem/os/IOemExService;

    return-object p0
.end method

.method static synthetic access$1802(Lcom/android/internal/os/BatteryStatsImpl;J)J
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # J

    .line 132
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    return-wide p1
.end method

.method static synthetic access$200(Lcom/android/internal/os/BatteryStatsImpl;)Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;

    .line 132
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    return-object v0
.end method

.method static synthetic access$500()I
    .locals 1

    .line 132
    sget v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    return v0
.end method

.method static synthetic access$600(Lcom/android/internal/os/BatteryStatsImpl;Z)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl;
    .param p1, "x1"    # Z

    .line 132
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->noteUsbConnectionStateLocked(Z)V

    return-void
.end method

.method static synthetic access$700(Lcom/android/internal/os/BatteryStatsImpl$Timer;Z)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .param p1, "x1"    # Z

    .line 132
    invoke-static {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetTimerIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$Timer;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic access$800(Lcom/android/internal/os/BatteryStatsImpl$DualTimer;Z)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$DualTimer;
    .param p1, "x1"    # Z

    .line 132
    invoke-static {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetTimerIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$DualTimer;Z)Z

    move-result v0

    return v0
.end method

.method static synthetic access$900(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;Z)V
    .locals 0
    .param p0, "x0"    # Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .param p1, "x1"    # Z

    .line 132
    invoke-static {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->resetLongCounterIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;Z)V

    return-void
.end method

.method private addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cmd"    # B
    .param p4, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3828
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    if-nez v0, :cond_0

    .line 3831
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3832
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0, v1}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3833
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    add-long/2addr v1, p1

    invoke-virtual {v0, v1, v2, p3, p4}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3834
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3835
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 3836
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V

    .line 3837
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 3838
    const/4 v0, 0x0

    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3839
    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3840
    const/4 v1, 0x0

    iput v1, p4, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3841
    iput-object v0, p4, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3845
    return-void

    .line 3829
    :cond_0
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Can\'t do this while iterating history!"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private declared-synchronized addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;)V
    .locals 10
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    monitor-enter p0

    .line 11553
    if-nez p1, :cond_0

    .line 11554
    monitor-exit p0

    return-void

    .line 11556
    :cond_0
    :try_start_0
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    move-result-object v0

    .line 11557
    .local v0, "txTimeMs":[I
    if-eqz v0, :cond_7

    array-length v1, v0

    const/4 v2, 0x5

    if-eq v1, v2, :cond_1

    goto :goto_1

    .line 11560
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 11561
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 11562
    .local v3, "uptime":J
    const/4 v5, 0x0

    .line 11563
    .local v5, "levelMaxTimeSpent":I
    const/4 v6, 0x1

    move v7, v5

    move v5, v6

    .local v5, "i":I
    .local v7, "levelMaxTimeSpent":I
    :goto_0
    array-length v8, v0

    if-ge v5, v8, :cond_3

    .line 11564
    aget v8, v0, v5

    aget v9, v0, v7

    if-le v8, v9, :cond_2

    .line 11565
    move v7, v5

    .line 11563
    :cond_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 11568
    .end local v5    # "i":I
    :cond_3
    const/4 v5, 0x4

    if-ne v7, v5, :cond_5

    .line 11569
    iget-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    if-nez v5, :cond_4

    .line 11570
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v8, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v9, 0x80000

    or-int/2addr v8, v9

    iput v8, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 11571
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11572
    iput-boolean v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11574
    :cond_4
    monitor-exit p0

    return-void

    .line 11576
    :cond_5
    :try_start_1
    iget-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    if-eqz v5, :cond_6

    .line 11577
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v8, -0x80001

    and-int/2addr v6, v8

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 11578
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 11579
    const/4 v5, 0x0

    iput-boolean v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11581
    :cond_6
    monitor-exit p0

    return-void

    .line 11558
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v7    # "levelMaxTimeSpent":I
    :cond_7
    :goto_1
    monitor-exit p0

    return-void

    .line 11552
    .end local v0    # "txTimeMs":[I
    .end local p1    # "activityInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_0
    move-exception p1

    monitor-exit p0

    .end local p0    # "this":Lcom/android/internal/os/BatteryStatsImpl;
    throw p1
.end method

.method private addPackageChange(Landroid/os/BatteryStats$PackageChange;)V
    .locals 1
    .param p1, "pc"    # Landroid/os/BatteryStats$PackageChange;

    .line 5242
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-nez v0, :cond_0

    .line 5243
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 5245
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5246
    return-void
.end method

.method private buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 3
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3438
    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    shl-int/lit8 v0, v0, 0x19

    const/high16 v1, -0x2000000

    and-int/2addr v0, v1

    iget-short v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    shl-int/lit8 v1, v1, 0xf

    const v2, 0x1ff8000

    and-int/2addr v1, v2

    or-int/2addr v0, v1

    iget-char v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    shl-int/lit8 v1, v1, 0x1

    and-int/lit16 v1, v1, 0x7ffe

    or-int/2addr v0, v1

    return v0
.end method

.method private buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I
    .locals 4
    .param p1, "h"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3450
    const/4 v0, 0x0

    .line 3451
    .local v0, "plugType":I
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x1

    if-eqz v1, :cond_0

    .line 3452
    const/4 v0, 0x1

    goto :goto_0

    .line 3453
    :cond_0
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_1

    .line 3454
    const/4 v0, 0x2

    goto :goto_0

    .line 3455
    :cond_1
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    and-int/lit8 v1, v1, 0x4

    if-eqz v1, :cond_2

    .line 3456
    const/4 v0, 0x3

    .line 3458
    :cond_2
    :goto_0
    iget-byte v1, p1, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    and-int/lit8 v1, v1, 0x7

    shl-int/lit8 v1, v1, 0x1d

    iget-byte v2, p1, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    and-int/lit8 v2, v2, 0x7

    shl-int/lit8 v2, v2, 0x1a

    or-int/2addr v1, v2

    and-int/lit8 v2, v0, 0x3

    shl-int/lit8 v2, v2, 0x18

    or-int/2addr v1, v2

    iget v2, p1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, 0xffffff

    and-int/2addr v2, v3

    or-int/2addr v1, v2

    return v1
.end method

.method private computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V
    .locals 9
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryStepDetails;
    .param p2, "last"    # Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3466
    if-eqz p2, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    goto :goto_0

    :cond_0
    move-object v0, p1

    .line 3470
    .local v0, "tmp":Landroid/os/BatteryStats$HistoryStepDetails;
    :goto_0
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestImmediateCpuUpdate()V

    .line 3472
    const/4 v1, 0x0

    if-nez p2, :cond_2

    .line 3475
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 3476
    .local v2, "NU":I
    nop

    .local v1, "i":I
    :goto_1
    if-ge v1, v2, :cond_1

    .line 3477
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 3478
    .local v3, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    iput-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    .line 3479
    iget-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iput-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    .line 3476
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 3481
    .end local v1    # "i":I
    :cond_1
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 3482
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 3483
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    .line 3484
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 3485
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 3486
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 3487
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 3488
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 3489
    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryStepDetails;->clear()V

    .line 3490
    return-void

    .line 3502
    .end local v2    # "NU":I
    :cond_2
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->userTime:I

    .line 3503
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->systemTime:I

    .line 3504
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statUserTime:I

    .line 3505
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSystemTime:I

    .line 3506
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIOWaitTime:I

    .line 3507
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIrqTime:I

    .line 3508
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statSoftIrqTime:I

    .line 3509
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iget-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->statIdlTime:I

    .line 3510
    const/4 v2, -0x1

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    iput v2, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    .line 3511
    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    .line 3512
    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    iput v1, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    .line 3513
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 3514
    .restart local v2    # "NU":I
    nop

    .restart local v1    # "i":I
    :goto_2
    if-ge v1, v2, :cond_6

    .line 3515
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 3516
    .restart local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    iget-wide v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    sub-long/2addr v4, v6

    long-to-int v4, v4

    .line 3517
    .local v4, "totalUTime":I
    iget-wide v5, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iget-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    sub-long/2addr v5, v7

    long-to-int v5, v5

    .line 3518
    .local v5, "totalSTime":I
    add-int v6, v4, v5

    .line 3519
    .local v6, "totalTime":I
    iget-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepUserTime:J

    iput-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepUserTime:J

    .line 3520
    iget-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCurStepSystemTime:J

    iput-wide v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mLastStepSystemTime:J

    .line 3521
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_3

    .line 3522
    goto :goto_3

    .line 3524
    :cond_3
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_4

    .line 3525
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    .line 3526
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    .line 3527
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    goto :goto_3

    .line 3529
    :cond_4
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid3:I

    .line 3530
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime3:I

    .line 3531
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime3:I

    .line 3532
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    iget v8, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    add-int/2addr v7, v8

    if-gt v6, v7, :cond_5

    .line 3533
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    .line 3534
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    .line 3535
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    goto :goto_3

    .line 3537
    :cond_5
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid2:I

    .line 3538
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime2:I

    .line 3539
    iget v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime2:I

    .line 3540
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    iput v7, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUid1:I

    .line 3541
    iput v4, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuUTime1:I

    .line 3542
    iput v5, p1, Landroid/os/BatteryStats$HistoryStepDetails;->appCpuSTime1:I

    .line 3514
    .end local v3    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "totalUTime":I
    .end local v5    # "totalSTime":I
    .end local v6    # "totalTime":I
    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 3546
    .end local v1    # "i":I
    :cond_6
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 3547
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 3548
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    .line 3549
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 3550
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 3551
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 3552
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 3553
    iget-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 3554
    return-void
.end method

.method private computeTimePerLevel([JI)J
    .locals 7
    .param p1, "steps"    # [J
    .param p2, "numSteps"    # I

    .line 12884
    if-gtz p2, :cond_0

    .line 12885
    const-wide/16 v0, -0x1

    return-wide v0

    .line 12887
    :cond_0
    const-wide/16 v0, 0x0

    .line 12888
    .local v0, "total":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, p2, :cond_1

    .line 12889
    aget-wide v3, p1, v2

    const-wide v5, 0xffffffffffL

    and-long/2addr v3, v5

    add-long/2addr v0, v3

    .line 12888
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12891
    .end local v2    # "i":I
    :cond_1
    int-to-long v2, p2

    div-long v2, v0, v2

    return-wide v2
.end method

.method private static detachLongCounterIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)V
    .locals 0
    .param p0, "counter"    # Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 6688
    if-eqz p0, :cond_0

    .line 6689
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->detach()V

    .line 6691
    :cond_0
    return-void
.end method

.method private static detachTimerIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$Timer;)V
    .locals 0
    .param p0, "timer"    # Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 6667
    if-eqz p0, :cond_0

    .line 6668
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->detach()V

    .line 6670
    :cond_0
    return-void
.end method

.method private static excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 4
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    .line 6264
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    .line 6265
    .local v0, "index":I
    if-ltz v0, :cond_2

    .line 6266
    array-length v1, p0

    add-int/lit8 v1, v1, -0x1

    new-array v1, v1, [Ljava/lang/String;

    .line 6267
    .local v1, "newArray":[Ljava/lang/String;
    if-lez v0, :cond_0

    .line 6268
    const/4 v2, 0x0

    invoke-static {p0, v2, v1, v2, v0}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6270
    :cond_0
    array-length v2, p0

    add-int/lit8 v2, v2, -0x1

    if-ge v0, v2, :cond_1

    .line 6271
    add-int/lit8 v2, v0, 0x1

    array-length v3, p0

    sub-int/2addr v3, v0

    add-int/lit8 v3, v3, -0x1

    invoke-static {p0, v2, v1, v0, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6273
    :cond_1
    return-object v1

    .line 6275
    .end local v1    # "newArray":[Ljava/lang/String;
    :cond_2
    return-object p0
.end method

.method private fixPhoneServiceState(II)I
    .locals 2
    .param p1, "state"    # I
    .param p2, "signalBin"    # I

    .line 5334
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 5337
    if-ne p1, v1, :cond_0

    if-lez p2, :cond_0

    .line 5339
    const/4 p1, 0x0

    .line 5343
    :cond_0
    return p1
.end method

.method private getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I
    .locals 1
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 5767
    if-eqz p2, :cond_0

    .line 5768
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v0

    return v0

    .line 5771
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v0

    return v0
.end method

.method private getDeltaModemActivityInfo(Landroid/telephony/ModemActivityInfo;)Landroid/telephony/ModemActivityInfo;
    .locals 10
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    .line 11360
    if-nez p1, :cond_0

    .line 11361
    const/4 v0, 0x0

    return-object v0

    .line 11363
    :cond_0
    const/4 v0, 0x5

    new-array v9, v0, [I

    .line 11364
    .local v9, "txTimeMs":[I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    .line 11365
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    move-result-object v2

    aget v2, v2, v1

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11366
    invoke-virtual {v3}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    move-result-object v3

    aget v3, v3, v1

    sub-int/2addr v2, v3

    aput v2, v9, v1

    .line 11364
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 11368
    .end local v1    # "i":I
    :cond_1
    new-instance v0, Landroid/telephony/ModemActivityInfo;

    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getTimestamp()J

    move-result-wide v2

    .line 11369
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v1

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v4}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v4

    sub-int v4, v1, v4

    .line 11370
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v1

    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v5}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v5

    sub-int v5, v1, v5

    .line 11372
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getRxTimeMillis()I

    move-result v1

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v6}, Landroid/telephony/ModemActivityInfo;->getRxTimeMillis()I

    move-result v6

    sub-int v7, v1, v6

    .line 11373
    invoke-virtual {p1}, Landroid/telephony/ModemActivityInfo;->getEnergyUsed()I

    move-result v1

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    invoke-virtual {v6}, Landroid/telephony/ModemActivityInfo;->getEnergyUsed()I

    move-result v6

    sub-int v8, v1, v6

    move-object v1, v0

    move-object v6, v9

    invoke-direct/range {v1 .. v8}, Landroid/telephony/ModemActivityInfo;-><init>(JII[III)V

    .line 11374
    .local v0, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemActivityInfo:Landroid/telephony/ModemActivityInfo;

    .line 11375
    return-object v0
.end method

.method private getPowerManagerWakeLockLevel(I)I
    .locals 4
    .param p1, "battertStatsWakelockType"    # I

    .line 4496
    const/16 v0, 0x12

    if-eq p1, v0, :cond_0

    const/4 v0, -0x1

    packed-switch p1, :pswitch_data_0

    .line 4514
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Illegal wakelock type in batterystats: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4515
    return v0

    .line 4510
    :pswitch_0
    const-string v1, "BatteryStatsImpl"

    const-string v2, "Illegal window wakelock type observed in batterystats."

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4511
    return v0

    .line 4503
    :pswitch_1
    const/16 v0, 0x1a

    return v0

    .line 4499
    :pswitch_2
    const/4 v0, 0x1

    return v0

    .line 4506
    :cond_0
    const/16 v0, 0x80

    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method private static includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
    .locals 3
    .param p0, "array"    # [Ljava/lang/String;
    .param p1, "str"    # Ljava/lang/String;

    .line 6254
    invoke-static {p0, p1}, Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v0

    if-ltz v0, :cond_0

    .line 6255
    return-object p0

    .line 6257
    :cond_0
    array-length v0, p0

    add-int/lit8 v0, v0, 0x1

    new-array v0, v0, [Ljava/lang/String;

    .line 6258
    .local v0, "newArray":[Ljava/lang/String;
    array-length v1, p0

    const/4 v2, 0x0

    invoke-static {p0, v2, v0, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6259
    array-length v1, p0

    aput-object p1, v0, v1

    .line 6260
    return-object v0
.end method

.method private init(Lcom/android/internal/os/BatteryStatsImpl$Clocks;)V
    .locals 0
    .param p1, "clocks"    # Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 1069
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 1070
    return-void
.end method

.method private initActiveHistoryEventsLocked(JJ)V
    .locals 16
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    move-object/from16 v8, p0

    .line 10993
    const/4 v9, 0x0

    move v0, v9

    .local v0, "i":I
    :goto_0
    move v10, v0

    .end local v0    # "i":I
    .local v10, "i":I
    const/16 v0, 0x16

    if-ge v10, v0, :cond_4

    .line 10994
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    if-ne v10, v0, :cond_0

    .line 10996
    goto :goto_3

    .line 10998
    :cond_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v10}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v11

    .line 10999
    .local v11, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-nez v11, :cond_1

    .line 11000
    goto :goto_3

    .line 11002
    :cond_1
    invoke-virtual {v11}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v12

    :goto_1
    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object v13, v0

    check-cast v13, Ljava/util/Map$Entry;

    .line 11003
    .local v13, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v13}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v14, v0

    check-cast v14, Landroid/util/SparseIntArray;

    .line 11004
    .local v14, "uids":Landroid/util/SparseIntArray;
    move v0, v9

    .local v0, "j":I
    :goto_2
    move v15, v0

    .end local v0    # "j":I
    .local v15, "j":I
    invoke-virtual {v14}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v15, v0, :cond_2

    .line 11005
    invoke-interface {v13}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object v6, v0

    check-cast v6, Ljava/lang/String;

    .line 11006
    invoke-virtual {v14, v15}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v7

    .line 11005
    move-object v0, v8

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    move v5, v10

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 11004
    add-int/lit8 v0, v15, 0x1

    .end local v15    # "j":I
    .restart local v0    # "j":I
    goto :goto_2

    .line 11008
    .end local v0    # "j":I
    .end local v13    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v14    # "uids":Landroid/util/SparseIntArray;
    :cond_2
    goto :goto_1

    .line 10993
    .end local v11    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    :cond_3
    :goto_3
    add-int/lit8 v0, v10, 0x1

    .end local v10    # "i":I
    .local v0, "i":I
    goto :goto_0

    .line 11010
    .end local v0    # "i":I
    :cond_4
    return-void
.end method

.method private initKernelSingleUidTimeReaderLocked()Z
    .locals 3
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 544
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    const/4 v1, 0x0

    if-nez v0, :cond_3

    .line 545
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    .line 546
    return v1

    .line 548
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    if-nez v0, :cond_1

    .line 549
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0, v2}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    .line 551
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    if-eqz v0, :cond_2

    .line 552
    new-instance v0, Lcom/android/internal/os/KernelSingleUidTimeReader;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    array-length v2, v2

    invoke-direct {v0, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;-><init>(I)V

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    goto :goto_0

    .line 554
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 555
    return v1

    .line 558
    :cond_3
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->allUidTimesAvailable()Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_4

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    .line 559
    invoke-virtual {v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->singleUidCpuTimesAvailable()Z

    move-result v0

    if-eqz v0, :cond_4

    move v1, v2

    nop

    :cond_4
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    .line 560
    return v2
.end method

.method public static isOnBattery(II)Z
    .locals 1
    .param p0, "plugType"    # I
    .param p1, "status"    # I

    .line 12815
    const/4 v0, 0x1

    if-nez p0, :cond_0

    if-eq p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public static synthetic lambda$readKernelUidCpuActiveTimesLocked$2(Lcom/android/internal/os/BatteryStatsImpl;ZIJ)V
    .locals 3
    .param p1, "onBattery"    # Z
    .param p2, "uid"    # I
    .param p3, "cpuActiveTimesMs"    # J

    .line 12354
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 12355
    invoke-static {p2}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 12356
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;->removeUid(I)V

    .line 12357
    const-string v0, "BatteryStatsImpl"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got active times for an isolated uid with no mapping: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12358
    return-void

    .line 12360
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 12361
    const-string v0, "BatteryStatsImpl"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got active times for an invalid user\'s uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12362
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;->removeUid(I)V

    .line 12363
    return-void

    .line 12365
    :cond_1
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 12366
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, p3, p4, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12367
    return-void
.end method

.method public static synthetic lambda$readKernelUidCpuClusterTimesLocked$3(Lcom/android/internal/os/BatteryStatsImpl;ZI[J)V
    .locals 3
    .param p1, "onBattery"    # Z
    .param p2, "uid"    # I
    .param p3, "cpuClusterTimesMs"    # [J

    .line 12383
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 12384
    invoke-static {p2}, Landroid/os/Process;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 12385
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;->removeUid(I)V

    .line 12386
    const-string v0, "BatteryStatsImpl"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got cluster times for an isolated uid with no mapping: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12387
    return-void

    .line 12389
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 12390
    const-string v0, "BatteryStatsImpl"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Got cluster times for an invalid user\'s uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12391
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;->removeUid(I)V

    .line 12392
    return-void

    .line 12394
    :cond_1
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 12395
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v1, p3, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12396
    return-void
.end method

.method public static synthetic lambda$readKernelUidCpuFreqTimesLocked$1(Lcom/android/internal/os/BatteryStatsImpl;ZZZIII[J)V
    .locals 27
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z
    .param p3, "perClusterTimesAvailable"    # Z
    .param p4, "numClusters"    # I
    .param p5, "numWakelocks"    # I
    .param p6, "uid"    # I
    .param p7, "cpuFreqTimeMs"    # [J

    move-object/from16 v0, p0

    move/from16 v1, p1

    move/from16 v2, p4

    .line 12247
    move-object/from16 v4, p7

    move/from16 v5, p6

    invoke-virtual {v0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 12248
    .end local p6    # "uid":I
    .local v5, "uid":I
    invoke-static {v5}, Landroid/os/Process;->isIsolated(I)Z

    move-result v6

    if-eqz v6, :cond_0

    .line 12249
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-virtual {v6, v5}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->removeUid(I)V

    .line 12250
    const-string v6, "BatteryStatsImpl"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Got freq readings for an isolated uid with no mapping: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12251
    return-void

    .line 12253
    :cond_0
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    invoke-virtual {v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v6

    if-nez v6, :cond_1

    .line 12254
    const-string v6, "BatteryStatsImpl"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Got freq readings for an invalid user\'s uid "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12255
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-virtual {v6, v5}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->removeUid(I)V

    .line 12256
    return-void

    .line 12258
    :cond_1
    invoke-virtual {v0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    .line 12259
    .local v6, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v7, :cond_2

    iget-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v7

    array-length v8, v4

    if-eq v7, v8, :cond_3

    .line 12260
    :cond_2
    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 12262
    :cond_3
    iget-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-virtual {v7, v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12263
    iget-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v7, :cond_4

    iget-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 12264
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->getSize()I

    move-result v7

    array-length v8, v4

    if-eq v7, v8, :cond_5

    .line 12265
    :cond_4
    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 12268
    :cond_5
    iget-object v7, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move/from16 v8, p2

    invoke-virtual {v7, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->addCountLocked([JZ)V

    .line 12270
    if-eqz p3, :cond_f

    .line 12271
    iget-object v9, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v9, :cond_6

    iget-object v9, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v9, v9

    if-eq v9, v2, :cond_7

    .line 12273
    :cond_6
    new-array v9, v2, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v9, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 12275
    :cond_7
    if-lez p5, :cond_8

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-nez v9, :cond_8

    .line 12276
    new-array v9, v2, [[J

    iput-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    .line 12279
    :cond_8
    const/4 v9, 0x0

    .line 12280
    .local v9, "freqIndex":I
    move v11, v9

    const/4 v9, 0x0

    .local v9, "cluster":I
    .local v11, "freqIndex":I
    :goto_0
    if-ge v9, v2, :cond_f

    .line 12281
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v12, v9}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v12

    .line 12282
    .local v12, "speedsInCluster":I
    iget-object v13, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v9

    if-eqz v13, :cond_9

    iget-object v13, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v9

    array-length v13, v13

    if-eq v13, v12, :cond_a

    .line 12284
    :cond_9
    iget-object v13, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v14, v12, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v14, v13, v9

    .line 12287
    :cond_a
    if-lez p5, :cond_b

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v13, v13, v9

    if-nez v13, :cond_b

    .line 12288
    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    new-array v14, v12, [J

    aput-object v14, v13, v9

    .line 12290
    :cond_b
    iget-object v13, v6, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v13, v13, v9

    .line 12291
    .local v13, "cpuTimesUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    move v14, v11

    const/4 v11, 0x0

    .local v11, "speed":I
    .local v14, "freqIndex":I
    :goto_1
    if-ge v11, v12, :cond_e

    .line 12292
    aget-object v15, v13, v11

    if-nez v15, :cond_c

    .line 12293
    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v15, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v15, v13, v11

    .line 12296
    :cond_c
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    const-wide/16 v16, 0x3e8

    if-eqz v10, :cond_d

    .line 12297
    aget-wide v18, v4, v14

    mul-long v18, v18, v16

    const-wide/16 v20, 0x32

    mul-long v18, v18, v20

    const-wide/16 v20, 0x64

    div-long v18, v18, v20

    .line 12299
    .local v18, "appAllocationUs":J
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v10, v10, v9

    aget-wide v20, v10, v11

    aget-wide v22, v4, v14

    mul-long v22, v22, v16

    sub-long v22, v22, v18

    add-long v20, v20, v22

    aput-wide v20, v10, v11

    goto :goto_2

    .line 12302
    .end local v18    # "appAllocationUs":J
    :cond_d
    aget-wide v18, v4, v14

    mul-long v18, v18, v16

    .restart local v18    # "appAllocationUs":J
    :goto_2
    move-wide/from16 v24, v18

    .line 12304
    .end local v18    # "appAllocationUs":J
    .local v24, "appAllocationUs":J
    aget-object v10, v13, v11

    move-wide/from16 v2, v24

    invoke-virtual {v10, v2, v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12305
    .end local v24    # "appAllocationUs":J
    .local v2, "appAllocationUs":J
    add-int/lit8 v14, v14, 0x1

    .line 12291
    .end local v2    # "appAllocationUs":J
    add-int/lit8 v11, v11, 0x1

    move/from16 v2, p4

    goto :goto_1

    .line 12280
    .end local v11    # "speed":I
    .end local v12    # "speedsInCluster":I
    .end local v13    # "cpuTimesUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :cond_e
    add-int/lit8 v9, v9, 0x1

    move v11, v14

    move/from16 v2, p4

    goto :goto_0

    .line 12309
    .end local v9    # "cluster":I
    .end local v14    # "freqIndex":I
    :cond_f
    return-void
.end method

.method public static synthetic lambda$readKernelUidCpuTimesLocked$0(Lcom/android/internal/os/BatteryStatsImpl;IZLandroid/util/SparseLongArray;IJJ)V
    .locals 17
    .param p1, "numWakelocks"    # I
    .param p2, "onBattery"    # Z
    .param p3, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p4, "uid"    # I
    .param p5, "userTimeUs"    # J
    .param p7, "systemTimeUs"    # J

    move-object/from16 v0, p0

    move/from16 v1, p2

    move-object/from16 v2, p3

    .line 12137
    move/from16 v7, p4

    invoke-virtual {v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 12138
    .end local p4    # "uid":I
    .local v7, "uid":I
    invoke-static {v7}, Landroid/os/Process;->isIsolated(I)Z

    move-result v8

    if-eqz v8, :cond_0

    .line 12141
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/KernelUidCpuTimeReader;->removeUid(I)V

    .line 12142
    const-string v8, "BatteryStatsImpl"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got readings for an isolated uid with no mapping: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12143
    return-void

    .line 12145
    :cond_0
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    invoke-virtual {v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->exists(I)Z

    move-result v8

    if-nez v8, :cond_1

    .line 12146
    const-string v8, "BatteryStatsImpl"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got readings for an invalid user\'s uid "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12147
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/KernelUidCpuTimeReader;->removeUid(I)V

    .line 12148
    return-void

    .line 12150
    :cond_1
    invoke-virtual {v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    .line 12153
    .local v8, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    add-long v9, v9, p5

    iput-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12154
    iget-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    add-long v9, v9, p7

    iput-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12156
    const/4 v9, 0x0

    .line 12166
    .local v9, "sb":Ljava/lang/StringBuilder;
    if-lez p1, :cond_2

    .line 12170
    const-wide/16 v11, 0x32

    mul-long v13, p5, v11

    const-wide/16 v15, 0x64

    div-long v3, v13, v15

    .line 12171
    .end local p5    # "userTimeUs":J
    .local v3, "userTimeUs":J
    mul-long v11, v11, p7

    div-long v5, v11, v15

    .end local p7    # "systemTimeUs":J
    .local v5, "systemTimeUs":J
    goto :goto_0

    .line 12174
    .end local v3    # "userTimeUs":J
    .end local v5    # "systemTimeUs":J
    .restart local p5    # "userTimeUs":J
    .restart local p7    # "systemTimeUs":J
    :cond_2
    move-wide/from16 v3, p5

    move-wide/from16 v5, p7

    .end local p5    # "userTimeUs":J
    .end local p7    # "systemTimeUs":J
    .restart local v3    # "userTimeUs":J
    .restart local v5    # "systemTimeUs":J
    :goto_0
    if-eqz v9, :cond_3

    .line 12175
    const-string v11, "  adding to uid="

    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v11, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v11, ": u="

    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12176
    const-wide/16 v11, 0x3e8

    div-long v13, v3, v11

    invoke-static {v13, v14, v9}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 12177
    const-string v13, " s="

    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12178
    div-long v11, v5, v11

    invoke-static {v11, v12, v9}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 12179
    const-string v11, "BatteryStatsImpl"

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12182
    :cond_3
    iget-object v11, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v11, v3, v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12183
    iget-object v11, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v11, v5, v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12184
    if-eqz v2, :cond_4

    .line 12185
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v11

    add-long v12, v3, v5

    invoke-virtual {v2, v11, v12, v13}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 12187
    :cond_4
    return-void
.end method

.method private noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V
    .locals 20
    .param p1, "historyItem"    # I
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;
    .param p4, "uid"    # I

    move-object/from16 v8, p0

    move/from16 v9, p1

    move-object/from16 v10, p2

    move-object/from16 v11, p3

    .line 4248
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_0

    .line 4249
    return-void

    .line 4252
    :cond_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4253
    .local v12, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4255
    .local v14, "uptime":J
    const/4 v7, 0x0

    if-eqz v11, :cond_5

    .line 4256
    move/from16 v1, p4

    move v0, v7

    .end local p4    # "uid":I
    .local v0, "i":I
    .local v1, "uid":I
    :goto_0
    move v6, v0

    .end local v0    # "i":I
    .local v6, "i":I
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    if-ge v6, v0, :cond_2

    .line 4257
    invoke-virtual {v11, v6}, Landroid/os/WorkSource;->get(I)I

    move-result v0

    invoke-virtual {v8, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 4258
    .end local v1    # "uid":I
    .local v5, "uid":I
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v5, v7}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4259
    move-object v0, v8

    move-wide v1, v12

    move-wide v3, v14

    move/from16 v16, v5

    move v5, v9

    .end local v5    # "uid":I
    .local v16, "uid":I
    move/from16 v17, v6

    move-object v6, v10

    .end local v6    # "i":I
    .local v17, "i":I
    move-wide/from16 v18, v14

    move v14, v7

    move/from16 v7, v16

    .end local v14    # "uptime":J
    .local v18, "uptime":J
    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_1

    .line 4256
    .end local v16    # "uid":I
    .end local v17    # "i":I
    .end local v18    # "uptime":J
    .restart local v5    # "uid":I
    .restart local v6    # "i":I
    .restart local v14    # "uptime":J
    :cond_1
    move/from16 v16, v5

    move/from16 v17, v6

    move-wide/from16 v18, v14

    move v14, v7

    .end local v5    # "uid":I
    .end local v6    # "i":I
    .end local v14    # "uptime":J
    .restart local v16    # "uid":I
    .restart local v17    # "i":I
    .restart local v18    # "uptime":J
    :goto_1
    add-int/lit8 v0, v17, 0x1

    .end local v17    # "i":I
    .restart local v0    # "i":I
    move v7, v14

    move/from16 v1, v16

    move-wide/from16 v14, v18

    goto :goto_0

    .line 4263
    .end local v0    # "i":I
    .end local v16    # "uid":I
    .end local v18    # "uptime":J
    .restart local v1    # "uid":I
    .restart local v14    # "uptime":J
    :cond_2
    move-wide/from16 v18, v14

    move v14, v7

    .end local v14    # "uptime":J
    .restart local v18    # "uptime":J
    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v15

    .line 4264
    .local v15, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v15, :cond_4

    .line 4265
    move v0, v14

    .restart local v0    # "i":I
    :goto_2
    move v7, v0

    .end local v0    # "i":I
    .local v7, "i":I
    invoke-interface {v15}, Ljava/util/List;->size()I

    move-result v0

    if-ge v7, v0, :cond_4

    .line 4266
    invoke-interface {v15, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v0

    invoke-virtual {v8, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 4267
    .end local v1    # "uid":I
    .local v6, "uid":I
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v6, v14}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 4268
    move-object v0, v8

    move-wide v1, v12

    move-wide/from16 v3, v18

    move v5, v9

    move/from16 v16, v6

    move-object v6, v10

    .end local v6    # "uid":I
    .restart local v16    # "uid":I
    move/from16 v17, v7

    move/from16 v7, v16

    .end local v7    # "i":I
    .restart local v17    # "i":I
    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_3

    .line 4265
    .end local v16    # "uid":I
    .end local v17    # "i":I
    .restart local v6    # "uid":I
    .restart local v7    # "i":I
    :cond_3
    move/from16 v16, v6

    move/from16 v17, v7

    .end local v6    # "uid":I
    .end local v7    # "i":I
    .restart local v16    # "uid":I
    .restart local v17    # "i":I
    :goto_3
    add-int/lit8 v0, v17, 0x1

    .end local v17    # "i":I
    .restart local v0    # "i":I
    move/from16 v1, v16

    goto :goto_2

    .line 4272
    .end local v0    # "i":I
    .end local v15    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v16    # "uid":I
    .restart local v1    # "uid":I
    :cond_4
    nop

    .line 4279
    move v15, v1

    goto :goto_4

    .line 4273
    .end local v1    # "uid":I
    .end local v18    # "uptime":J
    .restart local v14    # "uptime":J
    .restart local p4    # "uid":I
    :cond_5
    move-wide/from16 v18, v14

    move v14, v7

    .end local v14    # "uptime":J
    .restart local v18    # "uptime":J
    move/from16 v0, p4

    invoke-virtual {v8, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v15

    .line 4275
    .end local p4    # "uid":I
    .local v15, "uid":I
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v0, v9, v10, v15, v14}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 4276
    move-object v0, v8

    move-wide v1, v12

    move-wide/from16 v3, v18

    move v5, v9

    move-object v6, v10

    move v7, v15

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4279
    :cond_6
    :goto_4
    return-void
.end method

.method private noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V
    .locals 7
    .param p1, "workChain"    # Landroid/os/WorkSource$WorkChain;
    .param p2, "uid"    # I
    .param p3, "isUnoptimized"    # Z

    .line 5722
    invoke-direct {p0, p2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p2

    .line 5723
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5724
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5725
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-nez v4, :cond_0

    .line 5726
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x100000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5729
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5730
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5732
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5733
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanStartedLocked(JZ)V

    .line 5734
    return-void
.end method

.method private noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V
    .locals 7
    .param p1, "workChain"    # Landroid/os/WorkSource$WorkChain;
    .param p2, "uid"    # I
    .param p3, "isUnoptimized"    # Z

    .line 5752
    invoke-direct {p0, p2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p2

    .line 5753
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5754
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5755
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5756
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-nez v4, :cond_0

    .line 5757
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x100001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5760
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5761
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5763
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanStoppedLocked(JZ)V

    .line 5764
    return-void
.end method

.method private noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 15
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    move-object v8, p0

    .line 4688
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4689
    .local v9, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4690
    .local v11, "uptime":J
    if-nez p2, :cond_0

    .line 4691
    move-object/from16 v0, p1

    .line 4693
    .end local p2    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    move-object v13, v0

    goto :goto_0

    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p2    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v13, p2

    .end local p2    # "historyName":Ljava/lang/String;
    .local v13, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4014

    const/4 v2, 0x0

    move/from16 v14, p3

    invoke-virtual {v0, v1, v13, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4695
    return-void

    .line 4697
    :cond_1
    const/16 v5, 0x4014

    move-object v0, v8

    move-wide v1, v9

    move-wide v3, v11

    move-object v6, v13

    move v7, v14

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4699
    return-void
.end method

.method private noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 15
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    move-object v8, p0

    .line 4642
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4643
    .local v9, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4644
    .local v11, "uptime":J
    if-nez p2, :cond_0

    .line 4645
    move-object/from16 v0, p1

    .line 4647
    .end local p2    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    move-object v13, v0

    goto :goto_0

    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p2    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v13, p2

    .end local p2    # "historyName":Ljava/lang/String;
    .local v13, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8014

    const/4 v2, 0x0

    move/from16 v14, p3

    invoke-virtual {v0, v1, v13, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4649
    return-void

    .line 4651
    :cond_1
    const v5, 0x8014

    move-object v0, v8

    move-wide v1, v9

    move-wide v3, v11

    move-object v6, v13

    move v7, v14

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4653
    return-void
.end method

.method private noteMobileRadioApWakeupLocked(JJI)V
    .locals 8
    .param p1, "elapsedRealtimeMillis"    # J
    .param p3, "uptimeMillis"    # J
    .param p5, "uid"    # I

    .line 5061
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p5

    .line 5062
    const-string v6, ""

    const/16 v5, 0x13

    move-object v0, p0

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5064
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteMobileRadioApWakeupLocked()V

    .line 5065
    return-void
.end method

.method private noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V
    .locals 8
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 4836
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p1

    .line 4837
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4838
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4839
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    if-nez v4, :cond_0

    .line 4840
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x20000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4843
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4845
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    const/4 v5, 0x1

    add-int/2addr v4, v5

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    .line 4847
    const/4 v4, 0x6

    if-nez p2, :cond_1

    .line 4848
    const/4 v6, 0x0

    invoke-static {v4, p1, v6, v5}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    goto :goto_0

    .line 4851
    :cond_1
    nop

    .line 4852
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v6

    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v7

    .line 4851
    invoke-static {v4, v6, v7, v5}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;I)I

    .line 4856
    :goto_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartGps(J)V

    .line 4857
    return-void
.end method

.method private noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V
    .locals 8
    .param p1, "uid"    # I
    .param p2, "workChain"    # Landroid/os/WorkSource$WorkChain;

    .line 4860
    invoke-direct {p0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getAttributionUid(ILandroid/os/WorkSource$WorkChain;)I

    move-result p1

    .line 4861
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4862
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4863
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    .line 4864
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    if-nez v4, :cond_0

    .line 4865
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x20000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4868
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4869
    const/4 v4, -0x1

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(I)V

    .line 4870
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 4873
    :cond_0
    const/4 v4, 0x0

    const/4 v5, 0x6

    if-nez p2, :cond_1

    .line 4874
    const/4 v6, 0x0

    invoke-static {v5, p1, v6, v4}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    goto :goto_0

    .line 4877
    :cond_1
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v6

    .line 4878
    invoke-virtual {p2}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v7

    .line 4877
    invoke-static {v5, v6, v7, v4}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;I)I

    .line 4881
    :goto_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopGps(J)V

    .line 4882
    return-void
.end method

.method private noteUsbConnectionStateLocked(Z)V
    .locals 5
    .param p1, "connected"    # Z

    .line 5309
    if-eqz p1, :cond_0

    const/4 v0, 0x2

    goto :goto_0

    :cond_0
    const/4 v0, 0x1

    .line 5310
    .local v0, "newState":I
    :goto_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    if-eq v1, v0, :cond_2

    .line 5311
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    .line 5312
    if-eqz p1, :cond_1

    .line 5313
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v3, 0x40000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    goto :goto_1

    .line 5315
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v3, -0x40001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5317
    :goto_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5319
    :cond_2
    return-void
.end method

.method private noteWifiRadioApWakeupLocked(JJI)V
    .locals 8
    .param p1, "elapsedRealtimeMillis"    # J
    .param p3, "uptimeMillis"    # J
    .param p5, "uid"    # I

    .line 5828
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p5

    .line 5829
    const-string v6, ""

    const/16 v5, 0x13

    move-object v0, p0

    move-wide v1, p1

    move-wide v3, p3

    move v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5831
    invoke-virtual {p0, p5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRadioApWakeupLocked()V

    .line 5832
    return-void
.end method

.method private readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "batteryLevelInt"    # I
    .param p2, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3444
    const/high16 v0, -0x2000000

    and-int/2addr v0, p1

    ushr-int/lit8 v0, v0, 0x19

    int-to-byte v0, v0

    iput-byte v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 3445
    const v0, 0x1ff8000

    and-int/2addr v0, p1

    ushr-int/lit8 v0, v0, 0xf

    int-to-short v0, v0

    iput-short v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 3446
    and-int/lit16 v0, p1, 0x7ffe

    ushr-int/lit8 v0, v0, 0x1

    int-to-char v0, v0

    iput-char v0, p2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 3447
    return-void
.end method

.method private readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 7
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;

    .line 10474
    :goto_0
    :try_start_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v0

    move v1, v0

    .line 10474
    .local v1, "type":I
    const/4 v2, 0x1

    const/4 v3, 0x2

    if-eq v0, v3, :cond_0

    if-eq v1, v2, :cond_0

    .line 10474
    .end local v1    # "type":I
    goto :goto_0

    .line 10479
    .restart local v1    # "type":I
    :cond_0
    if-ne v1, v3, :cond_5

    .line 10483
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v0

    .line 10484
    .local v0, "outerDepth":I
    :cond_1
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v3

    move v1, v3

    if-eq v3, v2, :cond_6

    const/4 v3, 0x3

    if-ne v1, v3, :cond_2

    .line 10485
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v4

    if-le v4, v0, :cond_6

    .line 10486
    :cond_2
    if-eq v1, v3, :cond_1

    const/4 v3, 0x4

    if-ne v1, v3, :cond_3

    .line 10487
    goto :goto_1

    .line 10490
    :cond_3
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v3

    .line 10491
    .local v3, "tagName":Ljava/lang/String;
    const-string v4, "item"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 10492
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V

    goto :goto_2

    .line 10494
    :cond_4
    const-string v4, "BatteryStatsImpl"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unknown element under <daily-items>: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10495
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    .line 10494
    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10496
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10498
    .end local v3    # "tagName":Ljava/lang/String;
    :goto_2
    goto :goto_1

    .line 10480
    .end local v0    # "outerDepth":I
    :cond_5
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string/jumbo v2, "no start tag found"

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_0
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_4
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10510
    .end local v1    # "type":I
    :catch_0
    move-exception v0

    .line 10511
    .local v0, "e":Ljava/lang/IndexOutOfBoundsException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed parsing daily "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v0    # "e":Ljava/lang/IndexOutOfBoundsException;
    goto/16 :goto_4

    .line 10508
    :catch_1
    move-exception v0

    .line 10509
    .local v0, "e":Ljava/io/IOException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed parsing daily "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v0    # "e":Ljava/io/IOException;
    goto :goto_3

    .line 10506
    :catch_2
    move-exception v0

    .line 10507
    .local v0, "e":Lorg/xmlpull/v1/XmlPullParserException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed parsing daily "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v0    # "e":Lorg/xmlpull/v1/XmlPullParserException;
    goto :goto_3

    .line 10504
    :catch_3
    move-exception v0

    .line 10505
    .local v0, "e":Ljava/lang/NumberFormatException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed parsing daily "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v0    # "e":Ljava/lang/NumberFormatException;
    goto :goto_3

    .line 10502
    :catch_4
    move-exception v0

    .line 10503
    .local v0, "e":Ljava/lang/NullPointerException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed parsing daily "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v0    # "e":Ljava/lang/NullPointerException;
    goto :goto_3

    .line 10500
    :catch_5
    move-exception v0

    .line 10501
    .local v0, "e":Ljava/lang/IllegalStateException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed parsing daily "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10512
    .end local v0    # "e":Ljava/lang/IllegalStateException;
    :cond_6
    :goto_3
    nop

    .line 10513
    :goto_4
    return-void
.end method

.method private readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V
    .locals 1
    .param p1, "index"    # I
    .param p2, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    .line 3172
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    aget-object v0, v0, p1

    iput-object v0, p2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3173
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    aget v0, v0, p1

    iput v0, p2, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 3174
    iput p1, p2, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 3175
    return-void
.end method

.method private readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;
    .locals 4
    .param p1, "ifaces"    # [Ljava/lang/String;

    .line 11082
    :try_start_0
    invoke-static {p1}, Lcom/android/internal/util/ArrayUtils;->isEmpty([Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 11083
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsFactory:Lcom/android/internal/net/NetworkStatsFactory;

    const/4 v1, -0x1

    const/4 v2, 0x0

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11084
    invoke-interface {v3}, Landroid/util/Pools$Pool;->acquire()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/net/NetworkStats;

    .line 11083
    invoke-virtual {v0, v1, p1, v2, v3}, Lcom/android/internal/net/NetworkStatsFactory;->readNetworkStatsDetail(I[Ljava/lang/String;ILandroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v0
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    .line 11088
    :cond_0
    goto :goto_0

    .line 11086
    :catch_0
    move-exception v0

    .line 11087
    .local v0, "e":Ljava/io/IOException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "failed to read network stats for ifaces: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {p1}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11089
    .end local v0    # "e":Ljava/io/IOException;
    :goto_0
    const/4 v0, 0x0

    return-object v0
.end method

.method private recordCurrentTimeChangeLocked(JJJ)V
    .locals 3
    .param p1, "currentTime"    # J
    .param p3, "elapsedRealtimeMs"    # J
    .param p5, "uptimeMs"    # J

    .line 12589
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-eqz v0, :cond_0

    .line 12590
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput-wide p1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12591
    const/4 v0, 0x5

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, p3, p4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12592
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12594
    :cond_0
    return-void
.end method

.method private recordShutdownLocked(JJ)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 12597
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-eqz v0, :cond_0

    .line 12598
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12599
    const/16 v0, 0x8

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12600
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12602
    :cond_0
    return-void
.end method

.method private registerUsbStateReceiver(Landroid/content/Context;)V
    .locals 4
    .param p1, "context"    # Landroid/content/Context;

    .line 5287
    new-instance v0, Landroid/content/IntentFilter;

    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V

    .line 5288
    .local v0, "usbStateFilter":Landroid/content/IntentFilter;
    const-string v1, "android.hardware.usb.action.USB_STATE"

    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 5289
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$1;

    invoke-direct {v1, p0}, Lcom/android/internal/os/BatteryStatsImpl$1;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 5298
    monitor-enter p0

    .line 5299
    :try_start_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUsbDataState:I

    if-nez v1, :cond_1

    .line 5300
    const/4 v1, 0x0

    invoke-virtual {p1, v1, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v1

    .line 5301
    .local v1, "usbState":Landroid/content/Intent;
    const/4 v2, 0x0

    if-eqz v1, :cond_0

    const-string v3, "connected"

    invoke-virtual {v1, v3, v2}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v3

    if-eqz v3, :cond_0

    const/4 v2, 0x1

    nop

    .line 5303
    .local v2, "initState":Z
    :cond_0
    invoke-direct {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteUsbConnectionStateLocked(Z)V

    .line 5305
    .end local v1    # "usbState":Landroid/content/Intent;
    .end local v2    # "initState":Z
    :cond_1
    monitor-exit p0

    .line 5306
    return-void

    .line 5305
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private reportChangesToStatsLog(Landroid/os/BatteryStats$HistoryItem;III)V
    .locals 1
    .param p1, "recentPast"    # Landroid/os/BatteryStats$HistoryItem;
    .param p2, "status"    # I
    .param p3, "plugType"    # I
    .param p4, "level"    # I

    .line 12823
    if-eqz p1, :cond_0

    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-eq v0, p2, :cond_1

    .line 12824
    :cond_0
    const/16 v0, 0x1f

    invoke-static {v0, p2}, Landroid/util/StatsLog;->write(II)I

    .line 12826
    :cond_1
    if-eqz p1, :cond_2

    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-eq v0, p3, :cond_3

    .line 12827
    :cond_2
    const/16 v0, 0x20

    invoke-static {v0, p3}, Landroid/util/StatsLog;->write(II)I

    .line 12829
    :cond_3
    if-eqz p1, :cond_4

    iget-byte v0, p1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-eq v0, p4, :cond_5

    .line 12830
    :cond_4
    const/16 v0, 0x1e

    invoke-static {v0, p4}, Landroid/util/StatsLog;->write(II)I

    .line 12832
    :cond_5
    return-void
.end method

.method private requestImmediateCpuUpdate()V
    .locals 3

    .line 4324
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    const-wide/16 v1, 0x0

    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    .line 4325
    return-void
.end method

.method private requestWakelockCpuUpdate()V
    .locals 3

    .line 4320
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    const-wide/16 v1, 0x1388

    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToWakelockChange(J)Ljava/util/concurrent/Future;

    .line 4321
    return-void
.end method

.method private resetAllStatsLocked()V
    .locals 15

    .line 10861
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 10862
    .local v0, "uptimeMillis":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 10863
    .local v2, "elapsedRealtimeMillis":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 10864
    const-wide/16 v5, 0x3e8

    mul-long v7, v0, v5

    mul-long v9, v2, v5

    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->initTimes(JJ)V

    .line 10865
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10866
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10867
    move v7, v4

    .local v7, "i":I
    :goto_0
    const/4 v8, 0x5

    if-ge v7, v8, :cond_0

    .line 10868
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v8, v8, v7

    invoke-virtual {v8, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10867
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 10871
    .end local v7    # "i":I
    :cond_0
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const/4 v9, -0x1

    if-eqz v7, :cond_1

    .line 10872
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v7}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v10

    double-to-int v7, v10

    iput v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    goto :goto_1

    .line 10874
    :cond_1
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 10876
    :goto_1
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 10877
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 10878
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10879
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10880
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    .line 10881
    const-wide/16 v9, 0x0

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 10882
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 10883
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10884
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10885
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10886
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10887
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10888
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10889
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10890
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10891
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10892
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10893
    move v7, v4

    .restart local v7    # "i":I
    :goto_2
    sget v11, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    if-ge v7, v11, :cond_2

    .line 10894
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10893
    add-int/lit8 v7, v7, 0x1

    goto :goto_2

    .line 10896
    .end local v7    # "i":I
    :cond_2
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10897
    move v7, v4

    .restart local v7    # "i":I
    :goto_3
    const/16 v11, 0x15

    if-ge v7, v11, :cond_3

    .line 10898
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10897
    add-int/lit8 v7, v7, 0x1

    goto :goto_3

    .line 10900
    .end local v7    # "i":I
    :cond_3
    move v7, v4

    .restart local v7    # "i":I
    :goto_4
    const/16 v11, 0xa

    if-ge v7, v11, :cond_4

    .line 10901
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10902
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10900
    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    .line 10904
    .end local v7    # "i":I
    :cond_4
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10905
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10906
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10907
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10908
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10909
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10910
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10911
    move v7, v4

    .restart local v7    # "i":I
    :goto_5
    const/16 v11, 0x8

    if-ge v7, v11, :cond_5

    .line 10912
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10911
    add-int/lit8 v7, v7, 0x1

    goto :goto_5

    .line 10914
    .end local v7    # "i":I
    :cond_5
    move v7, v4

    .restart local v7    # "i":I
    :goto_6
    const/16 v11, 0xd

    if-ge v7, v11, :cond_6

    .line 10915
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10914
    add-int/lit8 v7, v7, 0x1

    goto :goto_6

    .line 10917
    .end local v7    # "i":I
    :cond_6
    move v7, v4

    .restart local v7    # "i":I
    :goto_7
    if-ge v7, v8, :cond_7

    .line 10918
    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v11, v11, v7

    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10917
    add-int/lit8 v7, v7, 0x1

    goto :goto_7

    .line 10920
    .end local v7    # "i":I
    :cond_7
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10921
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10922
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10923
    move v7, v4

    .restart local v7    # "i":I
    :goto_8
    const/4 v8, 0x2

    if-ge v7, v8, :cond_8

    .line 10924
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v8, v8, v7

    invoke-virtual {v8, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->reset(Z)Z

    .line 10923
    add-int/lit8 v7, v7, 0x1

    goto :goto_8

    .line 10926
    .end local v7    # "i":I
    :cond_8
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10927
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->reset(Z)V

    .line 10928
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 10930
    move v7, v4

    .restart local v7    # "i":I
    :goto_9
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v8

    if-ge v7, v8, :cond_a

    .line 10931
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    mul-long v11, v0, v5

    mul-long v13, v2, v5

    invoke-virtual {v8, v11, v12, v13, v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->reset(JJ)Z

    move-result v8

    if-eqz v8, :cond_9

    .line 10932
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    iget-object v11, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v11, v7}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v11

    invoke-virtual {v8, v11}, Landroid/util/SparseArray;->remove(I)V

    .line 10933
    add-int/lit8 v7, v7, -0x1

    .line 10930
    :cond_9
    add-int/lit8 v7, v7, 0x1

    goto :goto_9

    .line 10937
    .end local v7    # "i":I
    :cond_a
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_c

    .line 10938
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_a
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_b

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10939
    .local v6, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10940
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_a

    .line 10941
    :cond_b
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10943
    :cond_c
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_e

    .line 10944
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_b
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_d

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10945
    .restart local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10946
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_b

    .line 10947
    :cond_d
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10950
    :cond_e
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_10

    .line 10951
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_c
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_f

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10952
    .restart local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10953
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_c

    .line 10954
    :cond_f
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10957
    :cond_10
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->size()I

    move-result v5

    if-lez v5, :cond_12

    .line 10958
    move v5, v4

    .local v5, "i":I
    :goto_d
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v6}, Landroid/util/LongSparseArray;->size()I

    move-result v6

    if-ge v5, v6, :cond_11

    .line 10959
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v7, v5}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;

    invoke-virtual {v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10958
    add-int/lit8 v5, v5, 0x1

    goto :goto_d

    .line 10961
    .end local v5    # "i":I
    :cond_11
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->clear()V

    .line 10964
    :cond_12
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_14

    .line 10965
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_e
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_13

    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 10966
    .restart local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->remove(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V

    .line 10967
    .end local v6    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_e

    .line 10968
    :cond_13
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->clear()V

    .line 10971
    :cond_14
    const/4 v5, 0x0

    iput-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 10972
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 10973
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    .line 10974
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuUserTime:J

    .line 10975
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepCpuSystemTime:J

    .line 10976
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatUserTime:J

    .line 10977
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSystemTime:J

    .line 10978
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIOWaitTime:J

    .line 10979
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIrqTime:J

    .line 10980
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatSoftIrqTime:J

    .line 10981
    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    iput-wide v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastStepStatIdleTime:J

    .line 10983
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 10984
    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    .line 10986
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initDischarge()V

    .line 10988
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->clearHistoryLocked()V

    .line 10989
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v5, 0x4

    invoke-virtual {v4, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 10990
    return-void
.end method

.method private static resetLongCounterIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;Z)V
    .locals 0
    .param p0, "counter"    # Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .param p1, "detachIfReset"    # Z

    .line 6695
    if-eqz p0, :cond_0

    .line 6696
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 6698
    :cond_0
    return-void
.end method

.method private static resetTimerIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$DualTimer;Z)Z
    .locals 1
    .param p0, "timer"    # Lcom/android/internal/os/BatteryStatsImpl$DualTimer;
    .param p1, "detachIfReset"    # Z

    .line 6681
    if-eqz p0, :cond_0

    .line 6682
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->reset(Z)Z

    move-result v0

    return v0

    .line 6684
    :cond_0
    const/4 v0, 0x1

    return v0
.end method

.method private static resetTimerIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$Timer;Z)Z
    .locals 1
    .param p0, "timer"    # Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .param p1, "detachIfReset"    # Z

    .line 6674
    if-eqz p0, :cond_0

    .line 6675
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->reset(Z)Z

    move-result v0

    return v0

    .line 6677
    :cond_0
    const/4 v0, 0x1

    return v0
.end method

.method private scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V
    .locals 1
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "updateFlags"    # I

    .line 12605
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    if-eqz v0, :cond_0

    .line 12606
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    invoke-interface {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleSync(Ljava/lang/String;I)Ljava/util/concurrent/Future;

    .line 12608
    :cond_0
    return-void
.end method

.method private startRecordingHistory(JJZ)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "reset"    # Z

    .line 12576
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12577
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12578
    nop

    .line 12579
    if-eqz p5, :cond_0

    const/4 v0, 0x7

    goto :goto_0

    :cond_0
    const/4 v0, 0x5

    :goto_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    .line 12578
    invoke-direct {p0, p1, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 12581
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    const-wide/16 v1, 0x0

    iput-wide v1, v0, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 12582
    if-eqz p5, :cond_1

    .line 12583
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    .line 12585
    :cond_1
    return-void
.end method

.method private updateAllPhoneStateLocked(III)V
    .locals 9
    .param p1, "state"    # I
    .param p2, "simState"    # I
    .param p3, "strengthBin"    # I

    .line 5347
    const/4 v0, 0x0

    .line 5348
    .local v0, "scanning":Z
    const/4 v1, 0x0

    .line 5350
    .local v1, "newHistory":Z
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    .line 5351
    iput p2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    .line 5352
    iput p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    .line 5354
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    .line 5355
    .local v2, "elapsedRealtime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v4}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v4

    .line 5357
    .local v4, "uptime":J
    const/4 v6, 0x1

    if-ne p2, v6, :cond_0

    .line 5360
    if-ne p1, v6, :cond_0

    if-lez p3, :cond_0

    .line 5362
    const/4 p1, 0x0

    .line 5367
    :cond_0
    const/4 v7, 0x3

    if-ne p1, v7, :cond_1

    .line 5368
    const/4 p3, -0x1

    goto :goto_0

    .line 5371
    :cond_1
    if-nez p1, :cond_2

    goto :goto_0

    .line 5376
    :cond_2
    if-ne p1, v6, :cond_3

    .line 5377
    const/4 v0, 0x1

    .line 5378
    const/4 p3, 0x0

    .line 5379
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v6

    if-nez v6, :cond_3

    .line 5380
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v8, 0x200000

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5381
    const/4 v1, 0x1

    .line 5384
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5388
    :cond_3
    :goto_0
    if-nez v0, :cond_4

    .line 5390
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v6

    if-eqz v6, :cond_4

    .line 5391
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v8, -0x200001

    and-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5394
    const/4 v1, 0x1

    .line 5395
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5399
    :cond_4
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    if-eq v6, p1, :cond_5

    .line 5400
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v7, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit16 v7, v7, -0x1c1

    shl-int/lit8 v8, p1, 0x6

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5404
    const/4 v1, 0x1

    .line 5405
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceState:I

    .line 5408
    :cond_5
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    if-eq v6, p3, :cond_9

    .line 5409
    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    if-ltz v6, :cond_6

    .line 5410
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    aget-object v6, v6, v7

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5413
    :cond_6
    if-ltz p3, :cond_8

    .line 5414
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, p3

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v6

    if-nez v6, :cond_7

    .line 5415
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, p3

    invoke-virtual {v6, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5417
    :cond_7
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v7, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit8 v7, v7, -0x39

    shl-int/lit8 v8, p3, 0x3

    or-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5421
    const/4 v1, 0x1

    .line 5422
    const/16 v6, 0x28

    invoke-static {v6, p3}, Landroid/util/StatsLog;->write(II)I

    goto :goto_1

    .line 5424
    :cond_8
    const/4 v6, -0x1

    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllPhoneSignalStrengthTimersLocked(I)V

    .line 5426
    :goto_1
    iput p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBin:I

    .line 5429
    :cond_9
    if-eqz v1, :cond_a

    .line 5430
    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5432
    :cond_a
    return-void
.end method

.method private updateBatteryPropertiesLocked()V
    .locals 4

    .line 4037
    :try_start_0
    const-string v0, "batteryproperties"

    .line 4038
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 4037
    invoke-static {v0}, Landroid/os/IBatteryPropertiesRegistrar$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IBatteryPropertiesRegistrar;

    move-result-object v0

    .line 4039
    .local v0, "registrar":Landroid/os/IBatteryPropertiesRegistrar;
    invoke-interface {v0}, Landroid/os/IBatteryPropertiesRegistrar;->scheduleUpdate()V
    :try_end_0
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .end local v0    # "registrar":Landroid/os/IBatteryPropertiesRegistrar;
    goto :goto_0

    .line 4046
    :catch_0
    move-exception v0

    goto :goto_1

    .line 4043
    :catch_1
    move-exception v0

    .line 4044
    .local v0, "e":Ljava/lang/NullPointerException;
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed to update battery properties: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4048
    .end local v0    # "e":Ljava/lang/NullPointerException;
    :goto_0
    nop

    .line 4049
    :goto_1
    return-void
.end method

.method private updateNewDischargeScreenLevelLocked(I)V
    .locals 2
    .param p1, "state"    # I

    .line 11040
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 11041
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 11042
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 11043
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    goto :goto_0

    .line 11044
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 11045
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 11046
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 11047
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 11048
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 11049
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 11050
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 11051
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 11053
    :cond_2
    :goto_0
    return-void
.end method

.method private updateOldDischargeScreenLevelLocked(I)V
    .locals 2
    .param p1, "state"    # I

    .line 11018
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 11019
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 11020
    .local v0, "diff":I
    if-lez v0, :cond_0

    .line 11021
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 11022
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 11024
    .end local v0    # "diff":I
    :cond_0
    goto :goto_0

    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 11025
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 11026
    .restart local v0    # "diff":I
    if-lez v0, :cond_2

    .line 11027
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 11028
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 11030
    .end local v0    # "diff":I
    :cond_2
    goto :goto_0

    :cond_3
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 11031
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v0, v1

    .line 11032
    .restart local v0    # "diff":I
    if-lez v0, :cond_4

    .line 11033
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 11034
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 11037
    .end local v0    # "diff":I
    :cond_4
    :goto_0
    return-void
.end method

.method private writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V
    .locals 10
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 10402
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x40

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 10403
    .local v0, "sb":Ljava/lang/StringBuilder;
    const/4 v1, 0x1

    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v1

    const/4 v2, 0x0

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 10404
    const-string v1, "daily-items"

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10405
    const/4 v1, 0x0

    move v3, v1

    .line 10405
    .local v3, "i":I
    :goto_0
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_2

    .line 10406
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/BatteryStats$DailyItem;

    .line 10407
    .local v4, "dit":Landroid/os/BatteryStats$DailyItem;
    const-string v5, "item"

    invoke-interface {p1, v2, v5}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10408
    const-string/jumbo v5, "start"

    iget-wide v6, v4, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    invoke-interface {p1, v2, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10409
    const-string v5, "end"

    iget-wide v6, v4, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    invoke-interface {p1, v2, v5, v6}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10410
    const-string v5, "dis"

    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {p0, p1, v5, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    .line 10411
    const-string v5, "chg"

    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {p0, p1, v5, v6, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V

    .line 10412
    iget-object v5, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-eqz v5, :cond_1

    .line 10413
    move v5, v1

    .line 10413
    .local v5, "j":I
    :goto_1
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-ge v5, v6, :cond_1

    .line 10414
    iget-object v6, v4, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/os/BatteryStats$PackageChange;

    .line 10415
    .local v6, "pc":Landroid/os/BatteryStats$PackageChange;
    iget-boolean v7, v6, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    if-eqz v7, :cond_0

    .line 10416
    const-string/jumbo v7, "upd"

    invoke-interface {p1, v2, v7}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10417
    const-string/jumbo v7, "pkg"

    iget-object v8, v6, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v7, v8}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10418
    const-string/jumbo v7, "ver"

    iget-wide v8, v6, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-static {v8, v9}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v8

    invoke-interface {p1, v2, v7, v8}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10419
    const-string/jumbo v7, "upd"

    invoke-interface {p1, v2, v7}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    goto :goto_2

    .line 10421
    :cond_0
    const-string/jumbo v7, "rem"

    invoke-interface {p1, v2, v7}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10422
    const-string/jumbo v7, "pkg"

    iget-object v8, v6, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-interface {p1, v2, v7, v8}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10423
    const-string/jumbo v7, "rem"

    invoke-interface {p1, v2, v7}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10413
    .end local v6    # "pc":Landroid/os/BatteryStats$PackageChange;
    :goto_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 10427
    .end local v5    # "j":I
    :cond_1
    const-string v5, "item"

    invoke-interface {p1, v2, v5}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10405
    .end local v4    # "dit":Landroid/os/BatteryStats$DailyItem;
    add-int/lit8 v3, v3, 0x1

    goto/16 :goto_0

    .line 10429
    .end local v3    # "i":I
    :cond_2
    const-string v1, "daily-items"

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10430
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 10431
    return-void
.end method

.method private writeDailyLevelSteps(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Landroid/os/BatteryStats$LevelStepTracker;Ljava/lang/StringBuilder;)V
    .locals 5
    .param p1, "out"    # Lorg/xmlpull/v1/XmlSerializer;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "steps"    # Landroid/os/BatteryStats$LevelStepTracker;
    .param p4, "tmpBuilder"    # Ljava/lang/StringBuilder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .line 10435
    if-eqz p3, :cond_1

    .line 10436
    const/4 v0, 0x0

    invoke-interface {p1, v0, p2}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10437
    const-string/jumbo v1, "n"

    iget v2, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    invoke-interface {p1, v0, v1, v2}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10438
    const/4 v1, 0x0

    move v2, v1

    .line 10438
    .local v2, "i":I
    :goto_0
    iget v3, p3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-ge v2, v3, :cond_0

    .line 10439
    const-string/jumbo v3, "s"

    invoke-interface {p1, v0, v3}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10440
    invoke-virtual {p4, v1}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 10441
    invoke-virtual {p3, v2, p4}, Landroid/os/BatteryStats$LevelStepTracker;->encodeEntryAt(ILjava/lang/StringBuilder;)V

    .line 10442
    const-string/jumbo v3, "v"

    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-interface {p1, v0, v3, v4}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10443
    const-string/jumbo v3, "s"

    invoke-interface {p1, v0, v3}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10438
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 10445
    .end local v2    # "i":I
    :cond_0
    invoke-interface {p1, v0, p2}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 10447
    :cond_1
    return-void
.end method

.method private writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I
    .locals 5
    .param p1, "tag"    # Landroid/os/BatteryStats$HistoryTag;

    .line 3155
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Integer;

    .line 3157
    .local v0, "idxObj":Ljava/lang/Integer;
    if-eqz v0, :cond_0

    .line 3158
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v1

    .local v1, "idx":I
    goto :goto_0

    .line 3160
    .end local v1    # "idx":I
    :cond_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3161
    .restart local v1    # "idx":I
    new-instance v2, Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v2}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    .line 3162
    .local v2, "key":Landroid/os/BatteryStats$HistoryTag;
    invoke-virtual {v2, p1}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3163
    iput v1, p1, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 3164
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3165
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    add-int/lit8 v3, v3, 0x1

    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3166
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    iget-object v4, v2, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    add-int/lit8 v4, v4, 0x1

    add-int/2addr v3, v4

    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 3168
    .end local v2    # "key":Landroid/os/BatteryStats$HistoryTag;
    :goto_0
    return v1
.end method


# virtual methods
.method public addCpuTimes([J[J)[J
    .locals 5
    .param p1, "timesA"    # [J
    .param p2, "timesB"    # [J
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 533
    if-eqz p1, :cond_1

    if-eqz p2, :cond_1

    .line 534
    array-length v0, p1

    add-int/lit8 v0, v0, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 535
    aget-wide v1, p1, v0

    aget-wide v3, p2, v0

    add-long/2addr v1, v3

    aput-wide v1, p1, v0

    .line 534
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 537
    .end local v0    # "i":I
    :cond_0
    return-object p1

    .line 539
    :cond_1
    if-nez p1, :cond_3

    if-nez p2, :cond_2

    const/4 v0, 0x0

    goto :goto_1

    :cond_2
    move-object v0, p2

    goto :goto_1

    :cond_3
    move-object v0, p1

    :goto_1
    return-object v0
.end method

.method addHistoryBufferLocked(JLandroid/os/BatteryStats$HistoryItem;)V
    .locals 20
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    move-object/from16 v0, p0

    .line 3693
    move-object/from16 v1, p3

    iget-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz v2, :cond_14

    iget-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-nez v2, :cond_0

    goto/16 :goto_5

    .line 3697
    :cond_0
    iget-wide v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    add-long v2, v2, p1

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v6, v6, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long/2addr v2, v6

    .line 3698
    .local v2, "timeDiff":J
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v7, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    and-int/2addr v7, v8

    xor-int/2addr v6, v7

    .line 3699
    .local v6, "diffStates":I
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v7, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v8, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    and-int/2addr v8, v9

    xor-int/2addr v7, v8

    .line 3700
    .local v7, "diffStates2":I
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v8, v8, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v9, v9, Landroid/os/BatteryStats$HistoryItem;->states:I

    xor-int/2addr v8, v9

    .line 3701
    .local v8, "lastDiffStates":I
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v9, v9, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v10, v10, Landroid/os/BatteryStats$HistoryItem;->states2:I

    xor-int/2addr v9, v10

    .line 3707
    .local v9, "lastDiffStates2":I
    iget v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    if-ltz v10, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v10, v10, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-nez v10, :cond_7

    const-wide/16 v10, 0x3e8

    cmp-long v10, v2, v10

    if-gez v10, :cond_7

    and-int v10, v6, v8

    if-nez v10, :cond_7

    and-int v10, v7, v9

    if-nez v10, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v10, v10, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v10, :cond_1

    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v10, :cond_7

    :cond_1
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v10, v10, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v10, :cond_2

    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v10, :cond_7

    :cond_2
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v10, v10, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    if-nez v10, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v10, v10, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v10, :cond_3

    iget v10, v1, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-nez v10, :cond_7

    :cond_3
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v10, v10, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iget-byte v11, v1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-ne v10, v11, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v10, v10, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    iget-byte v11, v1, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-ne v10, v11, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v10, v10, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    iget-byte v11, v1, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    if-ne v10, v11, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v10, v10, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    iget-byte v11, v1, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-ne v10, v11, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-short v10, v10, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    iget-short v11, v1, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    if-ne v10, v11, :cond_7

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-char v10, v10, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    iget-char v11, v1, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    if-ne v10, v11, :cond_7

    .line 3726
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    invoke-virtual {v10, v11}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3727
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    invoke-virtual {v10, v11}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3728
    const/4 v10, -0x1

    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3729
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-wide v10, v10, Landroid/os/BatteryStats$HistoryItem;->time:J

    iget-wide v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    sub-long v4, v10, v12

    .line 3733
    .end local p1    # "elapsedRealtimeMs":J
    .local v4, "elapsedRealtimeMs":J
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v10, v10, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v10, :cond_4

    .line 3734
    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3735
    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v11, v11, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v10, v11}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3740
    :cond_4
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v10, v10, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v10, :cond_5

    .line 3741
    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3742
    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v11, v11, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v10, v11}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3747
    :cond_5
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v10, v10, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v10, :cond_6

    .line 3748
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v10, v10, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    iput v10, v1, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3749
    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3750
    iget-object v10, v1, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v11, v11, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-virtual {v10, v11}, Landroid/os/BatteryStats$HistoryTag;->setTo(Landroid/os/BatteryStats$HistoryTag;)V

    .line 3752
    :cond_6
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v10, v11}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    goto :goto_0

    .line 3755
    .end local v4    # "elapsedRealtimeMs":J
    .restart local p1    # "elapsedRealtimeMs":J
    :cond_7
    move-wide/from16 v4, p1

    .end local p1    # "elapsedRealtimeMs":J
    .restart local v4    # "elapsedRealtimeMs":J
    :goto_0
    const/4 v10, 0x0

    .line 3756
    .local v10, "recordResetDueToOverflow":Z
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v11}, Landroid/os/Parcel;->dataSize()I

    move-result v11

    .line 3757
    .local v11, "dataSize":I
    sget v12, Lcom/android/internal/os/BatteryStatsImpl;->MAX_MAX_HISTORY_BUFFER:I

    mul-int/lit8 v12, v12, 0x3

    const/4 v13, 0x6

    const/4 v14, 0x0

    if-lt v11, v12, :cond_8

    .line 3764
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    .line 3768
    const/4 v10, 0x1

    .line 3816
    move-wide/from16 v18, v2

    goto/16 :goto_4

    .line 3770
    :cond_8
    sget v12, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_BUFFER:I

    if-lt v11, v12, :cond_10

    .line 3771
    iget-boolean v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    const/4 v15, 0x1

    if-nez v12, :cond_9

    .line 3772
    iput-boolean v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    .line 3773
    invoke-direct {v0, v4, v5, v14, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3774
    invoke-direct {v0, v4, v5, v13, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3775
    return-void

    .line 3779
    :cond_9
    const/4 v12, 0x0

    .line 3780
    .local v12, "writeAnyway":Z
    iget v13, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v16, -0x1d0000

    and-int v13, v13, v16

    iget v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    and-int/2addr v13, v15

    .line 3782
    .local v13, "curStates":I
    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v15, v15, Landroid/os/BatteryStats$HistoryItem;->states:I

    if-eq v15, v13, :cond_b

    .line 3785
    iget v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 3786
    .local v15, "old":I
    iget v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    const v16, 0x1cffff

    or-int v16, v13, v16

    and-int v14, v14, v16

    iput v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 3787
    iget v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    if-eq v15, v14, :cond_a

    const/4 v14, 0x1

    goto :goto_1

    :cond_a
    const/4 v14, 0x0

    :goto_1
    or-int/2addr v12, v14

    .line 3789
    .end local v15    # "old":I
    :cond_b
    iget v14, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v15, 0x683f0000

    and-int/2addr v14, v15

    iget v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    and-int/2addr v14, v15

    .line 3791
    .local v14, "curStates2":I
    iget-object v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v15, v15, Landroid/os/BatteryStats$HistoryItem;->states2:I

    if-eq v15, v14, :cond_d

    .line 3794
    iget v15, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 3795
    .restart local v15    # "old":I
    move-wide/from16 v18, v2

    iget v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .end local v2    # "timeDiff":J
    .local v18, "timeDiff":J
    const v3, -0x683f0001

    or-int/2addr v3, v14

    and-int/2addr v2, v3

    iput v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 3796
    iget v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    if-eq v15, v2, :cond_c

    const/16 v17, 0x1

    goto :goto_2

    :cond_c
    const/16 v17, 0x0

    :goto_2
    or-int v12, v12, v17

    .end local v15    # "old":I
    goto :goto_3

    .line 3803
    .end local v18    # "timeDiff":J
    .restart local v2    # "timeDiff":J
    :cond_d
    move-wide/from16 v18, v2

    .end local v2    # "timeDiff":J
    .restart local v18    # "timeDiff":J
    :goto_3
    if-nez v12, :cond_f

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iget-byte v3, v1, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-ne v2, v3, :cond_f

    sget v2, Lcom/android/internal/os/BatteryStatsImpl;->MAX_MAX_HISTORY_BUFFER:I

    if-ge v11, v2, :cond_e

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->states:I

    iget v3, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    xor-int/2addr v2, v3

    const/high16 v3, 0x1c0000

    and-int/2addr v2, v3

    if-eqz v2, :cond_e

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    iget v3, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    xor-int/2addr v2, v3

    const/high16 v3, -0x68400000

    and-int/2addr v2, v3

    if-nez v2, :cond_f

    .line 3809
    :cond_e
    return-void

    .line 3812
    :cond_f
    const/4 v2, 0x0

    invoke-direct {v0, v4, v5, v2, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3813
    return-void

    .line 3816
    .end local v12    # "writeAnyway":Z
    .end local v13    # "curStates":I
    .end local v14    # "curStates2":I
    .end local v18    # "timeDiff":J
    .restart local v2    # "timeDiff":J
    :cond_10
    move-wide/from16 v18, v2

    .end local v2    # "timeDiff":J
    .restart local v18    # "timeDiff":J
    :goto_4
    if-eqz v11, :cond_11

    if-eqz v10, :cond_13

    .line 3818
    :cond_11
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    iput-wide v2, v1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 3819
    if-eqz v10, :cond_12

    .line 3820
    invoke-direct {v0, v4, v5, v13, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3822
    :cond_12
    const/4 v2, 0x7

    invoke-direct {v0, v4, v5, v2, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3824
    :cond_13
    const/4 v2, 0x0

    invoke-direct {v0, v4, v5, v2, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3825
    return-void

    .line 3694
    .end local v4    # "elapsedRealtimeMs":J
    .end local v6    # "diffStates":I
    .end local v7    # "diffStates2":I
    .end local v8    # "lastDiffStates":I
    .end local v9    # "lastDiffStates2":I
    .end local v10    # "recordResetDueToOverflow":Z
    .end local v11    # "dataSize":I
    .end local v18    # "timeDiff":J
    .restart local p1    # "elapsedRealtimeMs":J
    :cond_14
    :goto_5
    return-void
.end method

.method public addHistoryEventLocked(JJILjava/lang/String;I)V
    .locals 2
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "code"    # I
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "uid"    # I

    .line 3934
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput p5, v0, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3935
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v1, v1, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3936
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object p6, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 3937
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    iput p7, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 3938
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 3939
    return-void
.end method

.method addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V
    .locals 0
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3871
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3874
    return-void
.end method

.method addHistoryRecordLocked(JJ)V
    .locals 9
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J

    .line 3851
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    const-wide/16 v2, 0x0

    cmp-long v0, v0, v2

    if-eqz v0, :cond_0

    .line 3852
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    sub-long v0, p1, v0

    .line 3853
    .local v0, "diffElapsed":J
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    sub-long v2, p3, v2

    .line 3854
    .local v2, "diffUptime":J
    const-wide/16 v4, 0x14

    sub-long v4, v0, v4

    cmp-long v4, v2, v4

    if-gez v4, :cond_0

    .line 3855
    sub-long v4, v0, v2

    sub-long v4, p1, v4

    .line 3856
    .local v4, "wakeElapsedTime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v6, v7}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3857
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    const/4 v7, 0x0

    iput-object v7, v6, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3858
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iput-object v7, v6, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3859
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    const/4 v7, 0x0

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3860
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v8, 0x7fffffff

    and-int/2addr v7, v8

    iput v7, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3861
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryAddTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v4, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3864
    .end local v0    # "diffElapsed":J
    .end local v2    # "diffUptime":J
    .end local v4    # "wakeElapsedTime":J
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v2, -0x80000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3865
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 3866
    iput-wide p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 3867
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordInnerLocked(JLandroid/os/BatteryStats$HistoryItem;)V

    .line 3868
    return-void
.end method

.method addHistoryRecordLocked(JJBLandroid/os/BatteryStats$HistoryItem;)V
    .locals 3
    .param p1, "elapsedRealtimeMs"    # J
    .param p3, "uptimeMs"    # J
    .param p5, "cmd"    # B
    .param p6, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3942
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    .line 3943
    .local v0, "rec":Landroid/os/BatteryStats$HistoryItem;
    if-eqz v0, :cond_0

    .line 3944
    iget-object v1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCache:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    .line 3946
    :cond_0
    new-instance v1, Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {v1}, Landroid/os/BatteryStats$HistoryItem;-><init>()V

    move-object v0, v1

    .line 3948
    :goto_0
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    add-long/2addr v1, p1

    invoke-virtual {v0, v1, v2, p5, p6}, Landroid/os/BatteryStats$HistoryItem;->setTo(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 3950
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V

    .line 3951
    return-void
.end method

.method addHistoryRecordLocked(Landroid/os/BatteryStats$HistoryItem;)V
    .locals 1
    .param p1, "rec"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3954
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryItems:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryItems:I

    .line 3955
    const/4 v0, 0x0

    iput-object v0, p1, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    .line 3956
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastEnd:Landroid/os/BatteryStats$HistoryItem;

    .line 3957
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    if-eqz v0, :cond_0

    .line 3958
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    iput-object p1, v0, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    .line 3959
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    .line 3961
    :cond_0
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryEnd:Landroid/os/BatteryStats$HistoryItem;

    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    .line 3963
    :goto_0
    return-void
.end method

.method public addIsolatedUidLocked(II)V
    .locals 2
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    .line 4052
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/SparseIntArray;->put(II)V

    .line 4053
    const/16 v0, 0x2b

    const/4 v1, 0x1

    invoke-static {v0, p2, p1, v1}, Landroid/util/StatsLog;->write(IIII)I

    .line 4055
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 4056
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->addIsolatedUid(I)V

    .line 4057
    return-void
.end method

.method aggregateLastWakeupUptimeLocked(J)V
    .locals 8
    .param p1, "uptimeMs"    # J

    .line 4702
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    if-eqz v0, :cond_0

    .line 4703
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    sub-long v0, p1, v0

    .line 4704
    .local v0, "deltaUptime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v2

    .line 4705
    .local v2, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    const-wide/16 v3, 0x3e8

    mul-long v5, v0, v3

    const/4 v7, 0x1

    invoke-virtual {v2, v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->add(JI)V

    .line 4706
    const/16 v5, 0x24

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    mul-long/2addr v3, v0

    invoke-static {v5, v6, v3, v4}, Landroid/util/StatsLog;->write(ILjava/lang/String;J)I

    .line 4708
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 4710
    .end local v0    # "deltaUptime":J
    .end local v2    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_0
    return-void
.end method

.method clearHistoryLocked()V
    .locals 3

    .line 3976
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    .line 3977
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    .line 3978
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryElapsedRealtime:J

    .line 3979
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTrackRunningHistoryUptime:J

    .line 3981
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataSize(I)V

    .line 3982
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 3983
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    sget v2, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_BUFFER:I

    div-int/lit8 v2, v2, 0x2

    invoke-virtual {v0, v2}, Landroid/os/Parcel;->setDataCapacity(I)V

    .line 3984
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 3985
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 3986
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 3987
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 3988
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 3989
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBufferLastPos:I

    .line 3990
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryOverflow:Z

    .line 3991
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates:I

    .line 3992
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveHistoryStates2:I

    .line 3993
    return-void
.end method

.method public clearPendingRemovedUids()V
    .locals 4

    .line 462
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-wide v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->UID_REMOVE_DELAY_MS:J

    sub-long/2addr v0, v2

    .line 463
    .local v0, "cutOffTime":J
    :goto_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_0

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    .line 464
    invoke-interface {v2}, Ljava/util/Queue;->peek()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-wide v2, v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;->timeAddedInQueue:J

    cmp-long v2, v2, v0

    if-gez v2, :cond_0

    .line 465
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    invoke-interface {v2}, Ljava/util/Queue;->poll()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;->remove()V

    goto :goto_0

    .line 467
    :cond_0
    return-void
.end method

.method public commitCurrentHistoryBatchLocked()V
    .locals 2

    .line 3689
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    const/4 v1, -0x1

    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    .line 3690
    return-void
.end method

.method public commitPendingDataToDisk()V
    .locals 7

    .line 13575
    monitor-enter p0

    .line 13576
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    .line 13577
    .local v0, "next":Landroid/os/Parcel;
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    .line 13578
    if-nez v0, :cond_0

    .line 13579
    monitor-exit p0

    return-void

    .line 13581
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13583
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v1}, Ljava/util/concurrent/locks/ReentrantLock;->lock()V

    .line 13585
    :try_start_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    .line 13586
    .local v1, "startTime":J
    new-instance v3, Ljava/io/FileOutputStream;

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    invoke-virtual {v4}, Lcom/android/internal/util/JournaledFile;->chooseForWrite()Ljava/io/File;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V

    .line 13587
    .local v3, "stream":Ljava/io/FileOutputStream;
    invoke-virtual {v0}, Landroid/os/Parcel;->marshall()[B

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/io/FileOutputStream;->write([B)V

    .line 13588
    invoke-virtual {v3}, Ljava/io/FileOutputStream;->flush()V

    .line 13589
    invoke-static {v3}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 13590
    invoke-virtual {v3}, Ljava/io/FileOutputStream;->close()V

    .line 13591
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    invoke-virtual {v4}, Lcom/android/internal/util/JournaledFile;->commit()V

    .line 13592
    const-string v4, "batterystats"

    .line 13593
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v5

    sub-long/2addr v5, v1

    .line 13592
    invoke-static {v4, v5, v6}, Lcom/android/internal/logging/EventLogTags;->writeCommitSysConfigFile(Ljava/lang/String;J)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .end local v1    # "startTime":J
    .end local v3    # "stream":Ljava/io/FileOutputStream;
    goto :goto_0

    .line 13598
    :catchall_0
    move-exception v1

    goto :goto_1

    .line 13594
    :catch_0
    move-exception v1

    .line 13595
    .local v1, "e":Ljava/io/IOException;
    :try_start_2
    const-string v2, "BatteryStats"

    const-string v3, "Error writing battery statistics"

    invoke-static {v2, v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13596
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    invoke-virtual {v2}, Lcom/android/internal/util/JournaledFile;->rollback()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13598
    .end local v1    # "e":Ljava/io/IOException;
    :goto_0
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V

    .line 13599
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v1}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    .line 13600
    nop

    .line 13601
    return-void

    .line 13598
    :goto_1
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V

    .line 13599
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWriteLock:Ljava/util/concurrent/locks/ReentrantLock;

    invoke-virtual {v2}, Ljava/util/concurrent/locks/ReentrantLock;->unlock()V

    throw v1

    .line 13581
    .end local v0    # "next":Landroid/os/Parcel;
    :catchall_1
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v0
.end method

.method public computeBatteryRealtime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12869
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public computeBatteryScreenOffRealtime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12879
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public computeBatteryScreenOffUptime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12874
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public computeBatteryTimeRemaining(J)J
    .locals 7
    .param p1, "curTime"    # J

    .line 12922
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v1, -0x1

    if-nez v0, :cond_0

    .line 12923
    return-wide v1

    .line 12938
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v0, v0, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v3, 0x1

    if-ge v0, v3, :cond_1

    .line 12939
    return-wide v1

    .line 12941
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide v3

    .line 12942
    .local v3, "msPerLevel":J
    const-wide/16 v5, 0x0

    cmp-long v0, v3, v5

    if-gtz v0, :cond_2

    .line 12943
    return-wide v1

    .line 12945
    :cond_2
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    int-to-long v0, v0

    mul-long/2addr v0, v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v0, v5

    return-wide v0
.end method

.method public computeBatteryUptime(JI)J
    .locals 2
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12864
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeUptime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public computeChargeTimeRemaining(J)J
    .locals 7
    .param p1, "curTime"    # J

    .line 12960
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    const-wide/16 v1, -0x1

    if-eqz v0, :cond_0

    .line 12962
    return-wide v1

    .line 12977
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v0, v0, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    const/4 v3, 0x1

    if-ge v0, v3, :cond_1

    .line 12978
    return-wide v1

    .line 12980
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->computeTimePerLevel()J

    move-result-wide v3

    .line 12981
    .local v3, "msPerLevel":J
    const-wide/16 v5, 0x0

    cmp-long v0, v3, v5

    if-gtz v0, :cond_2

    .line 12982
    return-wide v1

    .line 12984
    :cond_2
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    rsub-int/lit8 v0, v0, 0x64

    int-to-long v0, v0

    mul-long/2addr v0, v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v0, v5

    return-wide v0
.end method

.method public computeRealtime(JI)J
    .locals 4
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12854
    packed-switch p3, :pswitch_data_0

    .line 12859
    const-wide/16 v0, 0x0

    return-wide v0

    .line 12857
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtimeStart()J

    move-result-wide v0

    sub-long v0, p1, v0

    return-wide v0

    .line 12856
    :pswitch_1
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    sub-long v0, p1, v0

    return-wide v0

    .line 12855
    :pswitch_2
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    sub-long v2, p1, v2

    add-long/2addr v0, v2

    return-wide v0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public computeUptime(JI)J
    .locals 4
    .param p1, "curTime"    # J
    .param p3, "which"    # I

    .line 12844
    packed-switch p3, :pswitch_data_0

    .line 12849
    const-wide/16 v0, 0x0

    return-wide v0

    .line 12847
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptimeStart()J

    move-result-wide v0

    sub-long v0, p1, v0

    return-wide v0

    .line 12846
    :pswitch_1
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    sub-long v0, p1, v0

    return-wide v0

    .line 12845
    :pswitch_2
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    sub-long v2, p1, v2

    add-long/2addr v0, v2

    return-wide v0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public copyFromAllUidsCpuTimes()V
    .locals 2

    .line 470
    monitor-enter p0

    .line 471
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 472
    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    .line 471
    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->copyFromAllUidsCpuTimes(ZZ)V

    .line 473
    monitor-exit p0

    .line 474
    return-void

    .line 473
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public copyFromAllUidsCpuTimes(ZZ)V
    .locals 9
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 483
    monitor-enter p0

    .line 484
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-nez v0, :cond_0

    .line 485
    monitor-exit p0

    return-void

    .line 487
    :cond_0
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_1

    .line 488
    monitor-exit p0

    return-void

    .line 491
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    .line 492
    invoke-virtual {v0}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->getAllUidCpuFreqTimeMs()Landroid/util/SparseArray;

    move-result-object v0

    .line 495
    .local v0, "allUidCpuFreqTimesMs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<[J>;"
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v1}, Lcom/android/internal/os/KernelSingleUidTimeReader;->hasStaleData()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 496
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->setAllUidsCpuTimesMs(Landroid/util/SparseArray;)V

    .line 497
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;->markDataAsStale(Z)V

    .line 498
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1}, Landroid/util/SparseIntArray;->clear()V

    .line 499
    monitor-exit p0

    return-void

    .line 501
    :cond_2
    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_7

    .line 502
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v2

    .line 503
    .local v2, "uid":I
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v3

    .line 504
    .local v3, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-nez v3, :cond_3

    .line 505
    goto :goto_2

    .line 507
    :cond_3
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, [J

    .line 508
    .local v4, "cpuTimesMs":[J
    if-nez v4, :cond_4

    .line 509
    goto :goto_2

    .line 511
    :cond_4
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    .line 512
    invoke-virtual {v4}, [J->clone()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, [J

    .line 511
    invoke-virtual {v5, v2, v6}, Lcom/android/internal/os/KernelSingleUidTimeReader;->computeDelta(I[J)[J

    move-result-object v5

    .line 513
    .local v5, "deltaTimesMs":[J
    if-eqz p1, :cond_6

    if-eqz v5, :cond_6

    .line 515
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v6, v2}, Landroid/util/SparseIntArray;->indexOfKey(I)I

    move-result v6

    .line 516
    .local v6, "idx":I
    if-ltz v6, :cond_5

    .line 517
    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v7

    .line 518
    .local v7, "procState":I
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v8, v6}, Landroid/util/SparseIntArray;->removeAt(I)V

    goto :goto_1

    .line 520
    .end local v7    # "procState":I
    :cond_5
    iget v7, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessState:I

    .line 522
    .restart local v7    # "procState":I
    :goto_1
    if-ltz v7, :cond_6

    const/4 v8, 0x7

    if-ge v7, v8, :cond_6

    .line 523
    invoke-static {v3, v7, v5, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$300(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 524
    invoke-static {v3, v7, v5, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$400(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 501
    .end local v2    # "uid":I
    .end local v3    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "cpuTimesMs":[J
    .end local v5    # "deltaTimesMs":[J
    .end local v6    # "idx":I
    .end local v7    # "procState":I
    :cond_6
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 528
    .end local v0    # "allUidCpuFreqTimesMs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<[J>;"
    .end local v1    # "i":I
    :cond_7
    monitor-exit p0

    .line 529
    return-void

    .line 528
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public describeContents()I
    .locals 1

    .line 13651
    const/4 v0, 0x0

    return v0
.end method

.method public dumpConstantsLocked(Ljava/io/PrintWriter;)V
    .locals 1
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 13492
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Constants;->dumpLocked(Ljava/io/PrintWriter;)V

    .line 13493
    return-void
.end method

.method public dumpCpuStatsLocked(Ljava/io/PrintWriter;)V
    .locals 9
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 13497
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 13498
    .local v0, "size":I
    const-string v1, "Per UID CPU user & system time in ms:"

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13499
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 13500
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 13501
    .local v3, "u":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13502
    .local v4, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    const-string v5, "  "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13503
    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUserCpuTimeUs(I)J

    move-result-wide v5

    const-wide/16 v7, 0x3e8

    div-long/2addr v5, v7

    invoke-virtual {p1, v5, v6}, Ljava/io/PrintWriter;->print(J)V

    const-string v5, " "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13504
    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getSystemCpuTimeUs(I)J

    move-result-wide v5

    div-long/2addr v5, v7

    invoke-virtual {p1, v5, v6}, Ljava/io/PrintWriter;->println(J)V

    .line 13499
    .end local v3    # "u":I
    .end local v4    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 13506
    .end local v2    # "i":I
    :cond_0
    const-string v2, "Per UID CPU active time in ms:"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13507
    move v2, v1

    .restart local v2    # "i":I
    :goto_1
    if-ge v2, v0, :cond_2

    .line 13508
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 13509
    .restart local v3    # "u":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13510
    .restart local v4    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v5

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-lez v5, :cond_1

    .line 13511
    const-string v5, "  "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuActiveTime()J

    move-result-wide v5

    invoke-virtual {p1, v5, v6}, Ljava/io/PrintWriter;->println(J)V

    .line 13507
    .end local v3    # "u":I
    .end local v4    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 13514
    .end local v2    # "i":I
    :cond_2
    const-string v2, "Per UID CPU cluster time in ms:"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13515
    move v2, v1

    .restart local v2    # "i":I
    :goto_2
    if-ge v2, v0, :cond_4

    .line 13516
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 13517
    .restart local v3    # "u":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuClusterTimes()[J

    move-result-object v4

    .line 13518
    .local v4, "times":[J
    if-eqz v4, :cond_3

    .line 13519
    const-string v5, "  "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v4}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13515
    .end local v3    # "u":I
    .end local v4    # "times":[J
    :cond_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 13522
    .end local v2    # "i":I
    :cond_4
    const-string v2, "Per UID CPU frequency time in ms:"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13523
    move v2, v1

    .restart local v2    # "i":I
    :goto_3
    if-ge v2, v0, :cond_6

    .line 13524
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 13525
    .restart local v3    # "u":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getCpuFreqTimes(I)[J

    move-result-object v4

    .line 13526
    .restart local v4    # "times":[J
    if-eqz v4, :cond_5

    .line 13527
    const-string v5, "  "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {v4}, Ljava/util/Arrays;->toString([J)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13523
    .end local v3    # "u":I
    .end local v4    # "times":[J
    :cond_5
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 13530
    .end local v2    # "i":I
    :cond_6
    return-void
.end method

.method public dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V
    .locals 4
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "flags"    # I
    .param p4, "reqUid"    # I
    .param p5, "histStart"    # J

    .line 15254
    invoke-super/range {p0 .. p6}, Landroid/os/BatteryStats;->dumpLocked(Landroid/content/Context;Ljava/io/PrintWriter;IIJ)V

    .line 15255
    const-string v0, "Total cpu time reads: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15256
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumSingleUidCpuTimeReads:J

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15257
    const-string v0, "Batched cpu time reads: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15258
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumBatchedSingleUidCpuTimeReads:J

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15259
    const-string v0, "Batching Duration (min): "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15260
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuTimeReadsTrackingStartTime:J

    sub-long/2addr v0, v2

    const-wide/32 v2, 0xea60

    div-long/2addr v0, v2

    invoke-virtual {p2, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    .line 15261
    const-string v0, "All UID cpu time reads since the later of device start or stats reset: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15262
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 15263
    const-string v0, "UIDs removed since the later of device start or stats reset: "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 15264
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumUidsRemoved:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 15265
    return-void
.end method

.method ensureStartClockTime(J)Z
    .locals 12
    .param p1, "currentTime"    # J

    .line 4107
    const-wide v0, 0x757b12c00L

    .line 4110
    .local v0, "ABOUT_ONE_YEAR":J
    const-wide v2, 0x9a7ec800L

    .line 4111
    .local v2, "ABOUT_ONE_MONTH":J
    const-string/jumbo v4, "persist.sys.device_first_boot_time"

    const-string v5, "0"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v4

    .line 4112
    .local v4, "FIRST_BOOT_TIME":J
    const-wide v6, 0x757b12c00L

    cmp-long v8, p1, v6

    if-lez v8, :cond_0

    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    sub-long v6, p1, v6

    cmp-long v6, v8, v6

    if-ltz v6, :cond_1

    :cond_0
    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    const-wide v8, 0x134fd9000L

    sub-long v8, p1, v8

    cmp-long v6, v6, v8

    if-gez v6, :cond_2

    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    cmp-long v6, v6, v4

    if-lez v6, :cond_2

    iget-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    const-wide/32 v8, 0xf731400

    add-long/2addr v8, v4

    cmp-long v6, v6, v8

    if-gez v6, :cond_2

    .line 4118
    :cond_1
    const-string v6, "BatteryStatsImpl"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "currentTime="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v8, ", mStartClockTime="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    invoke-virtual {v7, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4119
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v6

    iget-wide v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    const-wide/16 v10, 0x3e8

    div-long/2addr v8, v10

    sub-long/2addr v6, v8

    sub-long v6, p1, v6

    iput-wide v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    .line 4120
    const/4 v6, 0x1

    return v6

    .line 4122
    :cond_2
    const/4 v6, 0x0

    return v6
.end method

.method public finishAddingCpuLocked(IIIIIIII)V
    .locals 4
    .param p1, "totalUTime"    # I
    .param p2, "totalSTime"    # I
    .param p3, "statUserTime"    # I
    .param p4, "statSystemTime"    # I
    .param p5, "statIOWaitTime"    # I
    .param p6, "statIrqTime"    # I
    .param p7, "statSoftIrqTime"    # I
    .param p8, "statIdleTime"    # I

    .line 4738
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    int-to-long v2, p1

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuUserTime:J

    .line 4739
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    int-to-long v2, p2

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepCpuSystemTime:J

    .line 4740
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    int-to-long v2, p3

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatUserTime:J

    .line 4741
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    int-to-long v2, p4

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSystemTime:J

    .line 4742
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    int-to-long v2, p5

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIOWaitTime:J

    .line 4743
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    int-to-long v2, p6

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIrqTime:J

    .line 4744
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    int-to-long v2, p7

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatSoftIrqTime:J

    .line 4745
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    int-to-long v2, p8

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepStatIdleTime:J

    .line 4746
    return-void
.end method

.method public finishIteratingHistoryLocked()V
    .locals 2

    .line 10762
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10763
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10764
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    .line 10765
    return-void
.end method

.method public finishIteratingOldHistoryLocked()V
    .locals 2

    .line 10681
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10682
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10683
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10684
    return-void
.end method

.method public getAvailableUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .locals 1
    .param p1, "uid"    # I

    .line 13269
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13270
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    return-object v0
.end method

.method public getAwakeTimeBattery()J
    .locals 3

    .line 12835
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getBatteryUptimeLocked()J

    move-result-wide v0

    const/4 v2, 0x1

    invoke-virtual {p0, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryUptime(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getAwakeTimePlugged()J
    .locals 4

    .line 12839
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    const-wide/16 v2, 0x3e8

    mul-long/2addr v0, v2

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getAwakeTimeBattery()J

    move-result-wide v2

    sub-long/2addr v0, v2

    return-wide v0
.end method

.method public getBatteryRealtime(J)J
    .locals 2
    .param p1, "curTime"    # J

    .line 13120
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public getBatteryUptime(J)J
    .locals 2
    .param p1, "curTime"    # J

    .line 13115
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method protected getBatteryUptimeLocked()J
    .locals 5

    .line 13110
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long/2addr v1, v3

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v0

    return-wide v0
.end method

.method public getBluetoothControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6571
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public getBluetoothScanTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6616
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getCameraOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6611
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getCellularBatteryStats()Landroid/os/connectivity/CellularBatteryStats;
    .locals 28

    .line 12989
    move-object/from16 v0, p0

    new-instance v1, Landroid/os/connectivity/CellularBatteryStats;

    invoke-direct {v1}, Landroid/os/connectivity/CellularBatteryStats;-><init>()V

    .line 12990
    .local v1, "s":Landroid/os/connectivity/CellularBatteryStats;
    const/4 v2, 0x0

    .line 12991
    .local v2, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v3, v5

    .line 12992
    .local v3, "rawRealTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v7

    .line 12993
    .local v7, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getSleepTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    const/4 v9, 0x0

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v10

    .line 12994
    .local v10, "sleepTimeMs":J
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v12

    .line 12995
    .local v12, "idleTimeMs":J
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v14

    .line 12996
    .local v14, "rxTimeMs":J
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v5

    .line 12997
    .local v5, "energyConsumedMaMs":J
    const/16 v8, 0x15

    new-array v8, v8, [J

    .line 12998
    .local v8, "timeInRatMs":[J
    move/from16 v18, v9

    .local v18, "i":I
    :goto_0
    move/from16 v19, v18

    .end local v18    # "i":I
    .local v19, "i":I
    array-length v9, v8

    move/from16 v20, v2

    move/from16 v2, v19

    if-ge v2, v9, :cond_0

    .line 12999
    .end local v19    # "i":I
    .local v2, "i":I
    .local v20, "which":I
    const/4 v9, 0x0

    invoke-virtual {v0, v2, v3, v4, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneDataConnectionTime(IJI)J

    move-result-wide v18

    const-wide/16 v16, 0x3e8

    div-long v18, v18, v16

    aput-wide v18, v8, v2

    .line 12998
    add-int/lit8 v18, v2, 0x1

    .end local v2    # "i":I
    .restart local v18    # "i":I
    move/from16 v2, v20

    const/4 v9, 0x0

    goto :goto_0

    .line 13001
    .end local v18    # "i":I
    :cond_0
    sget v2, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    new-array v2, v2, [J

    .line 13002
    .local v2, "timeInRxSignalStrengthLevelMs":[J
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_1
    move-object/from16 v21, v8

    array-length v8, v2

    .end local v8    # "timeInRatMs":[J
    .local v21, "timeInRatMs":[J
    if-ge v9, v8, :cond_1

    .line 13003
    nop

    .line 13004
    const/4 v8, 0x0

    invoke-virtual {v0, v9, v3, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneSignalStrengthTime(IJI)J

    move-result-wide v18

    const-wide/16 v16, 0x3e8

    div-long v18, v18, v16

    aput-wide v18, v2, v9

    .line 13002
    add-int/lit8 v9, v9, 0x1

    move-object/from16 v8, v21

    goto :goto_1

    .line 13006
    .end local v9    # "i":I
    :cond_1
    const/4 v8, 0x5

    .line 13007
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v9

    array-length v9, v9

    .line 13006
    invoke-static {v8, v9}, Ljava/lang/Math;->min(II)I

    move-result v8

    new-array v8, v8, [J

    .line 13008
    .local v8, "txTimeMs":[J
    const-wide/16 v18, 0x0

    .line 13009
    .local v18, "totalTxTimeMs":J
    const/4 v9, 0x0

    .restart local v9    # "i":I
    :goto_2
    move-object/from16 v22, v2

    array-length v2, v8

    .end local v2    # "timeInRxSignalStrengthLevelMs":[J
    .local v22, "timeInRxSignalStrengthLevelMs":[J
    if-ge v9, v2, :cond_2

    .line 13010
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v2

    aget-object v2, v2, v9

    move-object/from16 v23, v7

    const/4 v7, 0x0

    invoke-virtual {v2, v7}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v24

    .end local v7    # "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    .local v23, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    aput-wide v24, v8, v9

    .line 13011
    aget-wide v24, v8, v9

    add-long v18, v18, v24

    .line 13009
    add-int/lit8 v9, v9, 0x1

    move-object/from16 v2, v22

    move-object/from16 v7, v23

    goto :goto_2

    .line 13013
    .end local v9    # "i":I
    .end local v23    # "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    .restart local v7    # "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    :cond_2
    move-object/from16 v23, v7

    const/4 v7, 0x0

    .end local v7    # "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    .restart local v23    # "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    invoke-virtual {v0, v3, v4, v7}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v24

    move-object/from16 v26, v8

    const-wide/16 v16, 0x3e8

    div-long v7, v24, v16

    .end local v8    # "txTimeMs":[J
    .local v26, "txTimeMs":[J
    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/CellularBatteryStats;->setLoggingDurationMs(J)V

    .line 13014
    const/4 v2, 0x0

    invoke-virtual {v0, v3, v4, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getMobileRadioActiveTime(JI)J

    move-result-wide v7

    div-long v7, v7, v16

    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/CellularBatteryStats;->setKernelActiveTimeMs(J)V

    .line 13015
    const/4 v7, 0x1

    invoke-virtual {v0, v7, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v8

    invoke-virtual {v1, v8, v9}, Landroid/os/connectivity/CellularBatteryStats;->setNumPacketsTx(J)V

    .line 13016
    invoke-virtual {v0, v7, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v7

    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/CellularBatteryStats;->setNumBytesTx(J)V

    .line 13017
    invoke-virtual {v0, v2, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v7

    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/CellularBatteryStats;->setNumPacketsRx(J)V

    .line 13018
    invoke-virtual {v0, v2, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v7

    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/CellularBatteryStats;->setNumBytesRx(J)V

    .line 13019
    invoke-virtual {v1, v10, v11}, Landroid/os/connectivity/CellularBatteryStats;->setSleepTimeMs(J)V

    .line 13020
    invoke-virtual {v1, v12, v13}, Landroid/os/connectivity/CellularBatteryStats;->setIdleTimeMs(J)V

    .line 13021
    invoke-virtual {v1, v14, v15}, Landroid/os/connectivity/CellularBatteryStats;->setRxTimeMs(J)V

    .line 13022
    invoke-virtual {v1, v5, v6}, Landroid/os/connectivity/CellularBatteryStats;->setEnergyConsumedMaMs(J)V

    .line 13023
    move-object/from16 v2, v21

    invoke-virtual {v1, v2}, Landroid/os/connectivity/CellularBatteryStats;->setTimeInRatMs([J)V

    .line 13024
    .end local v21    # "timeInRatMs":[J
    .local v2, "timeInRatMs":[J
    move-object/from16 v7, v22

    invoke-virtual {v1, v7}, Landroid/os/connectivity/CellularBatteryStats;->setTimeInRxSignalStrengthLevelMs([J)V

    .line 13025
    .end local v22    # "timeInRxSignalStrengthLevelMs":[J
    .local v7, "timeInRxSignalStrengthLevelMs":[J
    move-object/from16 v8, v26

    invoke-virtual {v1, v8}, Landroid/os/connectivity/CellularBatteryStats;->setTxTimeMs([J)V

    .line 13026
    .end local v26    # "txTimeMs":[J
    .restart local v8    # "txTimeMs":[J
    return-object v1
.end method

.method public getChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 13096
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public getCpuFreqs()[J
    .locals 1

    .line 10141
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    return-object v0
.end method

.method public getCurrentDailyStartTime()J
    .locals 2

    .line 10619
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    return-wide v0
.end method

.method public getDailyChargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 13101
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public getDailyDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 12955
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public getDailyItemLocked(I)Landroid/os/BatteryStats$DailyItem;
    .locals 2
    .param p1, "daysAgo"    # I

    .line 10613
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    sub-int/2addr v0, p1

    .line 10614
    .local v0, "index":I
    if-ltz v0, :cond_0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/BatteryStats$DailyItem;

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    return-object v1
.end method

.method public getDailyPackageChanges()Ljava/util/ArrayList;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Landroid/os/BatteryStats$PackageChange;",
            ">;"
        }
    .end annotation

    .line 13106
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    return-object v0
.end method

.method public getDeviceIdleModeCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    .line 6364
    packed-switch p1, :pswitch_data_0

    .line 6370
    const/4 v0, 0x0

    return v0

    .line 6368
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    .line 6366
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public getDeviceIdleModeTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6354
    packed-switch p1, :pswitch_data_0

    .line 6360
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6358
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6356
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public getDeviceIdlingCount(II)I
    .locals 1
    .param p1, "mode"    # I
    .param p2, "which"    # I

    .line 6394
    packed-switch p1, :pswitch_data_0

    .line 6400
    const/4 v0, 0x0

    return v0

    .line 6398
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    .line 6396
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public getDeviceIdlingTime(IJI)J
    .locals 2
    .param p1, "mode"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6384
    packed-switch p1, :pswitch_data_0

    .line 6390
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6388
    :pswitch_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6386
    :pswitch_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public getDischargeAmount(I)I
    .locals 2
    .param p1, "which"    # I

    .line 13169
    if-nez p1, :cond_0

    .line 13170
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v0

    goto :goto_0

    .line 13171
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeStartLevel()I

    move-result v0

    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeCurrentLevel()I

    move-result v1

    sub-int/2addr v0, v1

    .line 13172
    .local v0, "dischargeAmount":I
    :goto_0
    if-gez v0, :cond_1

    .line 13173
    const/4 v0, 0x0

    .line 13175
    :cond_1
    return v0
.end method

.method public getDischargeAmountScreenDoze()I
    .locals 3

    .line 13230
    monitor-enter p0

    .line 13231
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 13232
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13234
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13236
    :cond_0
    monitor-exit p0

    return v0

    .line 13237
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenDozeSinceCharge()I
    .locals 3

    .line 13242
    monitor-enter p0

    .line 13243
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 13244
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13246
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13248
    :cond_0
    monitor-exit p0

    return v0

    .line 13249
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOff()I
    .locals 3

    .line 13204
    monitor-enter p0

    .line 13205
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 13206
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13208
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13211
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenDoze()I

    move-result v1

    add-int/2addr v1, v0

    monitor-exit p0

    return v1

    .line 13212
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOffSinceCharge()I
    .locals 3

    .line 13217
    monitor-enter p0

    .line 13218
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 13219
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOff(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13221
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13224
    :cond_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    add-int/2addr v1, v0

    monitor-exit p0

    return v1

    .line 13225
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOn()I
    .locals 3

    .line 13180
    monitor-enter p0

    .line 13181
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 13182
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13184
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13186
    :cond_0
    monitor-exit p0

    return v0

    .line 13187
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeAmountScreenOnSinceCharge()I
    .locals 3

    .line 13192
    monitor-enter p0

    .line 13193
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 13194
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13196
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13198
    :cond_0
    monitor-exit p0

    return v0

    .line 13199
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeCurrentLevel()I
    .locals 1

    .line 13136
    monitor-enter p0

    .line 13137
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeCurrentLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 13138
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeCurrentLevelLocked()I
    .locals 1

    .line 13142
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    return v0
.end method

.method public getDischargeLevelStepTracker()Landroid/os/BatteryStats$LevelStepTracker;
    .locals 1

    .line 12950
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    return-object v0
.end method

.method public getDischargeStartLevel()I
    .locals 1

    .line 13125
    monitor-enter p0

    .line 13126
    :try_start_0
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeStartLevelLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 13127
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getDischargeStartLevelLocked()I
    .locals 1

    .line 13131
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    return v0
.end method

.method public getEndPlatformVersion()Ljava/lang/String;
    .locals 1

    .line 6651
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    return-object v0
.end method

.method public getEstimatedBatteryCapacity()I
    .locals 1

    .line 1039
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    return v0
.end method

.method public getExternalStatsCollectionRateLimitMs()J
    .locals 2

    .line 13485
    monitor-enter p0

    .line 13486
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-wide v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->EXTERNAL_STATS_COLLECTION_RATE_LIMIT_MS:J

    monitor-exit p0

    return-wide v0

    .line 13487
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getFlashlightOnCount(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6606
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    int-to-long v0, v0

    return-wide v0
.end method

.method public getFlashlightOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6601
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getGlobalWifiRunningTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6524
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getGpsBatteryDrainMaMs()J
    .locals 19

    .line 6423
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v2, "gps.voltage"

    invoke-virtual {v1, v2}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v1

    const-wide v3, 0x408f400000000000L    # 1000.0

    div-double/2addr v1, v3

    .line 6425
    .local v1, "opVolt":D
    const-wide/16 v3, 0x0

    cmpl-double v3, v1, v3

    if-nez v3, :cond_0

    .line 6426
    const-wide/16 v3, 0x0

    return-wide v3

    .line 6428
    :cond_0
    const-wide/16 v3, 0x0

    .line 6429
    .local v3, "energyUsedMaMs":D
    const/4 v5, 0x0

    .line 6430
    .local v5, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    const-wide/16 v8, 0x3e8

    mul-long/2addr v6, v8

    .line 6431
    .local v6, "rawRealtime":J
    const/4 v10, 0x0

    move-wide v11, v3

    move v3, v10

    .local v3, "i":I
    .local v11, "energyUsedMaMs":D
    :goto_0
    const/4 v4, 0x2

    if-ge v3, v4, :cond_1

    .line 6432
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v13, "gps.signalqualitybased"

    .line 6433
    invoke-virtual {v4, v13, v3}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;I)D

    move-result-wide v13

    .line 6434
    invoke-virtual {v0, v3, v6, v7, v10}, Lcom/android/internal/os/BatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v15

    move-wide/from16 v17, v11

    div-long v10, v15, v8

    .end local v11    # "energyUsedMaMs":D
    .local v17, "energyUsedMaMs":D
    long-to-double v10, v10

    mul-double/2addr v13, v10

    add-double v11, v17, v13

    .line 6431
    .end local v17    # "energyUsedMaMs":D
    .restart local v11    # "energyUsedMaMs":D
    add-int/lit8 v3, v3, 0x1

    const/4 v10, 0x0

    goto :goto_0

    .line 6436
    .end local v3    # "i":I
    :cond_1
    move-wide/from16 v17, v11

    .end local v11    # "energyUsedMaMs":D
    .restart local v17    # "energyUsedMaMs":D
    move-wide/from16 v3, v17

    double-to-long v8, v3

    .end local v17    # "energyUsedMaMs":D
    .local v3, "energyUsedMaMs":D
    return-wide v8
.end method

.method public getGpsBatteryStats()Landroid/os/connectivity/GpsBatteryStats;
    .locals 11

    .line 13081
    new-instance v0, Landroid/os/connectivity/GpsBatteryStats;

    invoke-direct {v0}, Landroid/os/connectivity/GpsBatteryStats;-><init>()V

    .line 13082
    .local v0, "s":Landroid/os/connectivity/GpsBatteryStats;
    const/4 v1, 0x0

    .line 13083
    .local v1, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    mul-long/2addr v2, v4

    .line 13084
    .local v2, "rawRealTime":J
    const/4 v6, 0x0

    invoke-virtual {p0, v2, v3, v6}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v7

    div-long/2addr v7, v4

    invoke-virtual {v0, v7, v8}, Landroid/os/connectivity/GpsBatteryStats;->setLoggingDurationMs(J)V

    .line 13085
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getGpsBatteryDrainMaMs()J

    move-result-wide v7

    invoke-virtual {v0, v7, v8}, Landroid/os/connectivity/GpsBatteryStats;->setEnergyConsumedMaMs(J)V

    .line 13086
    const/4 v7, 0x2

    new-array v7, v7, [J

    .line 13087
    .local v7, "time":[J
    move v8, v6

    .local v8, "i":I
    :goto_0
    array-length v9, v7

    if-ge v8, v9, :cond_0

    .line 13088
    invoke-virtual {p0, v8, v2, v3, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getGpsSignalQualityTime(IJI)J

    move-result-wide v9

    div-long/2addr v9, v4

    aput-wide v9, v7, v8

    .line 13087
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    .line 13090
    .end local v8    # "i":I
    :cond_0
    invoke-virtual {v0, v7}, Landroid/os/connectivity/GpsBatteryStats;->setTimeInGpsSignalQualityLevel([J)V

    .line 13091
    return-object v0
.end method

.method public getGpsSignalQualityTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6415
    if-ltz p1, :cond_1

    const/4 v0, 0x2

    if-lt p1, v0, :cond_0

    goto :goto_0

    .line 6418
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0

    .line 6416
    :cond_1
    :goto_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public getHighDischargeAmountSinceCharge()I
    .locals 3

    .line 13158
    monitor-enter p0

    .line 13159
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 13160
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13161
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    .line 13163
    :cond_0
    monitor-exit p0

    return v0

    .line 13164
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getHistoryBaseTime()J
    .locals 2

    .line 10769
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    return-wide v0
.end method

.method public getHistoryStringPoolBytes()I
    .locals 2

    .line 10726
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v0, v0

    mul-int/lit8 v0, v0, 0xc

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    mul-int/lit8 v1, v1, 0x2

    add-int/2addr v0, v1

    return v0
.end method

.method public getHistoryStringPoolSize()I
    .locals 1

    .line 10719
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    array-length v0, v0

    return v0
.end method

.method public getHistoryTagPoolString(I)Ljava/lang/String;
    .locals 1
    .param p1, "index"    # I

    .line 10731
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public getHistoryTagPoolUid(I)I
    .locals 1
    .param p1, "index"    # I

    .line 10736
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    aget v0, v0, p1

    return v0
.end method

.method public getHistoryTotalSize()I
    .locals 1

    .line 10687
    sget v0, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_BUFFER:I

    return v0
.end method

.method public getHistoryUsedSize()I
    .locals 1

    .line 10691
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataSize()I

    move-result v0

    return v0
.end method

.method public getInteractiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6341
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getIsOnBattery()Z
    .locals 1

    .line 6659
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    return v0
.end method

.method public getKernelMemoryStats()Landroid/util/LongSparseArray;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/LongSparseArray<",
            "Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;",
            ">;"
        }
    .end annotation

    .line 233
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    return-object v0
.end method

.method public getKernelMemoryTimerLocked(J)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "bucket"    # J

    .line 3146
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, p1, p2}, Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3147
    .local v0, "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3148
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3149
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1, p1, p2, v0}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 3151
    :cond_0
    return-object v0
.end method

.method public getKernelWakelockStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1001
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3137
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3138
    .local v0, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3139
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3140
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3142
    :cond_0
    return-object v0
.end method

.method public getLongestDeviceIdleModeTime(I)J
    .locals 2
    .param p1, "mode"    # I

    .line 6374
    packed-switch p1, :pswitch_data_0

    .line 6380
    const-wide/16 v0, 0x0

    return-wide v0

    .line 6378
    :pswitch_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    return-wide v0

    .line 6376
    :pswitch_1
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    return-wide v0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public getLowDischargeAmountSinceCharge()I
    .locals 3

    .line 13147
    monitor-enter p0

    .line 13148
    :try_start_0
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 13149
    .local v0, "val":I
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eqz v1, :cond_0

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v1, v2, :cond_0

    .line 13150
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    sub-int/2addr v1, v2

    add-int/lit8 v1, v1, -0x1

    add-int/2addr v0, v1

    .line 13152
    :cond_0
    monitor-exit p0

    return v0

    .line 13153
    .end local v0    # "val":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getMaxLearnedBatteryCapacity()I
    .locals 1

    .line 1049
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    return v0
.end method

.method public getMinLearnedBatteryCapacity()I
    .locals 1

    .line 1044
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    return v0
.end method

.method public getMobileIfaces()[Ljava/lang/String;
    .locals 2

    .line 6309
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6310
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object v1

    .line 6311
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getMobileRadioActiveAdjustedTime(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6494
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getMobileRadioActiveCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6490
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getMobileRadioActiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6486
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getMobileRadioActiveUnknownCount(I)I
    .locals 2
    .param p1, "which"    # I

    .line 6502
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    long-to-int v0, v0

    return v0
.end method

.method public getMobileRadioActiveUnknownTime(I)J
    .locals 2
    .param p1, "which"    # I

    .line 6498
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getModemControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6581
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public getNetworkActivityBytes(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    .line 6621
    if-ltz p1, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v0, v0

    if-ge p1, v0, :cond_0

    .line 6622
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0

    .line 6624
    :cond_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public getNetworkActivityPackets(II)J
    .locals 2
    .param p1, "type"    # I
    .param p2, "which"    # I

    .line 6630
    if-ltz p1, :cond_0

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v0, v0

    if-ge p1, v0, :cond_0

    .line 6631
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0

    .line 6633
    :cond_0
    const-wide/16 v0, 0x0

    return-wide v0
.end method

.method public getNextHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 10
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 10741
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    .line 10742
    .local v0, "pos":I
    if-nez v0, :cond_0

    .line 10743
    invoke-virtual {p1}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 10745
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-lt v0, v1, :cond_1

    move v1, v3

    goto :goto_0

    :cond_1
    move v1, v2

    .line 10746
    .local v1, "end":Z
    :goto_0
    if-eqz v1, :cond_2

    .line 10747
    return v2

    .line 10750
    :cond_2
    iget-wide v4, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 10751
    .local v4, "lastRealtime":J
    iget-wide v6, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 10752
    .local v6, "lastWalltime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {p0, v2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    .line 10753
    iget-byte v2, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v8, 0x5

    if-eq v2, v8, :cond_3

    iget-byte v2, p1, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v8, 0x7

    if-eq v2, v8, :cond_3

    const-wide/16 v8, 0x0

    cmp-long v2, v6, v8

    if-eqz v2, :cond_3

    .line 10755
    iget-wide v8, p1, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long/2addr v8, v4

    add-long/2addr v8, v6

    iput-wide v8, p1, Landroid/os/BatteryStats$HistoryItem;->currentTime:J

    .line 10757
    :cond_3
    return v3
.end method

.method public getNextMaxDailyDeadline()J
    .locals 2

    .line 10629
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    return-wide v0
.end method

.method public getNextMinDailyDeadline()J
    .locals 2

    .line 10624
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    return-wide v0
.end method

.method public getNextOldHistoryLocked(Landroid/os/BatteryStats$HistoryItem;)Z
    .locals 14
    .param p1, "out"    # Landroid/os/BatteryStats$HistoryItem;

    .line 10648
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataPosition()I

    move-result v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-lt v0, v1, :cond_0

    move v0, v3

    goto :goto_0

    :cond_0
    move v0, v2

    .line 10649
    .local v0, "end":Z
    :goto_0
    if-nez v0, :cond_2

    .line 10650
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p0, v1, v4}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V

    .line 10651
    iget-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v4, v4, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    const/4 v5, 0x6

    if-ne v4, v5, :cond_1

    move v4, v3

    goto :goto_1

    :cond_1
    move v4, v2

    :goto_1
    or-int/2addr v1, v4

    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    .line 10653
    :cond_2
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10654
    .local v1, "cur":Landroid/os/BatteryStats$HistoryItem;
    if-nez v1, :cond_4

    .line 10655
    iget-boolean v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    if-nez v3, :cond_3

    if-nez v0, :cond_3

    .line 10656
    const-string v3, "BatteryStatsImpl"

    const-string v4, "Old history ends before new history!"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10658
    :cond_3
    return v2

    .line 10660
    :cond_4
    invoke-virtual {p1, v1}, Landroid/os/BatteryStats$HistoryItem;->setTo(Landroid/os/BatteryStats$HistoryItem;)V

    .line 10661
    iget-object v2, v1, Landroid/os/BatteryStats$HistoryItem;->next:Landroid/os/BatteryStats$HistoryItem;

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    .line 10662
    iget-boolean v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    if-nez v2, :cond_6

    .line 10663
    if-eqz v0, :cond_5

    .line 10664
    const-string v2, "BatteryStatsImpl"

    const-string v4, "New history ends before old history!"

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 10665
    :cond_5
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {p1, v2}, Landroid/os/BatteryStats$HistoryItem;->same(Landroid/os/BatteryStats$HistoryItem;)Z

    move-result v2

    if-nez v2, :cond_6

    .line 10666
    new-instance v2, Lcom/android/internal/util/FastPrintWriter;

    new-instance v4, Landroid/util/LogWriter;

    const/4 v5, 0x5

    const-string v6, "BatteryStatsImpl"

    invoke-direct {v4, v5, v6}, Landroid/util/LogWriter;-><init>(ILjava/lang/String;)V

    invoke-direct {v2, v4}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;)V

    .line 10667
    .local v2, "pw":Ljava/io/PrintWriter;
    const-string v4, "Histories differ!"

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10668
    const-string v4, "Old history:"

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10669
    new-instance v7, Landroid/os/BatteryStats$HistoryPrinter;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    const-wide/16 v10, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x1

    move-object v8, v2

    move-object v9, p1

    invoke-virtual/range {v7 .. v13}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    .line 10670
    const-string v4, "New history:"

    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10671
    new-instance v7, Landroid/os/BatteryStats$HistoryPrinter;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryPrinter;-><init>()V

    iget-object v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual/range {v7 .. v13}, Landroid/os/BatteryStats$HistoryPrinter;->printNextItem(Ljava/io/PrintWriter;Landroid/os/BatteryStats$HistoryItem;JZZ)V

    .line 10673
    invoke-virtual {v2}, Ljava/io/PrintWriter;->flush()V

    .line 10676
    .end local v2    # "pw":Ljava/io/PrintWriter;
    :cond_6
    :goto_2
    return v3
.end method

.method public getNumConnectivityChange(I)I
    .locals 2
    .param p1, "which"    # I

    .line 6404
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 6405
    .local v0, "val":I
    const/4 v1, 0x1

    if-ne p1, v1, :cond_0

    .line 6406
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    sub-int/2addr v0, v1

    goto :goto_0

    .line 6407
    :cond_0
    const/4 v1, 0x2

    if-ne p1, v1, :cond_1

    .line 6408
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    sub-int/2addr v0, v1

    .line 6410
    :cond_1
    :goto_0
    return v0
.end method

.method public getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;

    .line 13313
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13314
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 13315
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v1

    return-object v1
.end method

.method public getParcelVersion()I
    .locals 1

    .line 6655
    const/16 v0, 0xb1

    return v0
.end method

.method public getPhoneDataConnectionCount(II)I
    .locals 1
    .param p1, "dataType"    # I
    .param p2, "which"    # I

    .line 6478
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getPhoneDataConnectionTime(IJI)J
    .locals 2
    .param p1, "dataType"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6473
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic getPhoneDataConnectionTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 132
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneDataConnectionTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public getPhoneDataConnectionTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "dataType"    # I

    .line 6482
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public getPhoneOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6444
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getPhoneOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6440
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getPhoneSignalScanningTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6455
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic getPhoneSignalScanningTimer()Landroid/os/BatteryStats$Timer;
    .locals 1

    .line 132
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneSignalScanningTimer()Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object v0

    return-object v0
.end method

.method public getPhoneSignalScanningTimer()Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1

    .line 6460
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    return-object v0
.end method

.method public getPhoneSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    .line 6464
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getPhoneSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6449
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic getPhoneSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 132
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPhoneSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public getPhoneSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "strengthBin"    # I

    .line 6468
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public getPowerSaveModeEnabledCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6349
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getPowerSaveModeEnabledTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6345
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "name"    # Ljava/lang/String;

    .line 13303
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13304
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 13305
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    return-object v1
.end method

.method public getProcessWakeTime(IIJ)J
    .locals 7
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "realtime"    # J

    .line 4757
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4758
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 4759
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    const-wide/16 v1, 0x0

    if-eqz v0, :cond_1

    .line 4760
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$Uid$Pid;

    .line 4761
    .local v3, "p":Landroid/os/BatteryStats$Uid$Pid;
    if-eqz v3, :cond_1

    .line 4762
    iget-wide v4, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeSumMs:J

    iget v6, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeNesting:I

    if-lez v6, :cond_0

    iget-wide v1, v3, Landroid/os/BatteryStats$Uid$Pid;->mWakeStartMs:J

    sub-long v1, p3, v1

    nop

    :cond_0
    add-long/2addr v4, v1

    return-wide v4

    .line 4765
    .end local v3    # "p":Landroid/os/BatteryStats$Uid$Pid;
    :cond_1
    return-wide v1
.end method

.method public getRpmStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 986
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3101
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3102
    .local v0, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3103
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3104
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3106
    :cond_0
    return-object v0
.end method

.method public getScreenBrightnessTime(IJI)J
    .locals 2
    .param p1, "brightnessBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6332
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic getScreenBrightnessTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 132
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getScreenBrightnessTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public getScreenBrightnessTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "brightnessBin"    # I

    .line 6337
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public getScreenDozeCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6327
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getScreenDozeTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6323
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getScreenOffRpmStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 992
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3111
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3112
    .local v0, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3113
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3114
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3116
    :cond_0
    return-object v0
.end method

.method public getScreenOnCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6319
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getScreenOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6315
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "name"    # Ljava/lang/String;

    .line 13323
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 13324
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 13325
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v1

    return-object v1
.end method

.method public getStartClockTime()J
    .locals 9

    .line 6638
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    .line 6639
    .local v7, "currentTime":J
    invoke-virtual {p0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl;->ensureStartClockTime(J)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 6640
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 6641
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v5

    .line 6640
    move-object v0, p0

    move-wide v1, v7

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    .line 6643
    :cond_0
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    return-wide v0
.end method

.method public getStartCount()I
    .locals 1

    .line 10774
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    return v0
.end method

.method public getStartPlatformVersion()Ljava/lang/String;
    .locals 1

    .line 6647
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    return-object v0
.end method

.method public getUahDischarge(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1014
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getUahDischargeDeepDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1034
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getUahDischargeLightDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1029
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getUahDischargeScreenDoze(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1024
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getUahDischargeScreenOff(I)J
    .locals 2
    .param p1, "which"    # I

    .line 1019
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->getCountLocked(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public getUidStats()Landroid/util/SparseArray;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/SparseArray<",
            "+",
            "Landroid/os/BatteryStats$Uid;",
            ">;"
        }
    .end annotation

    .line 6663
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    return-object v0
.end method

.method public getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .locals 2
    .param p1, "uid"    # I

    .line 13256
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 13257
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-nez v0, :cond_0

    .line 13258
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-direct {v1, p0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    move-object v0, v1

    .line 13259
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13261
    :cond_0
    return-object v0
.end method

.method public getWakeupReasonStats()Ljava/util/Map;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map<",
            "Ljava/lang/String;",
            "+",
            "Lcom/android/internal/os/BatteryStatsImpl$Timer;",
            ">;"
        }
    .end annotation

    .line 1009
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    return-object v0
.end method

.method public getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    .locals 4
    .param p1, "name"    # Ljava/lang/String;

    .line 3124
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 3125
    .local v0, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v0, :cond_0

    .line 3126
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v0, v1

    .line 3127
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3129
    :cond_0
    return-object v0
.end method

.method public getWifiActiveTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6520
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getWifiBatteryStats()Landroid/os/connectivity/WifiBatteryStats;
    .locals 40

    .line 13031
    move-object/from16 v0, p0

    new-instance v1, Landroid/os/connectivity/WifiBatteryStats;

    invoke-direct {v1}, Landroid/os/connectivity/WifiBatteryStats;-><init>()V

    .line 13032
    .local v1, "s":Landroid/os/connectivity/WifiBatteryStats;
    const/4 v2, 0x0

    .line 13033
    .local v2, "which":I
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    const-wide/16 v5, 0x3e8

    mul-long/2addr v3, v5

    .line 13034
    .local v3, "rawRealTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;

    move-result-object v7

    .line 13035
    .local v7, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getIdleTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    const/4 v9, 0x0

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v10

    .line 13036
    .local v10, "idleTimeMs":J
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getScanTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v12

    .line 13037
    .local v12, "scanTimeMs":J
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getRxTimeCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v14

    .line 13038
    .local v14, "rxTimeMs":J
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getTxTimeCounters()[Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    aget-object v8, v8, v9

    invoke-virtual {v8, v9}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v5

    .line 13039
    .local v5, "txTimeMs":J
    nop

    .line 13040
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v18

    move-wide/from16 v20, v12

    const-wide/16 v16, 0x3e8

    mul-long v12, v18, v16

    .end local v12    # "scanTimeMs":J
    .local v20, "scanTimeMs":J
    invoke-virtual {v0, v12, v13, v9}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v12

    div-long v12, v12, v16

    .line 13041
    .local v12, "totalControllerActivityTimeMs":J
    add-long v18, v10, v14

    add-long v18, v18, v5

    move-wide/from16 v22, v10

    sub-long v9, v12, v18

    .line 13043
    .end local v10    # "idleTimeMs":J
    .local v9, "sleepTimeMs":J
    .local v22, "idleTimeMs":J
    invoke-virtual {v7}, Landroid/os/BatteryStats$ControllerActivityCounter;->getPowerCounter()Landroid/os/BatteryStats$LongCounter;

    move-result-object v8

    move-object/from16 v24, v7

    const/4 v11, 0x0

    invoke-virtual {v8, v11}, Landroid/os/BatteryStats$LongCounter;->getCountLocked(I)J

    move-result-wide v7

    .line 13044
    .local v7, "energyConsumedMaMs":J
    .local v24, "counter":Landroid/os/BatteryStats$ControllerActivityCounter;
    const-wide/16 v18, 0x0

    .line 13045
    .local v18, "numAppScanRequest":J
    move-wide/from16 v25, v12

    move-wide/from16 v12, v18

    const/4 v11, 0x0

    .end local v18    # "numAppScanRequest":J
    .local v11, "i":I
    .local v12, "numAppScanRequest":J
    .local v25, "totalControllerActivityTimeMs":J
    :goto_0
    move/from16 v27, v2

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .end local v2    # "which":I
    .local v27, "which":I
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge v11, v2, :cond_0

    .line 13046
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v11}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget-object v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-wide/from16 v28, v7

    const/4 v7, 0x0

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getCountLocked(I)I

    move-result v2

    .end local v7    # "energyConsumedMaMs":J
    .local v28, "energyConsumedMaMs":J
    int-to-long v7, v2

    add-long/2addr v12, v7

    .line 13045
    add-int/lit8 v11, v11, 0x1

    move/from16 v2, v27

    move-wide/from16 v7, v28

    goto :goto_0

    .line 13048
    .end local v11    # "i":I
    .end local v28    # "energyConsumedMaMs":J
    .restart local v7    # "energyConsumedMaMs":J
    :cond_0
    move-wide/from16 v28, v7

    .end local v7    # "energyConsumedMaMs":J
    .restart local v28    # "energyConsumedMaMs":J
    const/16 v2, 0x8

    new-array v7, v2, [J

    .line 13049
    .local v7, "timeInStateMs":[J
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_1
    if-ge v8, v2, :cond_1

    .line 13050
    const/4 v11, 0x0

    invoke-virtual {v0, v8, v3, v4, v11}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiStateTime(IJI)J

    move-result-wide v18

    const-wide/16 v16, 0x3e8

    div-long v18, v18, v16

    aput-wide v18, v7, v8

    .line 13049
    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    .line 13052
    .end local v8    # "i":I
    :cond_1
    const/16 v2, 0xd

    new-array v8, v2, [J

    .line 13053
    .local v8, "timeInSupplStateMs":[J
    const/4 v11, 0x0

    .restart local v11    # "i":I
    :goto_2
    if-ge v11, v2, :cond_2

    .line 13054
    const/4 v2, 0x0

    invoke-virtual {v0, v11, v3, v4, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSupplStateTime(IJI)J

    move-result-wide v18

    const-wide/16 v16, 0x3e8

    div-long v18, v18, v16

    aput-wide v18, v8, v11

    .line 13053
    add-int/lit8 v11, v11, 0x1

    const/16 v2, 0xd

    goto :goto_2

    .line 13056
    .end local v11    # "i":I
    :cond_2
    const/4 v2, 0x5

    new-array v11, v2, [J

    .line 13057
    .local v11, "timeSignalStrengthTimeMs":[J
    const/16 v18, 0x0

    .local v18, "i":I
    :goto_3
    move/from16 v30, v18

    .end local v18    # "i":I
    .local v30, "i":I
    move-object/from16 v31, v8

    move/from16 v8, v30

    if-ge v8, v2, :cond_3

    .line 13058
    .end local v30    # "i":I
    .local v8, "i":I
    .local v31, "timeInSupplStateMs":[J
    const/4 v2, 0x0

    invoke-virtual {v0, v8, v3, v4, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSignalStrengthTime(IJI)J

    move-result-wide v18

    const-wide/16 v16, 0x3e8

    div-long v18, v18, v16

    aput-wide v18, v11, v8

    .line 13057
    add-int/lit8 v18, v8, 0x1

    .end local v8    # "i":I
    .restart local v18    # "i":I
    move-object/from16 v8, v31

    const/4 v2, 0x5

    goto :goto_3

    .line 13060
    .end local v18    # "i":I
    :cond_3
    const/4 v2, 0x0

    const-wide/16 v16, 0x3e8

    invoke-virtual {v0, v3, v4, v2}, Lcom/android/internal/os/BatteryStatsImpl;->computeBatteryRealtime(JI)J

    move-result-wide v18

    move-wide/from16 v32, v3

    div-long v2, v18, v16

    .end local v3    # "rawRealTime":J
    .local v32, "rawRealTime":J
    invoke-virtual {v1, v2, v3}, Landroid/os/connectivity/WifiBatteryStats;->setLoggingDurationMs(J)V

    .line 13061
    move-wide/from16 v3, v32

    const/4 v2, 0x0

    invoke-virtual {v0, v3, v4, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiActiveTime(JI)J

    move-result-wide v18

    .end local v32    # "rawRealTime":J
    .restart local v3    # "rawRealTime":J
    move-wide/from16 v34, v3

    div-long v2, v18, v16

    .end local v3    # "rawRealTime":J
    .local v34, "rawRealTime":J
    invoke-virtual {v1, v2, v3}, Landroid/os/connectivity/WifiBatteryStats;->setKernelActiveTimeMs(J)V

    .line 13062
    const/4 v2, 0x3

    move-object/from16 v36, v7

    const/4 v3, 0x0

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v7

    .end local v7    # "timeInStateMs":[J
    .local v36, "timeInStateMs":[J
    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/WifiBatteryStats;->setNumPacketsTx(J)V

    .line 13063
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v7

    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/WifiBatteryStats;->setNumBytesTx(J)V

    .line 13064
    const/4 v2, 0x2

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityPackets(II)J

    move-result-wide v7

    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/WifiBatteryStats;->setNumPacketsRx(J)V

    .line 13065
    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getNetworkActivityBytes(II)J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Landroid/os/connectivity/WifiBatteryStats;->setNumBytesRx(J)V

    .line 13066
    invoke-virtual {v1, v9, v10}, Landroid/os/connectivity/WifiBatteryStats;->setSleepTimeMs(J)V

    .line 13067
    move-wide/from16 v2, v22

    invoke-virtual {v1, v2, v3}, Landroid/os/connectivity/WifiBatteryStats;->setIdleTimeMs(J)V

    .line 13068
    .end local v22    # "idleTimeMs":J
    .local v2, "idleTimeMs":J
    invoke-virtual {v1, v14, v15}, Landroid/os/connectivity/WifiBatteryStats;->setRxTimeMs(J)V

    .line 13069
    invoke-virtual {v1, v5, v6}, Landroid/os/connectivity/WifiBatteryStats;->setTxTimeMs(J)V

    .line 13070
    move-wide/from16 v7, v20

    invoke-virtual {v1, v7, v8}, Landroid/os/connectivity/WifiBatteryStats;->setScanTimeMs(J)V

    .line 13071
    .end local v20    # "scanTimeMs":J
    .local v7, "scanTimeMs":J
    move-wide/from16 v37, v2

    move-wide/from16 v2, v28

    invoke-virtual {v1, v2, v3}, Landroid/os/connectivity/WifiBatteryStats;->setEnergyConsumedMaMs(J)V

    .line 13072
    .end local v28    # "energyConsumedMaMs":J
    .local v2, "energyConsumedMaMs":J
    .local v37, "idleTimeMs":J
    invoke-virtual {v1, v12, v13}, Landroid/os/connectivity/WifiBatteryStats;->setNumAppScanRequest(J)V

    .line 13073
    move-object/from16 v4, v36

    invoke-virtual {v1, v4}, Landroid/os/connectivity/WifiBatteryStats;->setTimeInStateMs([J)V

    .line 13074
    .end local v36    # "timeInStateMs":[J
    .local v4, "timeInStateMs":[J
    move-object/from16 v0, v31

    invoke-virtual {v1, v0}, Landroid/os/connectivity/WifiBatteryStats;->setTimeInSupplicantStateMs([J)V

    .line 13075
    .end local v31    # "timeInSupplStateMs":[J
    .local v0, "timeInSupplStateMs":[J
    invoke-virtual {v1, v11}, Landroid/os/connectivity/WifiBatteryStats;->setTimeInRxSignalStrengthLevelMs([J)V

    .line 13076
    return-object v1
.end method

.method public getWifiControllerActivity()Landroid/os/BatteryStats$ControllerActivityCounter;
    .locals 1

    .line 6576
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    return-object v0
.end method

.method public getWifiIfaces()[Ljava/lang/String;
    .locals 2

    .line 6303
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6304
    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    monitor-exit v0

    return-object v1

    .line 6305
    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getWifiMulticastWakelockCount(I)I
    .locals 1
    .param p1, "which"    # I

    .line 6512
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getWifiMulticastWakelockTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6507
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getWifiOnTime(JI)J
    .locals 2
    .param p1, "elapsedRealtimeUs"    # J
    .param p3, "which"    # I

    .line 6516
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public getWifiSignalStrengthCount(II)I
    .locals 1
    .param p1, "strengthBin"    # I
    .param p2, "which"    # I

    .line 6562
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getWifiSignalStrengthTime(IJI)J
    .locals 2
    .param p1, "strengthBin"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6557
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic getWifiSignalStrengthTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 132
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public getWifiSignalStrengthTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "strengthBin"    # I

    .line 6566
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public getWifiStateCount(II)I
    .locals 1
    .param p1, "wifiState"    # I
    .param p2, "which"    # I

    .line 6534
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getWifiStateTime(IJI)J
    .locals 2
    .param p1, "wifiState"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6529
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic getWifiStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 132
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public getWifiStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "wifiState"    # I

    .line 6538
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public getWifiSupplStateCount(II)I
    .locals 1
    .param p1, "state"    # I
    .param p2, "which"    # I

    .line 6548
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getCountLocked(I)I

    move-result v0

    return v0
.end method

.method public getWifiSupplStateTime(IJI)J
    .locals 2
    .param p1, "state"    # I
    .param p2, "elapsedRealtimeUs"    # J
    .param p4, "which"    # I

    .line 6543
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTotalTimeLocked(JI)J

    move-result-wide v0

    return-wide v0
.end method

.method public bridge synthetic getWifiSupplStateTimer(I)Landroid/os/BatteryStats$Timer;
    .locals 0

    .line 132
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getWifiSupplStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;

    move-result-object p1

    return-object p1
.end method

.method public getWifiSupplStateTimer(I)Lcom/android/internal/os/BatteryStatsImpl$Timer;
    .locals 1
    .param p1, "state"    # I

    .line 6552
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v0, v0, p1

    return-object v0
.end method

.method public hasBluetoothActivityReporting()Z
    .locals 1

    .line 6586
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    return v0
.end method

.method public hasModemActivityReporting()Z
    .locals 1

    .line 6596
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    return v0
.end method

.method public hasWifiActivityReporting()Z
    .locals 1

    .line 6591
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    return v0
.end method

.method initDischarge()V
    .locals 2

    .line 10809
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 10810
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 10811
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10812
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 10813
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10814
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 10815
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10816
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 10817
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10818
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10819
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10820
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10821
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10822
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10823
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->reset(Z)V

    .line 10824
    return-void
.end method

.method initTimes(JJ)V
    .locals 2
    .param p1, "uptime"    # J
    .param p3, "realtime"    # J

    .line 10799
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    .line 10800
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->init(JJ)V

    .line 10801
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->init(JJ)V

    .line 10802
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    .line 10803
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    .line 10804
    iput-wide p3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    .line 10805
    iput-wide p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    .line 10806
    return-void
.end method

.method public isCharging()Z
    .locals 1

    .line 10782
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    return v0
.end method

.method public isOnBattery()Z
    .locals 1

    .line 10778
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    return v0
.end method

.method public isOnBatteryLocked()Z
    .locals 1

    .line 11952
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    return v0
.end method

.method public isOnBatteryScreenOffLocked()Z
    .locals 1

    .line 11956
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    return v0
.end method

.method public isScreenDoze(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10795
    const/4 v0, 0x3

    if-eq p1, v0, :cond_1

    const/4 v0, 0x4

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public isScreenOff(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10791
    const/4 v0, 0x1

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public isScreenOn(I)Z
    .locals 1
    .param p1, "state"    # I

    .line 10786
    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x5

    if-eq p1, v0, :cond_1

    const/4 v0, 0x6

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public mapUid(I)I
    .locals 2
    .param p1, "uid"    # I

    .line 4092
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    .line 4093
    .local v0, "isolated":I
    if-lez v0, :cond_0

    move v1, v0

    goto :goto_0

    :cond_0
    move v1, p1

    :goto_0
    return v1
.end method

.method public markPartialTimersAsEligible()V
    .locals 5
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 12042
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-static {v0, v1}, Lcom/android/internal/util/ArrayUtils;->referenceEquals(Ljava/util/ArrayList;Ljava/util/ArrayList;)Z

    move-result v0

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    .line 12044
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    .line 12045
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-boolean v1, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 12044
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 12050
    .end local v0    # "i":I
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    sub-int/2addr v0, v1

    .restart local v0    # "i":I
    :goto_1
    const/4 v2, 0x0

    if-ltz v0, :cond_1

    .line 12051
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iput-boolean v2, v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 12050
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 12053
    .end local v0    # "i":I
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 12056
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 12057
    .local v0, "numPartialTimers":I
    nop

    .local v2, "i":I
    :goto_2
    if-ge v2, v0, :cond_2

    .line 12058
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 12059
    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iput-boolean v1, v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    .line 12060
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12057
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    add-int/lit8 v2, v2, 0x1

    goto :goto_2

    .line 12063
    .end local v0    # "numPartialTimers":I
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method public noteActivityPausedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 5610
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5611
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteActivityPausedLocked(J)V

    .line 5612
    return-void
.end method

.method public noteActivityResumedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 5605
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5606
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteActivityResumedLocked(J)V

    .line 5607
    return-void
.end method

.method public noteAlarmFinishLocked(Ljava/lang/String;Landroid/os/WorkSource;I)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "uid"    # I

    .line 4243
    const/16 v0, 0x400d

    invoke-direct {p0, v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V

    .line 4244
    return-void
.end method

.method public noteAlarmStartLocked(Ljava/lang/String;Landroid/os/WorkSource;I)V
    .locals 1
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "workSource"    # Landroid/os/WorkSource;
    .param p3, "uid"    # I

    .line 4239
    const v0, 0x800d

    invoke-direct {p0, v0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteAlarmStartOrFinishLocked(ILjava/lang/String;Landroid/os/WorkSource;I)V

    .line 4240
    return-void
.end method

.method public noteAudioOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5522
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez v0, :cond_0

    .line 5523
    return-void

    .line 5525
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5526
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5527
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5528
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez v4, :cond_1

    .line 5529
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x400001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5532
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5533
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5535
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteAudioTurnedOffLocked(J)V

    .line 5536
    return-void
.end method

.method public noteAudioOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5507
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5508
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5509
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5510
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-nez v4, :cond_0

    .line 5511
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x400000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5514
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5515
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5517
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 5518
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteAudioTurnedOnLocked(J)V

    .line 5519
    return-void
.end method

.method public noteBluetoothScanResultsFromSourceLocked(Landroid/os/WorkSource;I)V
    .locals 8
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "numNewResults"    # I

    .line 5806
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5807
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x4

    if-ge v2, v0, :cond_0

    .line 5808
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 5809
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v5

    invoke-virtual {v5, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    .line 5810
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v5, v6, p2}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    .line 5807
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5814
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 5815
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 5816
    nop

    .local v1, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v4

    if-ge v1, v4, :cond_1

    .line 5817
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    .line 5818
    .local v4, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v4}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5819
    .local v5, "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteBluetoothScanResultsLocked(I)V

    .line 5820
    nop

    .line 5821
    invoke-virtual {v4}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v6

    invoke-virtual {v4}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v7

    .line 5820
    invoke-static {v3, v6, v7, p2}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;I)I

    .line 5816
    .end local v4    # "wc":Landroid/os/WorkSource$WorkChain;
    .end local v5    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 5824
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteBluetoothScanStartedFromSourceLocked(Landroid/os/WorkSource;Z)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "isUnoptimized"    # Z

    .line 5737
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5738
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 5739
    const/4 v3, 0x0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v4

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5738
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5742
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 5743
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 5744
    nop

    .local v1, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    if-ge v1, v3, :cond_1

    .line 5745
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    const/4 v4, -0x1

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStartedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5744
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 5748
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteBluetoothScanStoppedFromSourceLocked(Landroid/os/WorkSource;Z)V
    .locals 5
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "isUnoptimized"    # Z

    .line 5775
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 5776
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 5777
    const/4 v3, 0x0

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v4

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5776
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5780
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 5781
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 5782
    nop

    .local v1, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    if-ge v1, v3, :cond_1

    .line 5783
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    const/4 v4, -0x1

    invoke-direct {p0, v3, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteBluetoothScanStoppedLocked(Landroid/os/WorkSource$WorkChain;IZ)V

    .line 5782
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 5786
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteCameraOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5670
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez v0, :cond_0

    .line 5671
    return-void

    .line 5673
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5674
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5675
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5676
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez v4, :cond_1

    .line 5677
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x200001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5680
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5681
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5683
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteCameraTurnedOffLocked(J)V

    .line 5684
    return-void
.end method

.method public noteCameraOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5656
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5657
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5658
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5659
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-nez v4, :cond_0

    .line 5660
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x200000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5663
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5664
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5666
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteCameraTurnedOnLocked(J)V

    .line 5667
    return-void
.end method

.method public noteChangeWakelockFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;ILandroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 25
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "newWs"    # Landroid/os/WorkSource;
    .param p7, "newPid"    # I
    .param p8, "newName"    # Ljava/lang/String;
    .param p9, "newHistoryName"    # Ljava/lang/String;
    .param p10, "newType"    # I
    .param p11, "newUnimportantForLogging"    # Z

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p6

    .line 4542
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v15

    .line 4543
    .local v15, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v17

    .line 4545
    .local v17, "uptime":J
    invoke-static {v13, v14}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v19

    .line 4552
    .local v19, "wcs":[Ljava/util/List;, "[Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    invoke-virtual/range {p6 .. p6}, Landroid/os/WorkSource;->size()I

    move-result v10

    .line 4553
    .local v10, "NN":I
    const/16 v20, 0x0

    move/from16 v0, v20

    .local v0, "i":I
    :goto_0
    move v11, v0

    .end local v0    # "i":I
    .local v11, "i":I
    if-ge v11, v10, :cond_0

    .line 4554
    invoke-virtual {v14, v11}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object v0, v12

    move/from16 v2, p7

    move-object/from16 v4, p8

    move-object/from16 v5, p9

    move/from16 v6, p10

    move/from16 v7, p11

    move-wide v8, v15

    move/from16 v21, v10

    move/from16 v22, v11

    move-wide/from16 v10, v17

    .end local v10    # "NN":I
    .end local v11    # "i":I
    .local v21, "NN":I
    .local v22, "i":I
    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4553
    add-int/lit8 v0, v22, 0x1

    .end local v22    # "i":I
    .restart local v0    # "i":I
    move/from16 v10, v21

    goto :goto_0

    .line 4557
    .end local v0    # "i":I
    .end local v21    # "NN":I
    .restart local v10    # "NN":I
    :cond_0
    move/from16 v21, v10

    .end local v10    # "NN":I
    .restart local v21    # "NN":I
    if-eqz v19, :cond_1

    .line 4558
    aget-object v10, v19, v20

    .line 4559
    .local v10, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v10, :cond_1

    .line 4560
    move/from16 v0, v20

    .restart local v0    # "i":I
    :goto_1
    move v11, v0

    .end local v0    # "i":I
    .restart local v11    # "i":I
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    if-ge v11, v0, :cond_1

    .line 4561
    invoke-interface {v10, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v8, v0

    check-cast v8, Landroid/os/WorkSource$WorkChain;

    .line 4562
    .local v8, "newChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v8}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object v0, v12

    move/from16 v2, p7

    move-object v3, v8

    move-object/from16 v4, p8

    move-object/from16 v5, p9

    move/from16 v6, p10

    move/from16 v7, p11

    move-object/from16 v22, v8

    move-wide v8, v15

    .end local v8    # "newChain":Landroid/os/WorkSource$WorkChain;
    .local v22, "newChain":Landroid/os/WorkSource$WorkChain;
    move-object/from16 v23, v10

    move/from16 v24, v11

    move-wide/from16 v10, v17

    .end local v10    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .local v23, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v24, "i":I
    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4560
    .end local v22    # "newChain":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v0, v24, 0x1

    .end local v24    # "i":I
    .restart local v0    # "i":I
    move-object/from16 v10, v23

    goto :goto_1

    .line 4570
    .end local v0    # "i":I
    .end local v23    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v11

    .line 4571
    .local v11, "NO":I
    move/from16 v0, v20

    .restart local v0    # "i":I
    :goto_2
    move v9, v0

    .end local v0    # "i":I
    .local v9, "i":I
    if-ge v9, v11, :cond_2

    .line 4572
    invoke-virtual {v13, v9}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object v0, v12

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v15

    move/from16 v22, v9

    move-wide/from16 v9, v17

    .end local v9    # "i":I
    .local v22, "i":I
    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4571
    add-int/lit8 v0, v22, 0x1

    .end local v22    # "i":I
    .restart local v0    # "i":I
    goto :goto_2

    .line 4575
    .end local v0    # "i":I
    :cond_2
    if-eqz v19, :cond_3

    .line 4576
    const/4 v0, 0x1

    aget-object v9, v19, v0

    .line 4577
    .local v9, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v9, :cond_3

    .line 4578
    nop

    .local v20, "i":I
    :goto_3
    move/from16 v10, v20

    .end local v20    # "i":I
    .local v10, "i":I
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v10, v0, :cond_3

    .line 4579
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Landroid/os/WorkSource$WorkChain;

    .line 4580
    .local v7, "goneChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v7}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object v0, v12

    move/from16 v2, p2

    move-object v3, v7

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v20, v7

    move-wide v7, v15

    .end local v7    # "goneChain":Landroid/os/WorkSource$WorkChain;
    .local v20, "goneChain":Landroid/os/WorkSource$WorkChain;
    move-object/from16 v22, v9

    move/from16 v23, v10

    move-wide/from16 v9, v17

    .end local v9    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .local v22, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v23, "i":I
    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4578
    .end local v20    # "goneChain":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v20, v23, 0x1

    .end local v23    # "i":I
    .local v20, "i":I
    move-object/from16 v9, v22

    goto :goto_3

    .line 4585
    .end local v20    # "i":I
    .end local v22    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_3
    return-void
.end method

.method public noteConnectivityChangedLocked(ILjava/lang/String;)V
    .locals 13
    .param p1, "type"    # I
    .param p2, "extra"    # Ljava/lang/String;

    .line 5052
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5053
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5054
    .local v11, "uptime":J
    const/16 v6, 0x9

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p2

    move v8, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5056
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 5057
    return-void
.end method

.method public noteCurrentTimeChangedLocked()V
    .locals 13

    .line 4126
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v7

    .line 4127
    .local v7, "currentTime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 4128
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 4129
    .local v11, "uptime":J
    move-object v0, p0

    move-wide v1, v7

    move-wide v3, v9

    move-wide v5, v11

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->recordCurrentTimeChangeLocked(JJJ)V

    .line 4130
    invoke-virtual {p0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl;->ensureStartClockTime(J)Z

    .line 4131
    return-void
.end method

.method public noteDeviceIdleModeLocked(ILjava/lang/String;I)V
    .locals 20
    .param p1, "mode"    # I
    .param p2, "activeReason"    # Ljava/lang/String;
    .param p3, "activeUid"    # I

    move-object/from16 v8, p0

    move/from16 v9, p1

    .line 5144
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 5145
    .local v11, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 5146
    .local v13, "uptime":J
    const/4 v15, 0x2

    const/16 v16, 0x0

    const/4 v7, 0x1

    if-ne v9, v15, :cond_0

    move v0, v7

    goto :goto_0

    :cond_0
    move/from16 v0, v16

    .line 5147
    .local v0, "nowIdling":Z
    :goto_0
    iget-boolean v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    if-eqz v1, :cond_1

    if-nez v0, :cond_1

    if-nez p2, :cond_1

    .line 5150
    const/4 v0, 0x1

    .line 5152
    .end local v0    # "nowIdling":Z
    .local v6, "nowIdling":Z
    :cond_1
    move v6, v0

    if-ne v9, v7, :cond_2

    move v0, v7

    goto :goto_1

    :cond_2
    move/from16 v0, v16

    .line 5153
    .local v0, "nowLightIdling":Z
    :goto_1
    iget-boolean v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v1, :cond_3

    if-nez v0, :cond_3

    if-nez v6, :cond_3

    if-nez p2, :cond_3

    .line 5156
    const/4 v0, 0x1

    .line 5158
    .end local v0    # "nowLightIdling":Z
    .local v5, "nowLightIdling":Z
    :cond_3
    move v5, v0

    if-eqz p2, :cond_6

    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    if-nez v0, :cond_5

    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eqz v0, :cond_4

    goto :goto_2

    .line 5162
    :cond_4
    move v15, v5

    move/from16 v18, v6

    move v10, v7

    goto :goto_3

    .line 5159
    :cond_5
    :goto_2
    const/16 v17, 0xa

    move-object v0, v8

    move-wide v1, v11

    move-wide v3, v13

    move v15, v5

    move/from16 v5, v17

    .end local v5    # "nowLightIdling":Z
    .local v15, "nowLightIdling":Z
    move/from16 v18, v6

    move-object/from16 v6, p2

    .end local v6    # "nowIdling":Z
    .local v18, "nowIdling":Z
    move v10, v7

    move/from16 v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_3

    .line 5162
    .end local v15    # "nowLightIdling":Z
    .end local v18    # "nowIdling":Z
    .restart local v5    # "nowLightIdling":Z
    .restart local v6    # "nowIdling":Z
    :cond_6
    move v15, v5

    move/from16 v18, v6

    move v10, v7

    .end local v5    # "nowLightIdling":Z
    .end local v6    # "nowIdling":Z
    .restart local v15    # "nowLightIdling":Z
    .restart local v18    # "nowIdling":Z
    :goto_3
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    move/from16 v1, v18

    if-ne v0, v1, :cond_7

    .end local v18    # "nowIdling":Z
    .local v1, "nowIdling":Z
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v0, v15, :cond_a

    .line 5164
    :cond_7
    if-eqz v1, :cond_8

    const/4 v0, 0x2

    .local v0, "statsmode":I
    :goto_4
    goto :goto_5

    .line 5165
    .end local v0    # "statsmode":I
    :cond_8
    if-eqz v15, :cond_9

    const/4 v0, 0x1

    goto :goto_4

    .line 5166
    :cond_9
    move/from16 v0, v16

    .line 5167
    .restart local v0    # "statsmode":I
    :goto_5
    const/16 v2, 0x16

    invoke-static {v2, v0}, Landroid/util/StatsLog;->write(II)I

    .line 5169
    .end local v0    # "statsmode":I
    :cond_a
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    if-eq v0, v1, :cond_d

    .line 5170
    iput-boolean v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdling:Z

    .line 5171
    const/16 v0, 0x8

    if-eqz v1, :cond_b

    move/from16 v16, v0

    nop

    :cond_b
    move/from16 v2, v16

    .line 5172
    .local v2, "stepState":I
    iget v3, v8, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    iget v4, v8, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/2addr v0, v4

    xor-int/2addr v0, v2

    or-int/2addr v0, v3

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 5173
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v0, v0, -0x9

    or-int/2addr v0, v2

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 5174
    if-eqz v1, :cond_c

    .line 5175
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_6

    .line 5177
    :cond_c
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5180
    .end local v2    # "stepState":I
    :cond_d
    :goto_6
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    if-eq v0, v15, :cond_f

    .line 5181
    iput-boolean v15, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdling:Z

    .line 5182
    if-eqz v15, :cond_e

    .line 5183
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_7

    .line 5185
    :cond_e
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5188
    :cond_f
    :goto_7
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    if-eq v0, v9, :cond_16

    .line 5189
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v3, -0x6000001

    and-int/2addr v2, v3

    shl-int/lit8 v3, v9, 0x19

    or-int/2addr v2, v3

    iput v2, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5193
    invoke-virtual {v8, v11, v12, v13, v14}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5194
    iget-wide v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    sub-long v2, v11, v2

    .line 5195
    .local v2, "lastDuration":J
    iput-wide v11, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLastIdleTimeStart:J

    .line 5196
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    if-ne v0, v10, :cond_11

    .line 5197
    iget-wide v4, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    cmp-long v0, v2, v4

    if-lez v0, :cond_10

    .line 5198
    iput-wide v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 5200
    :cond_10
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_8

    .line 5201
    :cond_11
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v4, 0x2

    if-ne v0, v4, :cond_13

    .line 5202
    iget-wide v4, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    cmp-long v0, v2, v4

    if-lez v0, :cond_12

    .line 5203
    iput-wide v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 5205
    :cond_12
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5207
    :cond_13
    :goto_8
    if-ne v9, v10, :cond_14

    .line 5208
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_9

    .line 5209
    :cond_14
    const/4 v0, 0x2

    if-ne v9, v0, :cond_15

    .line 5210
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5212
    :cond_15
    :goto_9
    iput v9, v8, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    .line 5213
    const/16 v0, 0x15

    invoke-static {v0, v9}, Landroid/util/StatsLog;->write(II)I

    .line 5215
    .end local v2    # "lastDuration":J
    :cond_16
    return-void
.end method

.method public noteEventLocked(ILjava/lang/String;I)V
    .locals 12
    .param p1, "code"    # I
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4097
    invoke-virtual {p0, p3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4098
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, p2, p3, v1}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4099
    return-void

    .line 4101
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4102
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4103
    .local v10, "uptime":J
    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move v5, p1

    move-object v6, p2

    move v7, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4104
    return-void
.end method

.method public noteFlashlightOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5639
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v0, :cond_0

    .line 5640
    return-void

    .line 5642
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5643
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5644
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5645
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v4, :cond_1

    .line 5646
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x8000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5649
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5650
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5652
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFlashlightTurnedOffLocked(J)V

    .line 5653
    return-void
.end method

.method public noteFlashlightOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5625
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5626
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5627
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5628
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-nez v4, :cond_0

    .line 5629
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x8000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5632
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5633
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5635
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFlashlightTurnedOnLocked(J)V

    .line 5636
    return-void
.end method

.method public noteFullWifiLockAcquiredFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6139
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6140
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    const/16 v3, 0x25

    const/4 v4, 0x1

    if-ge v2, v0, :cond_0

    .line 6141
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 6142
    .local v5, "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockAcquiredLocked(I)V

    .line 6143
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v6

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v7

    invoke-static {v3, v6, v7, v4}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    .line 6140
    .end local v5    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6147
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 6148
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 6149
    nop

    .local v1, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v5

    if-ge v1, v5, :cond_1

    .line 6150
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    .line 6151
    .local v5, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 6152
    .local v6, "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockAcquiredLocked(I)V

    .line 6153
    nop

    .line 6154
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v7

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v8

    .line 6153
    invoke-static {v3, v7, v8, v4}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;I)I

    .line 6149
    .end local v5    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v6    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 6158
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteFullWifiLockAcquiredLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6031
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6032
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6033
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    if-nez v4, :cond_0

    .line 6034
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x10000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6037
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6039
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6040
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFullWifiLockAcquiredLocked(J)V

    .line 6041
    return-void
.end method

.method public noteFullWifiLockReleasedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6161
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6162
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    const/16 v3, 0x25

    if-ge v2, v0, :cond_0

    .line 6163
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6164
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockReleasedLocked(I)V

    .line 6165
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v5, v6, v1}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    .line 6162
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6169
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 6170
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 6171
    move v4, v1

    .local v4, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v5

    if-ge v4, v5, :cond_1

    .line 6172
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    .line 6173
    .local v5, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 6174
    .local v6, "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->noteFullWifiLockReleasedLocked(I)V

    .line 6175
    nop

    .line 6176
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v7

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v8

    .line 6175
    invoke-static {v3, v7, v8, v1}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;I)I

    .line 6171
    .end local v5    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v6    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 6180
    .end local v4    # "i":I
    :cond_1
    return-void
.end method

.method public noteFullWifiLockReleasedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6044
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6045
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6046
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    .line 6047
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiFullLockNesting:I

    if-nez v4, :cond_0

    .line 6048
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x10000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6051
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6053
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteFullWifiLockReleasedLocked(J)V

    .line 6054
    return-void
.end method

.method public noteGpsChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;)V
    .locals 6
    .param p1, "oldWs"    # Landroid/os/WorkSource;
    .param p2, "newWs"    # Landroid/os/WorkSource;

    .line 4809
    const/4 v0, 0x0

    move v1, v0

    .local v1, "i":I
    :goto_0
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v2

    const/4 v3, 0x0

    if-ge v1, v2, :cond_0

    .line 4810
    invoke-virtual {p2, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-direct {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4809
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 4813
    .end local v1    # "i":I
    :cond_0
    move v1, v0

    .restart local v1    # "i":I
    :goto_1
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    .line 4814
    invoke-virtual {p1, v1}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    invoke-direct {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4813
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 4817
    .end local v1    # "i":I
    :cond_1
    invoke-static {p1, p2}, Landroid/os/WorkSource;->diffChains(Landroid/os/WorkSource;Landroid/os/WorkSource;)[Ljava/util/ArrayList;

    move-result-object v1

    .line 4818
    .local v1, "wcs":[Ljava/util/List;, "[Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v1, :cond_3

    .line 4819
    aget-object v2, v1, v0

    const/4 v3, -0x1

    if-eqz v2, :cond_2

    .line 4820
    aget-object v2, v1, v0

    .line 4821
    .local v2, "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    move v4, v0

    .local v4, "i":I
    :goto_2
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v5

    if-ge v4, v5, :cond_2

    .line 4822
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    invoke-direct {p0, v3, v5}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4821
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 4826
    .end local v2    # "newChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v4    # "i":I
    :cond_2
    const/4 v2, 0x1

    aget-object v4, v1, v2

    if-eqz v4, :cond_3

    .line 4827
    aget-object v2, v1, v2

    .line 4828
    .local v2, "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    nop

    .local v0, "i":I
    :goto_3
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v4

    if-ge v0, v4, :cond_3

    .line 4829
    invoke-interface {v2, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/WorkSource$WorkChain;

    invoke-direct {p0, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopGpsLocked(ILandroid/os/WorkSource$WorkChain;)V

    .line 4828
    add-int/lit8 v0, v0, 0x1

    goto :goto_3

    .line 4833
    .end local v0    # "i":I
    .end local v2    # "goneChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_3
    return-void
.end method

.method public noteGpsSignalQualityLocked(I)V
    .locals 7
    .param p1, "signalLevel"    # I

    .line 4885
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsNesting:I

    if-nez v0, :cond_0

    .line 4886
    return-void

    .line 4888
    :cond_0
    if-ltz p1, :cond_5

    const/4 v0, 0x2

    if-lt p1, v0, :cond_1

    goto :goto_0

    .line 4892
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4893
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4894
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    if-eq v4, p1, :cond_4

    .line 4895
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    if-ltz v4, :cond_2

    .line 4896
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    aget-object v4, v4, v5

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4898
    :cond_2
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-nez v4, :cond_3

    .line 4899
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4901
    :cond_3
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit16 v5, v5, -0x81

    shl-int/lit8 v6, p1, 0x7

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 4903
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4904
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityBin:I

    .line 4906
    :cond_4
    return-void

    .line 4889
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_5
    :goto_0
    const/4 v0, -0x1

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllGpsSignalQualityTimersLocked(I)V

    .line 4890
    return-void
.end method

.method public noteInteractiveLocked(Z)V
    .locals 3
    .param p1, "interactive"    # Z

    .line 5039
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    if-eq v0, p1, :cond_1

    .line 5040
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5041
    .local v0, "elapsedRealtime":J
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    .line 5043
    if-eqz p1, :cond_0

    .line 5044
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_0

    .line 5046
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5049
    .end local v0    # "elapsedRealtime":J
    :cond_1
    :goto_0
    return-void
.end method

.method public noteJobFinishLocked(Ljava/lang/String;II)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "stopReason"    # I

    .line 4223
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4224
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4225
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4226
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopJobLocked(Ljava/lang/String;JI)V

    .line 4227
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4006

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4228
    return-void

    .line 4230
    :cond_0
    const/16 v5, 0x4006

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4231
    return-void
.end method

.method public noteJobStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4212
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4213
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4214
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4215
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartJobLocked(Ljava/lang/String;J)V

    .line 4216
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8006

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4217
    return-void

    .line 4219
    :cond_0
    const v5, 0x8006

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4220
    return-void
.end method

.method public noteJobsDeferredLocked(IIJ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "numDeferred"    # I
    .param p3, "sinceLast"    # J

    .line 4234
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4235
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2, p3, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteJobsDeferredLocked(IJ)V

    .line 4236
    return-void
.end method

.method public noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4656
    const/16 v0, 0xb

    const/4 v2, 0x0

    const/4 v5, 0x0

    move v1, p3

    move-object v3, p1

    move-object v4, p2

    invoke-static/range {v0 .. v5}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I

    .line 4659
    invoke-virtual {p0, p3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4660
    invoke-direct {p0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4661
    return-void
.end method

.method public noteLongPartialWakelockFinishFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V
    .locals 11
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    .line 4665
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 4666
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 4667
    invoke-virtual {p3, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    .line 4668
    .local v3, "uid":I
    invoke-direct {p0, p1, p2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4669
    const/16 v4, 0xb

    .line 4670
    invoke-virtual {p3, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p3, v2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v6

    const/4 v9, 0x0

    .line 4669
    move-object v7, p1

    move-object v8, p2

    invoke-static/range {v4 .. v9}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I

    .line 4666
    .end local v3    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4674
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 4675
    .local v2, "workChains":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 4676
    nop

    .local v1, "i":I
    :goto_1
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v1, v3, :cond_1

    .line 4677
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 4678
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    .line 4679
    .local v4, "uid":I
    invoke-direct {p0, p1, p2, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockFinishInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4680
    const/16 v5, 0xb

    .line 4681
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v6

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v7

    const/4 v10, 0x0

    .line 4680
    move-object v8, p1

    move-object v9, p2

    invoke-static/range {v5 .. v10}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I

    .line 4676
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 4685
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;I)V
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "uid"    # I

    .line 4608
    const/16 v0, 0xb

    const/4 v2, 0x0

    const/4 v5, 0x1

    move v1, p3

    move-object v3, p1

    move-object v4, p2

    invoke-static/range {v0 .. v5}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I

    .line 4612
    invoke-virtual {p0, p3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p3

    .line 4613
    invoke-direct {p0, p1, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4614
    return-void
.end method

.method public noteLongPartialWakelockStartFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V
    .locals 11
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "historyName"    # Ljava/lang/String;
    .param p3, "workSource"    # Landroid/os/WorkSource;

    .line 4618
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 4619
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 4620
    invoke-virtual {p3, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v3

    .line 4621
    .local v3, "uid":I
    invoke-direct {p0, p1, p2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4622
    const/16 v4, 0xb

    .line 4623
    invoke-virtual {p3, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p3, v2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v6

    const/4 v9, 0x1

    .line 4622
    move-object v7, p1

    move-object v8, p2

    invoke-static/range {v4 .. v9}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I

    .line 4619
    .end local v3    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 4627
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 4628
    .local v2, "workChains":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 4629
    nop

    .local v1, "i":I
    :goto_1
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v1, v3, :cond_1

    .line 4630
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 4631
    .local v3, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v4

    .line 4632
    .local v4, "uid":I
    invoke-direct {p0, p1, p2, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteLongPartialWakeLockStartInternal(Ljava/lang/String;Ljava/lang/String;I)V

    .line 4634
    const/16 v5, 0xb

    .line 4635
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v6

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v7

    const/4 v10, 0x1

    .line 4634
    move-object v8, p1

    move-object v9, p2

    invoke-static/range {v5 .. v10}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I

    .line 4629
    .end local v3    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v4    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 4639
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteMobileRadioPowerStateLocked(IJI)Z
    .locals 20
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J
    .param p4, "uid"    # I

    move-object/from16 v6, p0

    move/from16 v7, p1

    .line 5071
    move/from16 v8, p4

    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5072
    .local v9, "elapsedRealtime":J
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5073
    .local v11, "uptime":J
    iget v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    if-eq v0, v7, :cond_7

    .line 5075
    const/4 v0, 0x2

    const/4 v14, 0x1

    if-eq v7, v0, :cond_1

    const/4 v0, 0x3

    if-ne v7, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    move v0, v14

    :goto_1
    move v15, v0

    .line 5078
    .local v15, "active":Z
    const-wide/32 v16, 0xf4240

    if-eqz v15, :cond_3

    .line 5079
    if-lez v8, :cond_2

    .line 5080
    move-object v0, v6

    move-wide v1, v9

    move-wide v3, v11

    move v5, v8

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->noteMobileRadioApWakeupLocked(JJI)V

    .line 5083
    :cond_2
    div-long v0, p2, v16

    move-wide v2, v0

    .local v2, "realElapsedRealtimeMs":J
    iput-wide v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveStartTime:J

    .line 5084
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v4, 0x2000000

    or-int/2addr v1, v4

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    goto :goto_4

    .line 5086
    .end local v2    # "realElapsedRealtimeMs":J
    :cond_3
    div-long v0, p2, v16

    .line 5087
    .local v0, "realElapsedRealtimeMs":J
    iget-wide v2, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveStartTime:J

    .line 5088
    .local v2, "lastUpdateTimeMs":J
    cmp-long v4, v0, v2

    if-gez v4, :cond_4

    .line 5089
    const-string v4, "BatteryStatsImpl"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Data connection inactive timestamp "

    invoke-virtual {v5, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v13, " is before start time "

    invoke-virtual {v5, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 5091
    move-wide v0, v9

    .line 5096
    move-wide/from16 v18, v2

    .end local v0    # "realElapsedRealtimeMs":J
    .local v2, "realElapsedRealtimeMs":J
    .local v18, "lastUpdateTimeMs":J
    :goto_2
    move-wide v2, v0

    goto :goto_3

    .line 5092
    .end local v18    # "lastUpdateTimeMs":J
    .restart local v0    # "realElapsedRealtimeMs":J
    .local v2, "lastUpdateTimeMs":J
    :cond_4
    cmp-long v4, v0, v9

    if-gez v4, :cond_5

    .line 5093
    iget-object v4, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-wide/from16 v18, v2

    sub-long v2, v9, v0

    .end local v2    # "lastUpdateTimeMs":J
    .restart local v18    # "lastUpdateTimeMs":J
    invoke-virtual {v4, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_2

    .line 5096
    .end local v18    # "lastUpdateTimeMs":J
    .restart local v2    # "lastUpdateTimeMs":J
    :cond_5
    move-wide/from16 v18, v2

    .end local v2    # "lastUpdateTimeMs":J
    .restart local v18    # "lastUpdateTimeMs":J
    goto :goto_2

    .end local v0    # "realElapsedRealtimeMs":J
    .local v2, "realElapsedRealtimeMs":J
    :goto_3
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v4, -0x2000001

    and-int/2addr v1, v4

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5100
    .end local v18    # "lastUpdateTimeMs":J
    :goto_4
    invoke-virtual {v6, v9, v10, v11, v12}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5101
    iput v7, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 5102
    const/16 v0, 0xc

    const/4 v1, 0x0

    invoke-static {v0, v8, v1, v7}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    .line 5104
    if-eqz v15, :cond_6

    .line 5105
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5106
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_5

    .line 5108
    :cond_6
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5109
    iget-object v0, v6, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5111
    return v14

    .line 5114
    .end local v2    # "realElapsedRealtimeMs":J
    .end local v15    # "active":Z
    :cond_7
    :goto_5
    const/4 v0, 0x0

    return v0
.end method

.method public noteNetworkInterfaceTypeLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "iface"    # Ljava/lang/String;
    .param p2, "networkType"    # I

    .line 6279
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    .line 6281
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v0

    .line 6282
    :try_start_0
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeMobile(I)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 6283
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    goto :goto_0

    .line 6286
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-static {v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    .line 6289
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6291
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v1

    .line 6292
    :try_start_1
    invoke-static {p2}, Landroid/net/ConnectivityManager;->isNetworkTypeWifi(I)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 6293
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->includeInStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    goto :goto_1

    .line 6296
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-static {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->excludeFromStringArray([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    .line 6299
    :goto_1
    monitor-exit v1

    .line 6300
    return-void

    .line 6299
    :catchall_0
    move-exception v0

    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 6289
    :catchall_1
    move-exception v1

    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1
.end method

.method public notePackageInstalledLocked(Ljava/lang/String;J)V
    .locals 15
    .param p1, "pkgName"    # Ljava/lang/String;
    .param p2, "versionCode"    # J

    move-object v8, p0

    .line 5218
    move-wide/from16 v9, p2

    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v11

    .line 5219
    .local v11, "elapsedRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 5221
    .local v13, "uptime":J
    long-to-int v7, v9

    const/16 v5, 0xb

    move-object v0, v8

    move-wide v1, v11

    move-wide v3, v13

    move-object/from16 v6, p1

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5223
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 5224
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    move-object/from16 v1, p1

    iput-object v1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 5225
    const/4 v2, 0x1

    iput-boolean v2, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 5226
    iput-wide v9, v0, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 5227
    invoke-direct {v8, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    .line 5228
    return-void
.end method

.method public notePackageUninstalledLocked(Ljava/lang/String;)V
    .locals 13
    .param p1, "pkgName"    # Ljava/lang/String;

    .line 5231
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5232
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5233
    .local v11, "uptime":J
    const/16 v6, 0xc

    const/4 v8, 0x0

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p1

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5235
    new-instance v0, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v0}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 5236
    .local v0, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-object p1, v0, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 5237
    const/4 v1, 0x1

    iput-boolean v1, v0, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 5238
    invoke-direct {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->addPackageChange(Landroid/os/BatteryStats$PackageChange;)V

    .line 5239
    return-void
.end method

.method public notePhoneDataConnectionStateLocked(IZ)V
    .locals 8
    .param p1, "dataType"    # I
    .param p2, "hasData"    # Z

    .line 5452
    const/4 v0, 0x0

    .line 5453
    .local v0, "bin":I
    if-eqz p2, :cond_1

    .line 5454
    if-lez p1, :cond_0

    const/16 v1, 0x13

    if-gt p1, v1, :cond_0

    .line 5455
    move v0, p1

    goto :goto_0

    .line 5457
    :cond_0
    const/16 v0, 0x14

    .line 5461
    :cond_1
    :goto_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    if-eq v1, v0, :cond_3

    .line 5462
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 5463
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 5464
    .local v3, "uptime":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit16 v6, v6, -0x3e01

    shl-int/lit8 v7, v0, 0x9

    or-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5468
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5469
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    if-ltz v5, :cond_2

    .line 5470
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    aget-object v5, v5, v6

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5473
    :cond_2
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionType:I

    .line 5474
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5476
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    :cond_3
    return-void
.end method

.method public notePhoneOffLocked()V
    .locals 7

    .line 5274
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    if-eqz v0, :cond_0

    .line 5275
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5276
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5277
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x800001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5280
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5281
    const/4 v4, 0x0

    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 5282
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5284
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public notePhoneOnLocked()V
    .locals 7

    .line 5261
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    if-nez v0, :cond_0

    .line 5262
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5263
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5264
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x800000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5267
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5268
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 5269
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5271
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public notePhoneSignalStrengthLocked(Landroid/telephony/SignalStrength;)V
    .locals 3
    .param p1, "signalStrength"    # Landroid/telephony/SignalStrength;

    .line 5444
    invoke-virtual {p1}, Landroid/telephony/SignalStrength;->getLevel()I

    move-result v0

    .line 5445
    .local v0, "bin":I
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneServiceStateRaw:I

    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSimStateRaw:I

    invoke-direct {p0, v1, v2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    .line 5446
    return-void
.end method

.method public notePhoneStateLocked(II)V
    .locals 1
    .param p1, "state"    # I
    .param p2, "simState"    # I

    .line 5439
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthBinRaw:I

    invoke-direct {p0, p1, p2, v0}, Lcom/android/internal/os/BatteryStatsImpl;->updateAllPhoneStateLocked(III)V

    .line 5440
    return-void
.end method

.method public notePowerSaveModeLocked(Z)V
    .locals 9
    .param p1, "enabled"    # Z

    .line 5118
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    if-eq v0, p1, :cond_3

    .line 5119
    const/4 v0, 0x0

    const/4 v1, 0x4

    if-eqz p1, :cond_0

    move v2, v1

    goto :goto_0

    :cond_0
    move v2, v0

    .line 5120
    .local v2, "stepState":I
    :goto_0
    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/2addr v1, v4

    xor-int/2addr v1, v2

    or-int/2addr v1, v3

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 5121
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v1, v1, -0x5

    or-int/2addr v1, v2

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    .line 5122
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    .line 5123
    .local v3, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v5

    .line 5124
    .local v5, "uptime":J
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabled:Z

    .line 5125
    if-eqz p1, :cond_1

    .line 5126
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v8, -0x80000000

    or-int/2addr v7, v8

    iput v7, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5129
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_1

    .line 5131
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v8, 0x7fffffff

    and-int/2addr v7, v8

    iput v7, v1, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5134
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5136
    :goto_1
    invoke-virtual {p0, v3, v4, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5137
    const/16 v1, 0x14

    if-eqz p1, :cond_2

    .line 5138
    const/4 v0, 0x1

    goto :goto_2

    .line 5139
    :cond_2
    nop

    .line 5137
    :goto_2
    invoke-static {v1, v0}, Landroid/util/StatsLog;->write(II)I

    .line 5141
    .end local v2    # "stepState":I
    .end local v3    # "elapsedRealtime":J
    .end local v5    # "uptime":J
    :cond_3
    return-void
.end method

.method public noteProcessAnrLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4159
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4160
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4161
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 4162
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incNumAnrsLocked()V

    .line 4164
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public noteProcessCrashLocked(Ljava/lang/String;I)V
    .locals 2
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4151
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4152
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4153
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 4154
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incNumCrashesLocked()V

    .line 4156
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    return-void
.end method

.method public noteProcessDiedLocked(II)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "pid"    # I

    .line 4749
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4750
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 4751
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 4752
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPids:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 4754
    :cond_0
    return-void
.end method

.method public noteProcessFinishLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4177
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4178
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4001

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4179
    return-void

    .line 4181
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_1

    .line 4182
    return-void

    .line 4184
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4185
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4186
    .local v10, "uptime":J
    const/16 v5, 0x4001

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4187
    return-void
.end method

.method public noteProcessStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4134
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4135
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 4136
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    .line 4137
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incStartsLocked()V

    .line 4139
    .end local v0    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8001

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4140
    return-void

    .line 4142
    :cond_1
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-nez v0, :cond_2

    .line 4143
    return-void

    .line 4145
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4146
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4147
    .local v10, "uptime":J
    const v5, 0x8001

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4148
    return-void
.end method

.method public noteResetAudioLocked()V
    .locals 8

    .line 5571
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    if-lez v0, :cond_0

    .line 5572
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5573
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5574
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 5575
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v7, -0x400001

    and-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5578
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5579
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5580
    nop

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5581
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5582
    .local v5, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetAudioLocked(J)V

    .line 5580
    .end local v5    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5585
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public noteResetBluetoothScanLocked()V
    .locals 8

    .line 5789
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    if-lez v0, :cond_0

    .line 5790
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5791
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5792
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 5793
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v7, -0x100001

    and-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5796
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5797
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5798
    nop

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5799
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5800
    .local v5, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetBluetoothScanLocked(J)V

    .line 5798
    .end local v5    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5803
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public noteResetCameraLocked()V
    .locals 8

    .line 5687
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    if-lez v0, :cond_0

    .line 5688
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5689
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5690
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    .line 5691
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v7, -0x200001

    and-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5694
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5695
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5696
    nop

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5697
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5698
    .local v5, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetCameraLocked(J)V

    .line 5696
    .end local v5    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5701
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public noteResetFlashlightLocked()V
    .locals 8

    .line 5704
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    if-lez v0, :cond_0

    .line 5705
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5706
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5707
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    .line 5708
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v7, -0x8000001

    and-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5711
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5712
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5713
    nop

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5714
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5715
    .local v5, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetFlashlightLocked(J)V

    .line 5713
    .end local v5    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5718
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public noteResetVideoLocked()V
    .locals 8

    .line 5588
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-lez v0, :cond_0

    .line 5589
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5590
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5591
    .local v2, "uptime":J
    const/4 v4, 0x0

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 5592
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v7, -0x40000001    # -1.9999999f

    and-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5595
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5596
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopAllRunningLocked(J)V

    .line 5597
    nop

    .local v4, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_0

    .line 5598
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 5599
    .local v5, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteResetVideoLocked(J)V

    .line 5597
    .end local v5    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5602
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "i":I
    :cond_0
    return-void
.end method

.method public noteScreenBrightnessLocked(I)V
    .locals 8
    .param p1, "brightness"    # I

    .line 5003
    div-int/lit8 v0, p1, 0x33

    .line 5004
    .local v0, "bin":I
    if-gez v0, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    .line 5005
    :cond_0
    const/4 v1, 0x5

    if-lt v0, v1, :cond_1

    const/4 v0, 0x4

    .line 5006
    :cond_1
    :goto_0
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-eq v1, v0, :cond_4

    .line 5007
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 5008
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 5009
    .local v3, "uptime":J
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/lit8 v6, v6, -0x8

    shl-int/lit8 v7, v0, 0x0

    or-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5013
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5014
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    const/4 v6, 0x2

    if-ne v5, v6, :cond_3

    .line 5015
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v5, :cond_2

    .line 5016
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v5, v5, v6

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5018
    :cond_2
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5020
    :cond_3
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    .line 5022
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    :cond_4
    return-void
.end method

.method public noteScreenStateLocked(I)V
    .locals 22
    .param p1, "state"    # I
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v12, p0

    .line 4911
    iget-boolean v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mPretendScreenOff:Z

    const/4 v1, 0x1

    if-eqz v0, :cond_0

    move v0, v1

    goto :goto_0

    :cond_0
    move/from16 v0, p1

    .line 4915
    .end local p1    # "state":I
    .local v0, "state":I
    :goto_0
    const/4 v2, 0x4

    if-le v0, v2, :cond_2

    .line 4916
    const/4 v2, 0x5

    if-eq v0, v2, :cond_1

    .line 4921
    const-string v2, "BatteryStatsImpl"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown screen state (not mapped): "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 4918
    :cond_1
    const/4 v0, 0x2

    .line 4919
    nop

    .line 4926
    .end local v0    # "state":I
    .local v13, "state":I
    :cond_2
    :goto_1
    move v13, v0

    iget v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    if-eq v0, v13, :cond_e

    .line 4927
    invoke-virtual {v12, v1}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 4928
    iget v14, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 4929
    .local v14, "oldState":I
    iput v13, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 4933
    if-eqz v13, :cond_4

    .line 4934
    add-int/lit8 v0, v13, -0x1

    .line 4935
    .local v0, "stepState":I
    and-int/lit8 v1, v0, 0x3

    if-ne v1, v0, :cond_3

    .line 4936
    iget v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    iget v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v2, v2, 0x3

    xor-int/2addr v2, v0

    or-int/2addr v1, v2

    iput v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 4937
    iget v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    and-int/lit8 v1, v1, -0x4

    or-int/2addr v1, v0

    iput v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    goto :goto_2

    .line 4939
    :cond_3
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unexpected screen state: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4943
    .end local v0    # "stepState":I
    :cond_4
    :goto_2
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v10

    .line 4944
    .local v10, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v8

    .line 4946
    .local v8, "uptime":J
    const/4 v0, 0x0

    .line 4947
    .local v0, "updateHistory":Z
    invoke-virtual {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 4948
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x40000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4949
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4950
    const/4 v0, 0x1

    goto :goto_3

    .line 4951
    :cond_5
    invoke-virtual {v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 4952
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x40001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4953
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4954
    const/4 v0, 0x1

    .line 4956
    :cond_6
    :goto_3
    invoke-virtual {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_8

    .line 4957
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x100000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4960
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4961
    iget v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v1, :cond_7

    .line 4962
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v1, v1, v2

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 4964
    :cond_7
    const/4 v0, 0x1

    goto :goto_4

    .line 4965
    :cond_8
    invoke-virtual {v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_a

    .line 4966
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x100001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4969
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4970
    iget v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    if-ltz v1, :cond_9

    .line 4971
    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessBin:I

    aget-object v1, v1, v2

    invoke-virtual {v1, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 4973
    :cond_9
    const/4 v0, 0x1

    .line 4975
    .end local v0    # "updateHistory":Z
    .local v15, "updateHistory":Z
    :cond_a
    :goto_4
    move v15, v0

    if-eqz v15, :cond_b

    .line 4978
    invoke-virtual {v12, v10, v11, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4980
    :cond_b
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    iget-object v1, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 4981
    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v2

    .line 4980
    invoke-interface {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToScreenStateChange(ZZ)Ljava/util/concurrent/Future;

    .line 4982
    invoke-virtual {v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    const-wide/16 v16, 0x3e8

    if-eqz v0, :cond_c

    .line 4983
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 4984
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    mul-long v3, v2, v16

    mul-long v5, v10, v16

    .line 4983
    move-object v0, v12

    move v2, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 4986
    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const-string/jumbo v4, "screen"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-wide/from16 v18, v8

    move-wide v8, v10

    .line 4986
    .end local v8    # "uptime":J
    .local v18, "uptime":J
    move-wide/from16 v20, v10

    move-wide/from16 v10, v18

    .line 4986
    .end local v10    # "elapsedRealtime":J
    .local v20, "elapsedRealtime":J
    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    goto :goto_5

    .line 4988
    .end local v18    # "uptime":J
    .end local v20    # "elapsedRealtime":J
    .restart local v8    # "uptime":J
    .restart local v10    # "elapsedRealtime":J
    :cond_c
    move-wide/from16 v18, v8

    move-wide/from16 v20, v10

    .line 4988
    .end local v8    # "uptime":J
    .end local v10    # "elapsedRealtime":J
    .restart local v18    # "uptime":J
    .restart local v20    # "elapsedRealtime":J
    invoke-virtual {v12, v14}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 4989
    const/4 v1, -0x1

    const/4 v2, -0x1

    const/4 v3, 0x0

    const-string/jumbo v4, "screen"

    const-string/jumbo v5, "screen"

    const/4 v6, 0x0

    move-object v0, v12

    move-wide/from16 v7, v20

    move-wide/from16 v9, v18

    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4991
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 4992
    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    mul-long v3, v2, v16

    mul-long v5, v20, v16

    .line 4991
    move-object v0, v12

    move v2, v13

    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 4995
    :cond_d
    :goto_5
    iget-boolean v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_e

    .line 4996
    invoke-virtual {v12, v14, v13}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 4999
    .end local v14    # "oldState":I
    .end local v15    # "updateHistory":Z
    .end local v18    # "uptime":J
    .end local v20    # "elapsedRealtime":J
    :cond_e
    return-void
.end method

.method public noteStartSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    .line 4779
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4780
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4781
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4782
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    if-nez v4, :cond_0

    .line 4783
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x800000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4786
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4788
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    .line 4789
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartSensor(IJ)V

    .line 4790
    return-void
.end method

.method public noteStartWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    .locals 21
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I
    .param p6, "unimportantForLogging"    # Z

    move-object/from16 v12, p0

    .line 4521
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v13

    .line 4522
    .local v13, "elapsedRealtime":J
    iget-object v0, v12, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v15

    .line 4523
    .local v15, "uptime":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v10

    .line 4524
    .local v10, "N":I
    const/16 v17, 0x0

    move/from16 v0, v17

    .local v0, "i":I
    :goto_0
    move v11, v0

    .end local v0    # "i":I
    .local v11, "i":I
    if-ge v11, v10, :cond_0

    .line 4525
    move-object/from16 v8, p1

    invoke-virtual {v8, v11}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object v0, v12

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move-wide v8, v13

    move/from16 v18, v10

    move/from16 v19, v11

    move-wide v10, v15

    .end local v10    # "N":I
    .end local v11    # "i":I
    .local v18, "N":I
    .local v19, "i":I
    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4524
    add-int/lit8 v0, v19, 0x1

    .end local v19    # "i":I
    .restart local v0    # "i":I
    move/from16 v10, v18

    goto :goto_0

    .line 4529
    .end local v0    # "i":I
    .end local v18    # "N":I
    .restart local v10    # "N":I
    :cond_0
    move/from16 v18, v10

    .end local v10    # "N":I
    .restart local v18    # "N":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v10

    .line 4530
    .local v10, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v10, :cond_1

    .line 4531
    nop

    .local v17, "i":I
    :goto_1
    move/from16 v11, v17

    .end local v17    # "i":I
    .restart local v11    # "i":I
    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v0

    if-ge v11, v0, :cond_1

    .line 4532
    invoke-interface {v10, v11}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v8, v0

    check-cast v8, Landroid/os/WorkSource$WorkChain;

    .line 4533
    .local v8, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v8}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object v0, v12

    move/from16 v2, p2

    move-object v3, v8

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move-object/from16 v17, v8

    move-wide v8, v13

    .end local v8    # "wc":Landroid/os/WorkSource$WorkChain;
    .local v17, "wc":Landroid/os/WorkSource$WorkChain;
    move-object/from16 v19, v10

    move/from16 v20, v11

    move-wide v10, v15

    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v11    # "i":I
    .local v19, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v20, "i":I
    invoke-virtual/range {v0 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V

    .line 4531
    .end local v17    # "wc":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v17, v20, 0x1

    .end local v20    # "i":I
    .local v17, "i":I
    move-object/from16 v10, v19

    goto :goto_1

    .line 4537
    .end local v17    # "i":I
    .end local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v19, v10

    .end local v10    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v19    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    return-void
.end method

.method public noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V
    .locals 16
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "wc"    # Landroid/os/WorkSource$WorkChain;
    .param p4, "name"    # Ljava/lang/String;
    .param p5, "historyName"    # Ljava/lang/String;
    .param p6, "type"    # I
    .param p7, "unimportantForLogging"    # Z
    .param p8, "elapsedRealtime"    # J
    .param p10, "uptime"    # J

    move-object/from16 v8, p0

    move/from16 v9, p6

    move-wide/from16 v10, p8

    .line 4382
    move-wide/from16 v12, p10

    invoke-virtual/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v14

    .line 4383
    .end local p1    # "uid":I
    .local v14, "uid":I
    if-nez v9, :cond_5

    .line 4386
    invoke-virtual {v8, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    .line 4387
    if-nez p5, :cond_0

    .line 4388
    move-object/from16 v0, p4

    .line 4390
    .end local p5    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    move-object v7, v0

    goto :goto_0

    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v7, p5

    .end local p5    # "historyName":Ljava/lang/String;
    .local v7, "historyName":Ljava/lang/String;
    :goto_0
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v0, :cond_1

    .line 4391
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8005

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v7, v14, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 4393
    const v5, 0x8005

    move-object v0, v8

    move-wide v1, v10

    move-wide v3, v12

    move-object v6, v7

    move-object v9, v7

    move v7, v14

    .end local v7    # "historyName":Ljava/lang/String;
    .local v9, "historyName":Ljava/lang/String;
    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_1

    .line 4397
    .end local v9    # "historyName":Ljava/lang/String;
    .restart local v7    # "historyName":Ljava/lang/String;
    :cond_1
    move-object v9, v7

    .end local v7    # "historyName":Ljava/lang/String;
    .restart local v9    # "historyName":Ljava/lang/String;
    :goto_1
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    const/4 v1, 0x1

    if-nez v0, :cond_2

    .line 4398
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x40000000    # 2.0f

    or-int/2addr v2, v3

    iput v2, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4401
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v2, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4402
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v9, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    iput-object v9, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4403
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput v14, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    iput v14, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4404
    xor-int/lit8 v0, p7, 0x1

    iput-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    .line 4405
    invoke-virtual {v8, v10, v11, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_2

    .line 4406
    :cond_2
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    if-nez v0, :cond_4

    if-nez p7, :cond_4

    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v0, v0, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-nez v0, :cond_4

    .line 4408
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v0, :cond_3

    .line 4410
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryLastWritten:Landroid/os/BatteryStats$HistoryItem;

    const/4 v2, 0x0

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4411
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v2, v2, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4412
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v9, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    iput-object v9, v0, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4413
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v0, v0, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput v14, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    iput v14, v0, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4414
    invoke-virtual {v8, v10, v11, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4416
    :cond_3
    iput-boolean v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockImportant:Z

    .line 4418
    :cond_4
    :goto_2
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    add-int/2addr v0, v1

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    goto :goto_3

    .line 4420
    .end local v9    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_5
    move-object/from16 v9, p5

    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v9    # "historyName":Ljava/lang/String;
    :goto_3
    if-ltz v14, :cond_8

    .line 4421
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_6

    .line 4427
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    .line 4430
    :cond_6
    invoke-virtual {v8, v14}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    move/from16 v1, p2

    move-object/from16 v2, p4

    move/from16 v6, p6

    move v3, v6

    move-wide v4, v10

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartWakeLocked(ILjava/lang/String;IJ)V

    .line 4432
    if-eqz p3, :cond_7

    .line 4433
    const/16 v0, 0xa

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v1

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v2

    .line 4434
    invoke-direct {v8, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x1

    .line 4433
    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;ILjava/lang/String;I)I

    goto :goto_4

    .line 4437
    :cond_7
    const/16 v0, 0xa

    const/4 v2, 0x0

    .line 4438
    invoke-direct {v8, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x1

    .line 4437
    move v1, v14

    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;ILjava/lang/String;I)I

    goto :goto_4

    .line 4442
    :cond_8
    move/from16 v6, p6

    :goto_4
    return-void
.end method

.method public noteStopSensorLocked(II)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "sensor"    # I

    .line 4793
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4794
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4795
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4796
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    .line 4797
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mSensorNesting:I

    if-nez v4, :cond_0

    .line 4798
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x800001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4801
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4803
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopSensor(IJ)V

    .line 4804
    return-void
.end method

.method public noteStopWakeFromSourceLocked(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;I)V
    .locals 20
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "pid"    # I
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "historyName"    # Ljava/lang/String;
    .param p5, "type"    # I

    move-object/from16 v11, p0

    .line 4589
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4590
    .local v12, "elapsedRealtime":J
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4591
    .local v14, "uptime":J
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->size()I

    move-result v9

    .line 4592
    .local v9, "N":I
    const/16 v16, 0x0

    move/from16 v0, v16

    .local v0, "i":I
    :goto_0
    move v10, v0

    .end local v0    # "i":I
    .local v10, "i":I
    if-ge v10, v9, :cond_0

    .line 4593
    move-object/from16 v7, p1

    invoke-virtual {v7, v10}, Landroid/os/WorkSource;->get(I)I

    move-result v1

    const/4 v3, 0x0

    move-object v0, v11

    move/from16 v2, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-wide v7, v12

    move/from16 v17, v9

    move/from16 v18, v10

    move-wide v9, v14

    .end local v9    # "N":I
    .end local v10    # "i":I
    .local v17, "N":I
    .local v18, "i":I
    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4592
    add-int/lit8 v0, v18, 0x1

    .end local v18    # "i":I
    .restart local v0    # "i":I
    move/from16 v9, v17

    goto :goto_0

    .line 4597
    .end local v0    # "i":I
    .end local v17    # "N":I
    .restart local v9    # "N":I
    :cond_0
    move/from16 v17, v9

    .end local v9    # "N":I
    .restart local v17    # "N":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v9

    .line 4598
    .local v9, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v9, :cond_1

    .line 4599
    nop

    .local v16, "i":I
    :goto_1
    move/from16 v10, v16

    .end local v16    # "i":I
    .restart local v10    # "i":I
    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v0

    if-ge v10, v0, :cond_1

    .line 4600
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    move-object v7, v0

    check-cast v7, Landroid/os/WorkSource$WorkChain;

    .line 4601
    .local v7, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v7}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v1

    move-object v0, v11

    move/from16 v2, p2

    move-object v3, v7

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move/from16 v6, p5

    move-object/from16 v16, v7

    move-wide v7, v12

    .end local v7    # "wc":Landroid/os/WorkSource$WorkChain;
    .local v16, "wc":Landroid/os/WorkSource$WorkChain;
    move-object/from16 v18, v9

    move/from16 v19, v10

    move-wide v9, v14

    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .end local v10    # "i":I
    .local v18, "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .local v19, "i":I
    invoke-virtual/range {v0 .. v10}, Lcom/android/internal/os/BatteryStatsImpl;->noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V

    .line 4599
    .end local v16    # "wc":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v16, v19, 0x1

    .end local v19    # "i":I
    .local v16, "i":I
    move-object/from16 v9, v18

    goto :goto_1

    .line 4605
    .end local v16    # "i":I
    .end local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_1
    move-object/from16 v18, v9

    .end local v9    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    .restart local v18    # "wcs":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    return-void
.end method

.method public noteStopWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IJJ)V
    .locals 15
    .param p1, "uid"    # I
    .param p2, "pid"    # I
    .param p3, "wc"    # Landroid/os/WorkSource$WorkChain;
    .param p4, "name"    # Ljava/lang/String;
    .param p5, "historyName"    # Ljava/lang/String;
    .param p6, "type"    # I
    .param p7, "elapsedRealtime"    # J
    .param p9, "uptime"    # J

    move-object v8, p0

    move/from16 v9, p6

    .line 4446
    invoke-virtual/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v10

    .line 4447
    .end local p1    # "uid":I
    .local v10, "uid":I
    if-nez v9, :cond_4

    .line 4448
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    add-int/lit8 v0, v0, -0x1

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    .line 4449
    iget-boolean v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    if-eqz v0, :cond_1

    .line 4450
    if-nez p5, :cond_0

    .line 4451
    move-object/from16 v0, p4

    .line 4453
    .end local p5    # "historyName":Ljava/lang/String;
    .local v0, "historyName":Ljava/lang/String;
    move-object v11, v0

    goto :goto_0

    .end local v0    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_0
    move-object/from16 v11, p5

    .end local p5    # "historyName":Ljava/lang/String;
    .local v11, "historyName":Ljava/lang/String;
    :goto_0
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4005

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v11, v10, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 4455
    const/16 v5, 0x4005

    move-object v0, v8

    move-wide/from16 v1, p7

    move-wide/from16 v3, p9

    move-object v6, v11

    move v7, v10

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    goto :goto_1

    .line 4459
    .end local v11    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_1
    move-object/from16 v11, p5

    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v11    # "historyName":Ljava/lang/String;
    :cond_2
    :goto_1
    iget v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockNesting:I

    if-nez v0, :cond_3

    .line 4460
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x40000001    # -1.9999999f

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 4463
    const/4 v0, 0x0

    iput-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeName:Ljava/lang/String;

    .line 4464
    const/4 v0, -0x1

    iput v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mInitialAcquireWakeUid:I

    .line 4465
    move-wide/from16 v6, p7

    move-wide/from16 v12, p9

    invoke-virtual {v8, v6, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_2

    .line 4468
    :cond_3
    move-wide/from16 v6, p7

    move-wide/from16 v12, p9

    goto :goto_2

    .end local v11    # "historyName":Ljava/lang/String;
    .restart local p5    # "historyName":Ljava/lang/String;
    :cond_4
    move-wide/from16 v6, p7

    move-wide/from16 v12, p9

    move-object/from16 v11, p5

    .end local p5    # "historyName":Ljava/lang/String;
    .restart local v11    # "historyName":Ljava/lang/String;
    :goto_2
    if-ltz v10, :cond_7

    .line 4469
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v0

    if-eqz v0, :cond_5

    .line 4473
    invoke-direct {v8}, Lcom/android/internal/os/BatteryStatsImpl;->requestWakelockCpuUpdate()V

    .line 4476
    :cond_5
    invoke-virtual {v8, v10}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    move/from16 v1, p2

    move-object/from16 v2, p4

    move v3, v9

    move-wide v4, v6

    invoke-virtual/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopWakeLocked(ILjava/lang/String;IJ)V

    .line 4477
    if-eqz p3, :cond_6

    .line 4478
    const/16 v0, 0xa

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v1

    invoke-virtual/range {p3 .. p3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v2

    .line 4479
    invoke-direct {v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x0

    .line 4478
    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;ILjava/lang/String;I)I

    goto :goto_3

    .line 4482
    :cond_6
    const/16 v0, 0xa

    const/4 v2, 0x0

    .line 4483
    invoke-direct {v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I

    move-result v3

    const/4 v5, 0x0

    .line 4482
    move v1, v10

    move-object/from16 v4, p4

    invoke-static/range {v0 .. v5}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;ILjava/lang/String;I)I

    .line 4487
    :cond_7
    :goto_3
    return-void
.end method

.method public noteSyncFinishLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4201
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4202
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4203
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4204
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStopSyncLocked(Ljava/lang/String;J)V

    .line 4205
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v1, 0x4004

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4206
    return-void

    .line 4208
    :cond_0
    const/16 v5, 0x4004

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4209
    return-void
.end method

.method public noteSyncStartLocked(Ljava/lang/String;I)V
    .locals 12
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .line 4190
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p2

    .line 4191
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 4192
    .local v8, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 4193
    .local v10, "uptime":J
    invoke-virtual {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p1, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartSyncLocked(Ljava/lang/String;J)V

    .line 4194
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const v1, 0x8004

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, p2, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->updateState(ILjava/lang/String;II)Z

    move-result v0

    if-nez v0, :cond_0

    .line 4195
    return-void

    .line 4197
    :cond_0
    const v5, 0x8004

    move-object v0, p0

    move-wide v1, v8

    move-wide v3, v10

    move-object v6, p1

    move v7, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4198
    return-void
.end method

.method public noteUidProcessStateLocked(II)V
    .locals 2
    .param p1, "uid"    # I
    .param p2, "state"    # I

    .line 4167
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v0

    .line 4168
    .local v0, "parentUid":I
    if-eq p1, v0, :cond_0

    .line 4171
    return-void

    .line 4173
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v1

    invoke-virtual {v1, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->updateUidProcessStateLocked(I)V

    .line 4174
    return-void
.end method

.method public noteUserActivityLocked(II)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "event"    # I

    .line 5025
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    .line 5026
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5027
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteUserActivityLocked(I)V

    .line 5029
    :cond_0
    return-void
.end method

.method public noteVibratorOffLocked(I)V
    .locals 1
    .param p1, "uid"    # I

    .line 5620
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5621
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVibratorOffLocked()V

    .line 5622
    return-void
.end method

.method public noteVibratorOnLocked(IJ)V
    .locals 1
    .param p1, "uid"    # I
    .param p2, "durationMillis"    # J

    .line 5615
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5616
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVibratorOnLocked(J)V

    .line 5617
    return-void
.end method

.method public noteVideoOffLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5554
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez v0, :cond_0

    .line 5555
    return-void

    .line 5557
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5558
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5559
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5560
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez v4, :cond_1

    .line 5561
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x40000001    # -1.9999999f

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5564
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5565
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5567
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVideoTurnedOffLocked(J)V

    .line 5568
    return-void
.end method

.method public noteVideoOnLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 5539
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 5540
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5541
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5542
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    if-nez v4, :cond_0

    .line 5543
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x40000000    # 2.0f

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5546
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5547
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5549
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    .line 5550
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteVideoTurnedOnLocked(J)V

    .line 5551
    return-void
.end method

.method public noteWakeUpLocked(Ljava/lang/String;I)V
    .locals 13
    .param p1, "reason"    # Ljava/lang/String;
    .param p2, "reasonUid"    # I

    .line 5032
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v9

    .line 5033
    .local v9, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v11

    .line 5034
    .local v11, "uptime":J
    const/16 v6, 0x12

    move-object v1, p0

    move-wide v2, v9

    move-wide v4, v11

    move-object v7, p1

    move v8, p2

    invoke-virtual/range {v1 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 5036
    return-void
.end method

.method public noteWakeupReasonLocked(Ljava/lang/String;)V
    .locals 6
    .param p1, "reason"    # Ljava/lang/String;

    .line 4713
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 4714
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 4717
    .local v2, "uptime":J
    invoke-virtual {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V

    .line 4718
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v5, v5, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v5, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 4719
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object p1, v4, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 4720
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v4, v4, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    const/4 v5, 0x0

    iput v5, v4, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 4721
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupReason:Ljava/lang/String;

    .line 4722
    iput-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWakeupUptimeMs:J

    .line 4723
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 4724
    return-void
.end method

.method public noteWakupAlarmLocked(Ljava/lang/String;ILandroid/os/WorkSource;Ljava/lang/String;)V
    .locals 6
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "workSource"    # Landroid/os/WorkSource;
    .param p4, "tag"    # Ljava/lang/String;

    .line 4283
    const/16 v0, 0x23

    if-eqz p3, :cond_5

    .line 4284
    const/4 v1, 0x0

    move v2, p2

    move p2, v1

    .local v2, "uid":I
    .local p2, "i":I
    :goto_0
    invoke-virtual {p3}, Landroid/os/WorkSource;->size()I

    move-result v3

    if-ge p2, v3, :cond_2

    .line 4285
    invoke-virtual {p3, p2}, Landroid/os/WorkSource;->get(I)I

    move-result v2

    .line 4286
    invoke-virtual {p3, p2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v3

    .line 4288
    .local v3, "workSourceName":Ljava/lang/String;
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 4289
    nop

    .line 4290
    if-eqz v3, :cond_0

    .line 4289
    move-object v4, v3

    goto :goto_1

    :cond_0
    move-object v4, p1

    :goto_1
    invoke-virtual {p0, v2, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v4

    .line 4291
    .local v4, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v4, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4293
    .end local v4    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    :cond_1
    invoke-virtual {p3, p2}, Landroid/os/WorkSource;->get(I)I

    move-result v4

    .line 4294
    invoke-virtual {p3, p2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v5

    .line 4293
    invoke-static {v0, v4, v5, p4}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;)I

    .line 4284
    .end local v3    # "workSourceName":Ljava/lang/String;
    add-int/lit8 p2, p2, 0x1

    goto :goto_0

    .line 4297
    .end local p2    # "i":I
    :cond_2
    invoke-virtual {p3}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object p2

    .line 4298
    .local p2, "workChains":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz p2, :cond_4

    .line 4299
    nop

    .local v1, "i":I
    :goto_2
    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v1, v3, :cond_4

    .line 4300
    invoke-virtual {p2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    .line 4301
    .local v3, "wc":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v2

    .line 4303
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v4

    if-eqz v4, :cond_3

    .line 4304
    invoke-virtual {p0, v2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v4

    .line 4305
    .restart local v4    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v4, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4307
    .end local v4    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    :cond_3
    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v4

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v5

    invoke-static {v0, v4, v5, p4}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;Ljava/lang/String;)I

    .line 4299
    .end local v3    # "wc":Landroid/os/WorkSource$WorkChain;
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 4310
    .end local v1    # "i":I
    .end local p2    # "workChains":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/WorkSource$WorkChain;>;"
    :cond_4
    move p2, v2

    .end local v2    # "uid":I
    .local p2, "uid":I
    goto :goto_3

    .line 4311
    :cond_5
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z

    move-result v1

    if-eqz v1, :cond_6

    .line 4312
    invoke-virtual {p0, p2, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v1

    .line 4313
    .local v1, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v1, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 4315
    .end local v1    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    :cond_6
    const/4 v1, 0x0

    invoke-static {v0, p2, v1, p4}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;)I

    .line 4317
    :goto_3
    return-void
.end method

.method public noteWifiBatchedScanStartedFromSourceLocked(Landroid/os/WorkSource;I)V
    .locals 4
    .param p1, "ws"    # Landroid/os/WorkSource;
    .param p2, "csph"    # I

    .line 6226
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6227
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 6228
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v3

    invoke-virtual {p0, v3, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStartedLocked(II)V

    .line 6227
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6231
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 6232
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 6233
    nop

    .local v1, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    if-ge v1, v3, :cond_1

    .line 6234
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v3

    invoke-virtual {p0, v3, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStartedLocked(II)V

    .line 6233
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 6237
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteWifiBatchedScanStartedLocked(II)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "csph"    # I

    .line 6085
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6086
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6087
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v2

    invoke-virtual {v2, p2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiBatchedScanStartedLocked(IJ)V

    .line 6088
    return-void
.end method

.method public noteWifiBatchedScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 4
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6240
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6241
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 6242
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(I)V

    .line 6241
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6245
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 6246
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 6247
    nop

    .local v1, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v3

    if-ge v1, v3, :cond_1

    .line 6248
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v3}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiBatchedScanStoppedLocked(I)V

    .line 6247
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 6251
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteWifiBatchedScanStoppedLocked(I)V
    .locals 3
    .param p1, "uid"    # I

    .line 6091
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6092
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6093
    .local v0, "elapsedRealtime":J
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v2

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiBatchedScanStoppedLocked(J)V

    .line 6094
    return-void
.end method

.method public noteWifiMulticastDisabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6119
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6120
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6121
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6122
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 6123
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    if-nez v4, :cond_0

    .line 6124
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x10001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6127
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6130
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 6132
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6135
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiMulticastDisabledLocked(J)V

    .line 6136
    return-void
.end method

.method public noteWifiMulticastEnabledLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6099
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 6100
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6101
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6102
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    if-nez v4, :cond_0

    .line 6103
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x10000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6106
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6109
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v4

    if-nez v4, :cond_0

    .line 6111
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6114
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastNesting:I

    .line 6115
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiMulticastEnabledLocked(J)V

    .line 6116
    return-void
.end method

.method public noteWifiOffLocked()V
    .locals 7

    .line 5493
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5494
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5495
    .local v2, "uptime":J
    iget-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    if-eqz v4, :cond_0

    .line 5496
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x10000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5499
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5500
    const/4 v4, 0x0

    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 5501
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5502
    const-string/jumbo v4, "wifi-on"

    const/4 v5, 0x2

    invoke-direct {p0, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5504
    :cond_0
    return-void
.end method

.method public noteWifiOnLocked()V
    .locals 7

    .line 5479
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    if-nez v0, :cond_0

    .line 5480
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5481
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5482
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x10000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5485
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5486
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 5487
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5488
    const-string/jumbo v4, "wifi-off"

    const/4 v5, 0x2

    invoke-direct {p0, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5490
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_0
    return-void
.end method

.method public noteWifiRadioPowerState(IJI)V
    .locals 11
    .param p1, "powerState"    # I
    .param p2, "timestampNs"    # J
    .param p4, "uid"    # I

    .line 5835
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v7

    .line 5836
    .local v7, "elapsedRealtime":J
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v9

    .line 5837
    .local v9, "uptime":J
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    if-eq v0, p1, :cond_4

    .line 5838
    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x3

    if-ne p1, v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    .line 5841
    .local v0, "active":Z
    :goto_1
    if-eqz v0, :cond_3

    .line 5842
    if-lez p4, :cond_2

    .line 5843
    move-object v1, p0

    move-wide v2, v7

    move-wide v4, v9

    move v6, p4

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiRadioApWakeupLocked(JJI)V

    .line 5845
    :cond_2
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v3, 0x4000000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5846
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    goto :goto_2

    .line 5848
    :cond_3
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v3, -0x4000001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 5849
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    const-wide/32 v2, 0xf4240

    div-long v2, p2, v2

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5854
    :goto_2
    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5855
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 5856
    const/16 v1, 0xd

    const/4 v2, 0x0

    invoke-static {v1, p4, v2, p1}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    .line 5859
    .end local v0    # "active":Z
    :cond_4
    return-void
.end method

.method public noteWifiRssiChangedLocked(I)V
    .locals 8
    .param p1, "newRssi"    # I

    .line 6001
    const/4 v0, 0x5

    invoke-static {p1, v0}, Landroid/net/wifi/WifiManager;->calculateSignalLevel(II)I

    move-result v0

    .line 6003
    .local v0, "strengthBin":I
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    if-eq v1, v0, :cond_3

    .line 6004
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 6005
    .local v1, "elapsedRealtime":J
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 6006
    .local v3, "uptime":J
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    if-ltz v5, :cond_0

    .line 6007
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    aget-object v5, v5, v6

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 6010
    :cond_0
    if-ltz v0, :cond_2

    .line 6011
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v5

    if-nez v5, :cond_1

    .line 6012
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v5, v5, v0

    invoke-virtual {v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 6014
    :cond_1
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v6, v6, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit8 v6, v6, -0x71

    shl-int/lit8 v7, v0, 0x4

    or-int/2addr v6, v7

    iput v6, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 6019
    invoke-virtual {p0, v1, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    goto :goto_0

    .line 6021
    :cond_2
    const/4 v5, -0x1

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->stopAllWifiSignalStrengthTimersLocked(I)V

    .line 6023
    :goto_0
    const/16 v5, 0x26

    invoke-static {v5, v0}, Landroid/util/StatsLog;->write(II)I

    .line 6024
    iput v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthBin:I

    .line 6026
    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    :cond_3
    return-void
.end method

.method public noteWifiRunningChangedLocked(Landroid/os/WorkSource;Landroid/os/WorkSource;)V
    .locals 8
    .param p1, "oldWs"    # Landroid/os/WorkSource;
    .param p2, "newWs"    # Landroid/os/WorkSource;

    .line 5892
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_4

    .line 5893
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5894
    .local v0, "elapsedRealtime":J
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v2

    .line 5895
    .local v2, "N":I
    const/4 v3, 0x0

    move v4, v3

    .line 5895
    .local v4, "i":I
    :goto_0
    if-ge v4, v2, :cond_0

    .line 5896
    invoke-virtual {p1, v4}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5897
    .local v5, "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5895
    .end local v5    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 5900
    .end local v4    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v4

    .line 5901
    .local v4, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v4, :cond_1

    .line 5902
    move v5, v3

    .line 5902
    .local v5, "i":I
    :goto_1
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v6

    if-ge v5, v6, :cond_1

    .line 5903
    invoke-interface {v4, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v6}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 5904
    .local v6, "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v7

    invoke-virtual {v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5902
    .end local v6    # "uid":I
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 5908
    .end local v5    # "i":I
    :cond_1
    invoke-virtual {p2}, Landroid/os/WorkSource;->size()I

    move-result v2

    .line 5909
    move v5, v3

    .line 5909
    .restart local v5    # "i":I
    :goto_2
    if-ge v5, v2, :cond_2

    .line 5910
    invoke-virtual {p2, v5}, Landroid/os/WorkSource;->get(I)I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 5911
    .restart local v6    # "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v7

    invoke-virtual {v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5909
    .end local v6    # "uid":I
    add-int/lit8 v5, v5, 0x1

    goto :goto_2

    .line 5914
    .end local v5    # "i":I
    :cond_2
    invoke-virtual {p2}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v4

    .line 5915
    if-eqz v4, :cond_3

    .line 5916
    nop

    .line 5916
    .local v3, "i":I
    :goto_3
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v5

    if-ge v3, v5, :cond_3

    .line 5917
    invoke-interface {v4, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 5918
    .local v5, "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    invoke-virtual {v6, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5916
    .end local v5    # "uid":I
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 5921
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "N":I
    .end local v3    # "i":I
    .end local v4    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    :cond_3
    goto :goto_4

    .line 5922
    :cond_4
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "noteWifiRunningChangedLocked -- called while WIFI not running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5924
    :goto_4
    return-void
.end method

.method public noteWifiRunningLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 5862
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-nez v0, :cond_2

    .line 5863
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5864
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5865
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v6, 0x20000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5868
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5869
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 5870
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5871
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v4

    .line 5872
    .local v4, "N":I
    const/4 v5, 0x0

    move v6, v5

    .line 5872
    .local v6, "i":I
    :goto_0
    if-ge v6, v4, :cond_0

    .line 5873
    invoke-virtual {p1, v6}, Landroid/os/WorkSource;->get(I)I

    move-result v7

    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 5874
    .local v7, "uid":I
    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    invoke-virtual {v8, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5872
    .end local v7    # "uid":I
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 5877
    .end local v6    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v6

    .line 5878
    .local v6, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v6, :cond_1

    .line 5879
    nop

    .line 5879
    .local v5, "i":I
    :goto_1
    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v7

    if-ge v5, v7, :cond_1

    .line 5880
    invoke-interface {v6, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v7}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v7

    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 5881
    .restart local v7    # "uid":I
    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    invoke-virtual {v8, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiRunningLocked(J)V

    .line 5879
    .end local v7    # "uid":I
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 5885
    .end local v5    # "i":I
    :cond_1
    const-string/jumbo v5, "wifi-running"

    const/4 v7, 0x2

    invoke-direct {p0, v5, v7}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5886
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v4    # "N":I
    .end local v6    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_2

    .line 5887
    :cond_2
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "noteWifiRunningLocked -- called while WIFI running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5889
    :goto_2
    return-void
.end method

.method public noteWifiScanStartedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6183
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6184
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    const/16 v3, 0x27

    const/4 v4, 0x1

    if-ge v2, v0, :cond_0

    .line 6185
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    .line 6186
    .local v5, "uid":I
    invoke-virtual {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStartedLocked(I)V

    .line 6187
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v6

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v7

    invoke-static {v3, v6, v7, v4}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    .line 6184
    .end local v5    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6191
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 6192
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 6193
    nop

    .local v1, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v5

    if-ge v1, v5, :cond_1

    .line 6194
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    .line 6195
    .local v5, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 6196
    .local v6, "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStartedLocked(I)V

    .line 6197
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v7

    .line 6198
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v8

    .line 6197
    invoke-static {v3, v7, v8, v4}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;I)I

    .line 6193
    .end local v5    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v6    # "uid":I
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 6201
    .end local v1    # "i":I
    :cond_1
    return-void
.end method

.method public noteWifiScanStartedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6059
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6060
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6061
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    if-nez v4, :cond_0

    .line 6062
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v6, 0x8000000

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6065
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6067
    :cond_0
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6068
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiScanStartedLocked(J)V

    .line 6069
    return-void
.end method

.method public noteWifiScanStoppedFromSourceLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 6204
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v0

    .line 6205
    .local v0, "N":I
    const/4 v1, 0x0

    move v2, v1

    .local v2, "i":I
    :goto_0
    const/16 v3, 0x27

    if-ge v2, v0, :cond_0

    .line 6206
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v4

    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    .line 6207
    .local v4, "uid":I
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStoppedLocked(I)V

    .line 6208
    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->get(I)I

    move-result v5

    invoke-virtual {p1, v2}, Landroid/os/WorkSource;->getName(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v5, v6, v1}, Landroid/util/StatsLog;->write_non_chained(IILjava/lang/String;I)I

    .line 6205
    .end local v4    # "uid":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6212
    .end local v2    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v2

    .line 6213
    .local v2, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v2, :cond_1

    .line 6214
    move v4, v1

    .local v4, "i":I
    :goto_1
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v5

    if-ge v4, v5, :cond_1

    .line 6215
    invoke-interface {v2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/WorkSource$WorkChain;

    .line 6216
    .local v5, "workChain":Landroid/os/WorkSource$WorkChain;
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v6

    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    .line 6217
    .local v6, "uid":I
    invoke-virtual {p0, v6}, Lcom/android/internal/os/BatteryStatsImpl;->noteWifiScanStoppedLocked(I)V

    .line 6218
    nop

    .line 6219
    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getUids()[I

    move-result-object v7

    invoke-virtual {v5}, Landroid/os/WorkSource$WorkChain;->getTags()[Ljava/lang/String;

    move-result-object v8

    .line 6218
    invoke-static {v3, v7, v8, v1}, Landroid/util/StatsLog;->write(I[I[Ljava/lang/String;I)I

    .line 6214
    .end local v5    # "workChain":Landroid/os/WorkSource$WorkChain;
    .end local v6    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 6223
    .end local v4    # "i":I
    :cond_1
    return-void
.end method

.method public noteWifiScanStoppedLocked(I)V
    .locals 7
    .param p1, "uid"    # I

    .line 6072
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 6073
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 6074
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    .line 6075
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanNesting:I

    if-nez v4, :cond_0

    .line 6076
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v6, -0x8000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 6079
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 6081
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiScanStoppedLocked(J)V

    .line 6082
    return-void
.end method

.method public noteWifiStateLocked(ILjava/lang/String;)V
    .locals 4
    .param p1, "wifiState"    # I
    .param p2, "accessPoint"    # Ljava/lang/String;

    .line 5958
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    if-eq v0, p1, :cond_1

    .line 5959
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5960
    .local v0, "elapsedRealtime":J
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    if-ltz v2, :cond_0

    .line 5961
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    aget-object v2, v2, v3

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5963
    :cond_0
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiState:I

    .line 5964
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, p1

    invoke-virtual {v2, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5965
    const-string/jumbo v2, "wifi-state"

    const/4 v3, 0x2

    invoke-direct {p0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5967
    .end local v0    # "elapsedRealtime":J
    :cond_1
    return-void
.end method

.method public noteWifiStoppedLocked(Landroid/os/WorkSource;)V
    .locals 9
    .param p1, "ws"    # Landroid/os/WorkSource;

    .line 5927
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    if-eqz v0, :cond_2

    .line 5928
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5929
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5930
    .local v2, "uptime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v6, -0x20000001

    and-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5933
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5934
    const/4 v4, 0x0

    iput-boolean v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 5935
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5936
    invoke-virtual {p1}, Landroid/os/WorkSource;->size()I

    move-result v5

    .line 5937
    .local v5, "N":I
    move v6, v4

    .line 5937
    .local v6, "i":I
    :goto_0
    if-ge v6, v5, :cond_0

    .line 5938
    invoke-virtual {p1, v6}, Landroid/os/WorkSource;->get(I)I

    move-result v7

    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 5939
    .local v7, "uid":I
    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    invoke-virtual {v8, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5937
    .end local v7    # "uid":I
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 5942
    .end local v6    # "i":I
    :cond_0
    invoke-virtual {p1}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/ArrayList;

    move-result-object v6

    .line 5943
    .local v6, "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    if-eqz v6, :cond_1

    .line 5944
    nop

    .line 5944
    .local v4, "i":I
    :goto_1
    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v7

    if-ge v4, v7, :cond_1

    .line 5945
    invoke-interface {v6, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/os/WorkSource$WorkChain;

    invoke-virtual {v7}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    move-result v7

    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v7

    .line 5946
    .restart local v7    # "uid":I
    invoke-virtual {p0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    invoke-virtual {v8, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteWifiStoppedLocked(J)V

    .line 5944
    .end local v7    # "uid":I
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 5950
    .end local v4    # "i":I
    :cond_1
    const-string/jumbo v4, "wifi-stopped"

    const/4 v7, 0x2

    invoke-direct {p0, v4, v7}, Lcom/android/internal/os/BatteryStatsImpl;->scheduleSyncExternalStatsLocked(Ljava/lang/String;I)V

    .line 5951
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    .end local v5    # "N":I
    .end local v6    # "workChains":Ljava/util/List;, "Ljava/util/List<Landroid/os/WorkSource$WorkChain;>;"
    goto :goto_2

    .line 5952
    :cond_2
    const-string v0, "BatteryStatsImpl"

    const-string/jumbo v1, "noteWifiStoppedLocked -- called while WIFI not running"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5954
    :goto_2
    return-void
.end method

.method public noteWifiSupplicantStateChangedLocked(IZ)V
    .locals 7
    .param p1, "supplState"    # I
    .param p2, "failedAuth"    # Z

    .line 5971
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    if-eq v0, p1, :cond_1

    .line 5972
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5973
    .local v0, "elapsedRealtime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    .line 5974
    .local v2, "uptime":J
    iget v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    if-ltz v4, :cond_0

    .line 5975
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    aget-object v4, v4, v5

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    .line 5977
    :cond_0
    iput p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplState:I

    .line 5978
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v4, v4, p1

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V

    .line 5979
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v5, v5, Landroid/os/BatteryStats$HistoryItem;->states2:I

    and-int/lit8 v5, v5, -0x10

    shl-int/lit8 v6, p1, 0x0

    or-int/2addr v5, v6

    iput v5, v4, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 5984
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 5986
    .end local v0    # "elapsedRealtime":J
    .end local v2    # "uptime":J
    :cond_1
    return-void
.end method

.method public onCleanupUserLocked(I)V
    .locals 10
    .param p1, "userId"    # I

    .line 13274
    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    .line 13275
    .local v0, "firstUidForUser":I
    const v1, 0x1869f

    invoke-static {p1, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v7

    .line 13276
    .local v7, "lastUidForUser":I
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v9, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    .line 13277
    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    move-object v1, v9

    move-object v2, p0

    move v3, v0

    move v4, v7

    invoke-direct/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IIJ)V

    .line 13276
    invoke-interface {v8, v9}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 13278
    return-void
.end method

.method public onUserRemovedLocked(I)V
    .locals 6
    .param p1, "userId"    # I

    .line 13281
    const/4 v0, 0x0

    invoke-static {p1, v0}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    .line 13282
    .local v0, "firstUidForUser":I
    const v1, 0x1869f

    invoke-static {p1, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v1

    .line 13283
    .local v1, "lastUidForUser":I
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    const/4 v3, 0x0

    invoke-virtual {v2, v0, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13284
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13285
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v2

    .line 13286
    .local v2, "firstIndex":I
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v3

    .line 13287
    .local v3, "lastIndex":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    sub-int v5, v3, v2

    add-int/lit8 v5, v5, 0x1

    invoke-virtual {v4, v2, v5}, Landroid/util/SparseArray;->removeAtRange(II)V

    .line 13288
    return-void
.end method

.method public postBatteryNeedsCpuUpdateMsg()V
    .locals 2

    .line 395
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 396
    return-void
.end method

.method public prepareForDumpLocked()V
    .locals 0

    .line 15175
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 15179
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    .line 15180
    return-void
.end method

.method public pullPendingStateUpdatesLocked()V
    .locals 2

    .line 11056
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-eqz v0, :cond_0

    .line 11057
    iget v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 11059
    :cond_0
    return-void
.end method

.method readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V
    .locals 11
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .param p2, "dit"    # Landroid/os/BatteryStats$DailyItem;
    .param p3, "isCharge"    # Z
    .param p4, "tag"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 10571
    const-string/jumbo v0, "n"

    const/4 v1, 0x0

    invoke-interface {p1, v1, v0}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 10572
    .local v0, "numAttr":Ljava/lang/String;
    if-nez v0, :cond_0

    .line 10573
    const-string v1, "BatteryStatsImpl"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Missing \'n\' attribute at "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getPositionDescription()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10574
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10575
    return-void

    .line 10577
    :cond_0
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2

    .line 10578
    .local v2, "num":I
    new-instance v3, Landroid/os/BatteryStats$LevelStepTracker;

    invoke-direct {v3, v2}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I)V

    .line 10579
    .local v3, "steps":Landroid/os/BatteryStats$LevelStepTracker;
    if-eqz p3, :cond_1

    .line 10580
    iput-object v3, p2, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    goto :goto_0

    .line 10582
    :cond_1
    iput-object v3, p2, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10584
    :goto_0
    const/4 v4, 0x0

    .line 10585
    .local v4, "i":I
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v5

    .line 10587
    .local v5, "outerDepth":I
    :cond_2
    :goto_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v6

    move v7, v6

    .line 10587
    .local v7, "type":I
    const/4 v8, 0x1

    if-eq v6, v8, :cond_8

    const/4 v6, 0x3

    if-ne v7, v6, :cond_3

    .line 10588
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v8

    if-le v8, v5, :cond_8

    .line 10589
    :cond_3
    if-eq v7, v6, :cond_2

    const/4 v6, 0x4

    if-ne v7, v6, :cond_4

    .line 10590
    goto :goto_1

    .line 10593
    :cond_4
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v6

    .line 10594
    .local v6, "tagName":Ljava/lang/String;
    const-string/jumbo v8, "s"

    invoke-virtual {v8, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_6

    .line 10595
    if-ge v4, v2, :cond_7

    .line 10596
    const-string/jumbo v8, "v"

    invoke-interface {p1, v1, v8}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    .line 10597
    .local v8, "valueAttr":Ljava/lang/String;
    if-eqz v8, :cond_5

    .line 10598
    invoke-virtual {v3, v4, v8}, Landroid/os/BatteryStats$LevelStepTracker;->decodeEntryAt(ILjava/lang/String;)V

    .line 10599
    add-int/lit8 v4, v4, 0x1

    .line 10601
    .end local v8    # "valueAttr":Ljava/lang/String;
    :cond_5
    goto :goto_2

    .line 10603
    :cond_6
    const-string v8, "BatteryStatsImpl"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Unknown element under <"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v10, ">: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10604
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 10603
    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10605
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10607
    .end local v6    # "tagName":Ljava/lang/String;
    :cond_7
    :goto_2
    goto :goto_1

    .line 10608
    :cond_8
    iput v4, v3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    .line 10609
    return-void
.end method

.method readDailyItemTagLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    .locals 10
    .param p1, "parser"    # Lorg/xmlpull/v1/XmlPullParser;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NumberFormatException;,
            Lorg/xmlpull/v1/XmlPullParserException;,
            Ljava/io/IOException;
        }
    .end annotation

    .line 10517
    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    .line 10518
    .local v0, "dit":Landroid/os/BatteryStats$DailyItem;
    const-string/jumbo v1, "start"

    const/4 v2, 0x0

    invoke-interface {p1, v2, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 10519
    .local v1, "attr":Ljava/lang/String;
    if-eqz v1, :cond_0

    .line 10520
    invoke-static {v1}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v3

    iput-wide v3, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    .line 10522
    :cond_0
    const-string v3, "end"

    invoke-interface {p1, v2, v3}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 10523
    if-eqz v1, :cond_1

    .line 10524
    invoke-static {v1}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v3

    iput-wide v3, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    .line 10526
    :cond_1
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v3

    .line 10528
    .local v3, "outerDepth":I
    :cond_2
    :goto_0
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v4

    move v5, v4

    .line 10528
    .local v5, "type":I
    const/4 v6, 0x1

    if-eq v4, v6, :cond_c

    const/4 v4, 0x3

    if-ne v5, v4, :cond_3

    .line 10529
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getDepth()I

    move-result v7

    if-le v7, v3, :cond_c

    .line 10530
    :cond_3
    if-eq v5, v4, :cond_2

    const/4 v4, 0x4

    if-ne v5, v4, :cond_4

    .line 10531
    goto :goto_0

    .line 10534
    :cond_4
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v4

    .line 10535
    .local v4, "tagName":Ljava/lang/String;
    const-string v7, "dis"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    const/4 v8, 0x0

    if-eqz v7, :cond_5

    .line 10536
    const-string v6, "dis"

    invoke-virtual {p0, p1, v0, v8, v6}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto/16 :goto_2

    .line 10537
    :cond_5
    const-string v7, "chg"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_6

    .line 10538
    const-string v7, "chg"

    invoke-virtual {p0, p1, v0, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemTagDetailsLocked(Lorg/xmlpull/v1/XmlPullParser;Landroid/os/BatteryStats$DailyItem;ZLjava/lang/String;)V

    goto/16 :goto_2

    .line 10539
    :cond_6
    const-string/jumbo v7, "upd"

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_9

    .line 10540
    iget-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v7, :cond_7

    .line 10541
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    iput-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10543
    :cond_7
    new-instance v7, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v7}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 10544
    .local v7, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-boolean v6, v7, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 10545
    const-string/jumbo v6, "pkg"

    invoke-interface {p1, v2, v6}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    iput-object v6, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 10546
    const-string/jumbo v6, "ver"

    invoke-interface {p1, v2, v6}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    .line 10547
    .local v6, "verStr":Ljava/lang/String;
    if-eqz v6, :cond_8

    invoke-static {v6}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v8

    goto :goto_1

    :cond_8
    const-wide/16 v8, 0x0

    :goto_1
    iput-wide v8, v7, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 10548
    iget-object v8, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10549
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10550
    .end local v6    # "verStr":Ljava/lang/String;
    .end local v7    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_2

    :cond_9
    const-string/jumbo v6, "rem"

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 10551
    iget-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    if-nez v6, :cond_a

    .line 10552
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    iput-object v6, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10554
    :cond_a
    new-instance v6, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v6}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 10555
    .local v6, "pc":Landroid/os/BatteryStats$PackageChange;
    iput-boolean v8, v6, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 10556
    const-string/jumbo v7, "pkg"

    invoke-interface {p1, v2, v7}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v7

    iput-object v7, v6, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 10557
    iget-object v7, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10558
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10559
    .end local v6    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_2

    .line 10560
    :cond_b
    const-string v6, "BatteryStatsImpl"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Unknown element under <item>: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10561
    invoke-interface {p1}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 10560
    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10562
    invoke-static {p1}, Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V

    .line 10564
    .end local v4    # "tagName":Ljava/lang/String;
    :goto_2
    goto/16 :goto_0

    .line 10565
    :cond_c
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10566
    return-void
.end method

.method public readDailyStatsLocked()V
    .locals 3

    .line 10450
    const-string v0, "BatteryStatsImpl"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Reading daily items from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    invoke-virtual {v2}, Lcom/android/internal/os/AtomicFile;->getBaseFile()Ljava/io/File;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10451
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 10454
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    invoke-virtual {v0}, Lcom/android/internal/os/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v0
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_3

    .line 10457
    .local v0, "stream":Ljava/io/FileInputStream;
    nop

    .line 10456
    nop

    .line 10459
    :try_start_1
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v1

    .line 10460
    .local v1, "parser":Lorg/xmlpull/v1/XmlPullParser;
    sget-object v2, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v2}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v1, v0, v2}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 10461
    invoke-direct {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyItemsLocked(Lorg/xmlpull/v1/XmlPullParser;)V
    :try_end_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10465
    .end local v1    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    :try_start_2
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_1

    .line 10464
    :catchall_0
    move-exception v1

    .line 10465
    :try_start_3
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    .line 10467
    goto :goto_0

    .line 10466
    :catch_0
    move-exception v2

    .line 10467
    :goto_0
    throw v1

    .line 10462
    :catch_1
    move-exception v1

    .line 10465
    :try_start_4
    invoke-virtual {v0}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    .line 10467
    :goto_1
    goto :goto_2

    .line 10466
    :catch_2
    move-exception v1

    .line 10468
    nop

    .line 10469
    :goto_2
    return-void

    .line 10455
    .end local v0    # "stream":Ljava/io/FileInputStream;
    :catch_3
    move-exception v0

    .line 10456
    .local v0, "e":Ljava/io/FileNotFoundException;
    return-void
.end method

.method public readFromParcel(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    .line 14750
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readFromParcelLocked(Landroid/os/Parcel;)V

    .line 14751
    return-void
.end method

.method readFromParcelLocked(Landroid/os/Parcel;)V
    .locals 17
    .param p1, "in"    # Landroid/os/Parcel;

    move-object/from16 v0, p0

    .line 14754
    move-object/from16 v8, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v9

    .line 14755
    .local v9, "magic":I
    const v1, -0x458a8b8b

    if-ne v9, v1, :cond_17

    .line 14759
    const/4 v10, 0x0

    invoke-virtual {v0, v8, v10}, Lcom/android/internal/os/BatteryStatsImpl;->readHistory(Landroid/os/Parcel;Z)V

    .line 14761
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 14762
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    .line 14763
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 14764
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 14765
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    .line 14766
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    .line 14767
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    .line 14768
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    .line 14769
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    const/4 v11, 0x1

    if-eqz v1, :cond_0

    move v1, v11

    goto :goto_0

    :cond_0
    move v1, v10

    :goto_0
    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 14770
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 14771
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 14772
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 14773
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    .line 14774
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    .line 14775
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readFromParcel(Landroid/os/Parcel;)V

    .line 14777
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 14778
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14779
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14780
    move v1, v10

    .local v1, "i":I
    :goto_1
    move v12, v1

    .end local v1    # "i":I
    .local v12, "i":I
    const/4 v13, 0x5

    if-ge v12, v13, :cond_1

    .line 14781
    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v14, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int/lit8 v4, v12, -0x64

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v14

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v14, v13, v12

    .line 14780
    add-int/lit8 v1, v12, 0x1

    .end local v12    # "i":I
    .restart local v1    # "i":I
    goto :goto_1

    .line 14784
    .end local v1    # "i":I
    :cond_1
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    .line 14785
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0xa

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14786
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 14787
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x2

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14789
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 14790
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 14791
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xe

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14793
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xb

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14795
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xf

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14797
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xc

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14798
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x3

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14799
    move v1, v10

    .restart local v1    # "i":I
    :goto_2
    move v12, v1

    .end local v1    # "i":I
    .restart local v12    # "i":I
    sget v1, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    if-ge v12, v1, :cond_2

    .line 14800
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0xc8

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14799
    add-int/lit8 v1, v12, 0x1

    .end local v12    # "i":I
    .restart local v1    # "i":I
    goto :goto_2

    .line 14803
    .end local v1    # "i":I
    :cond_2
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0xc7

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14805
    move v1, v10

    .restart local v1    # "i":I
    :goto_3
    move v12, v1

    .end local v1    # "i":I
    .restart local v12    # "i":I
    const/16 v1, 0x15

    if-ge v12, v1, :cond_3

    .line 14806
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x12c

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14805
    add-int/lit8 v1, v12, 0x1

    .end local v12    # "i":I
    .restart local v1    # "i":I
    goto :goto_3

    .line 14809
    .end local v1    # "i":I
    :cond_3
    move v1, v10

    .restart local v1    # "i":I
    :goto_4
    const/16 v2, 0xa

    if-ge v1, v2, :cond_4

    .line 14810
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v3, v2, v1

    .line 14811
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v3, v2, v1

    .line 14809
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 14813
    .end local v1    # "i":I
    :cond_4
    iput v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 14814
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x190

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14816
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0x191

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14818
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14819
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14820
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14821
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x4

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14823
    iput v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 14824
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 14825
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14826
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 14827
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, -0x5

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14829
    move v1, v10

    .restart local v1    # "i":I
    :goto_5
    move v12, v1

    .end local v1    # "i":I
    .restart local v12    # "i":I
    const/16 v1, 0x8

    if-ge v12, v1, :cond_5

    .line 14830
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x258

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14829
    add-int/lit8 v1, v12, 0x1

    .end local v12    # "i":I
    .restart local v1    # "i":I
    goto :goto_5

    .line 14833
    .end local v1    # "i":I
    :cond_5
    move v1, v10

    .restart local v1    # "i":I
    :goto_6
    move v12, v1

    .end local v1    # "i":I
    .restart local v12    # "i":I
    const/16 v1, 0xd

    if-ge v12, v1, :cond_6

    .line 14834
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x2bc

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14833
    add-int/lit8 v1, v12, 0x1

    .end local v12    # "i":I
    .restart local v1    # "i":I
    goto :goto_6

    .line 14837
    .end local v1    # "i":I
    :cond_6
    move v1, v10

    .restart local v1    # "i":I
    :goto_7
    move v12, v1

    .end local v1    # "i":I
    .restart local v12    # "i":I
    if-ge v12, v13, :cond_7

    .line 14838
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x320

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14837
    add-int/lit8 v1, v12, 0x1

    .end local v12    # "i":I
    .restart local v1    # "i":I
    goto :goto_7

    .line 14841
    .end local v1    # "i":I
    :cond_7
    new-instance v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x384

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v12

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14843
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v11, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 14845
    move v1, v10

    .restart local v1    # "i":I
    :goto_8
    move v12, v1

    .end local v1    # "i":I
    .restart local v12    # "i":I
    const/4 v1, 0x2

    if-ge v12, v1, :cond_8

    .line 14846
    iget-object v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    rsub-int v4, v12, -0x3e8

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v15

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    aput-object v15, v14, v12

    .line 14845
    add-int/lit8 v1, v12, 0x1

    .end local v12    # "i":I
    .restart local v1    # "i":I
    goto :goto_8

    .line 14849
    .end local v1    # "i":I
    :cond_8
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v11, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 14851
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v13, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;ILandroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    .line 14853
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_9

    move v1, v11

    goto :goto_9

    :cond_9
    move v1, v10

    :goto_9
    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 14854
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_a

    move v1, v11

    goto :goto_a

    :cond_a
    move v1, v10

    :goto_a
    iput-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 14855
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    if-eqz v1, :cond_b

    goto :goto_b

    :cond_b
    move v11, v10

    :goto_b
    iput-boolean v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 14857
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 14858
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    .line 14859
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    .line 14860
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnNesting:I

    .line 14861
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v4, 0x0

    const/4 v5, -0x7

    const/4 v6, 0x0

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v2, v1

    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14862
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnNesting:I

    .line 14863
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v13, 0x0

    const/4 v14, -0x8

    const/4 v15, 0x0

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v11, v1

    move-object/from16 v16, v2

    invoke-direct/range {v11 .. v16}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14864
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    .line 14865
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/4 v3, 0x0

    const/16 v4, -0x9

    const/4 v5, 0x0

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v11

    move-object v7, v8

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14866
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    .line 14867
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xd

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v11

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14868
    iput v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 14869
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    const/16 v4, -0xe

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v1, v11

    invoke-direct/range {v1 .. v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 14870
    iput-boolean v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 14871
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 14872
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 14873
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 14874
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 14875
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 14876
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 14877
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 14878
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 14879
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 14880
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 14881
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 14882
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    iput v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 14883
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 14884
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v8}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 14885
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14886
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14887
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14888
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14889
    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v1, v2, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    iput-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14890
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v1

    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 14892
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->clear()V

    .line 14893
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v1

    .line 14894
    .local v1, "NRPMS":I
    move v2, v10

    .local v2, "irpm":I
    :goto_c
    if-ge v2, v1, :cond_d

    .line 14895
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_c

    .line 14896
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    .line 14897
    .local v3, "rpmName":Ljava/lang/String;
    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v4, v5, v6, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 14898
    .local v4, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v5, v3, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14894
    .end local v3    # "rpmName":Ljava/lang/String;
    .end local v4    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_c
    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    .line 14901
    .end local v2    # "irpm":I
    :cond_d
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->clear()V

    .line 14902
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14903
    .local v2, "NSORPMS":I
    move v3, v10

    .local v3, "irpm":I
    :goto_d
    if-ge v3, v2, :cond_f

    .line 14904
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    if-eqz v4, :cond_e

    .line 14905
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v4

    .line 14906
    .local v4, "rpmName":Ljava/lang/String;
    new-instance v5, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v5, v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 14907
    .local v5, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v6, v4, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14903
    .end local v4    # "rpmName":Ljava/lang/String;
    .end local v5    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_e
    add-int/lit8 v3, v3, 0x1

    goto :goto_d

    .line 14911
    .end local v3    # "irpm":I
    :cond_f
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->clear()V

    .line 14912
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    .line 14913
    .local v3, "NKW":I
    move v4, v10

    .local v4, "ikw":I
    :goto_e
    if-ge v4, v3, :cond_11

    .line 14914
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    if-eqz v5, :cond_10

    .line 14915
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v5

    .line 14916
    .local v5, "wakelockName":Ljava/lang/String;
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7, v11, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 14917
    .local v6, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v7, v5, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14913
    .end local v5    # "wakelockName":Ljava/lang/String;
    .end local v6    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_10
    add-int/lit8 v4, v4, 0x1

    goto :goto_e

    .line 14921
    .end local v4    # "ikw":I
    :cond_11
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->clear()V

    .line 14922
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 14923
    .local v4, "NWR":I
    move v5, v10

    .local v5, "iwr":I
    :goto_f
    if-ge v5, v4, :cond_13

    .line 14924
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    if-eqz v6, :cond_12

    .line 14925
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    .line 14926
    .local v6, "reasonName":Ljava/lang/String;
    new-instance v7, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v7, v11, v12, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 14927
    .local v7, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v11, v6, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14923
    .end local v6    # "reasonName":Ljava/lang/String;
    .end local v7    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_12
    add-int/lit8 v5, v5, 0x1

    goto :goto_f

    .line 14931
    .end local v5    # "iwr":I
    :cond_13
    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v5}, Landroid/util/LongSparseArray;->clear()V

    .line 14932
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14933
    .local v5, "nmt":I
    move v6, v10

    .local v6, "imt":I
    :goto_10
    if-ge v6, v5, :cond_15

    .line 14934
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    if-eqz v7, :cond_14

    .line 14935
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v11

    invoke-static {v11, v12}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v7

    .line 14936
    .local v7, "bucket":Ljava/lang/Long;
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v11, v12, v13, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 14937
    .local v11, "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v7}, Ljava/lang/Long;->longValue()J

    move-result-wide v13

    invoke-virtual {v12, v13, v14, v11}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 14933
    .end local v7    # "bucket":Ljava/lang/Long;
    .end local v11    # "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_14
    add-int/lit8 v6, v6, 0x1

    goto :goto_10

    .line 14941
    .end local v6    # "imt":I
    :cond_15
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14942
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14943
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWindowTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14944
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRunningTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14945
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFullWifiLockTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14946
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiScanTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14947
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiBatchedScanTimers:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->clear()V

    .line 14948
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14949
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mAudioTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14950
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mVideoTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14951
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14952
    iget-object v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraTurnedOnTimers:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 14954
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 14955
    .local v6, "numUids":I
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->clear()V

    .line 14956
    nop

    .local v10, "i":I
    :goto_11
    move v7, v10

    .end local v10    # "i":I
    .local v7, "i":I
    if-ge v7, v6, :cond_16

    .line 14957
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    .line 14958
    .local v10, "uid":I
    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-direct {v11, v0, v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    .line 14959
    .local v11, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v11, v12, v13, v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readFromParcelLocked(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Landroid/os/Parcel;)V

    .line 14960
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v10, v11}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 14956
    .end local v10    # "uid":I
    .end local v11    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v10, v7, 0x1

    .end local v7    # "i":I
    .local v10, "i":I
    goto :goto_11

    .line 14962
    .end local v10    # "i":I
    :cond_16
    return-void

    .line 14756
    .end local v1    # "NRPMS":I
    .end local v2    # "NSORPMS":I
    .end local v3    # "NKW":I
    .end local v4    # "NWR":I
    .end local v5    # "nmt":I
    .end local v6    # "numUids":I
    :cond_17
    new-instance v1, Landroid/os/ParcelFormatException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bad magic number: #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {v9}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method readHistory(Landroid/os/Parcel;Z)V
    .locals 11
    .param p1, "in"    # Landroid/os/Parcel;
    .param p2, "andOldHistory"    # Z
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    .line 13655
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v0

    .line 13657
    .local v0, "historyBaseTime":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Landroid/os/Parcel;->setDataSize(I)V

    .line 13658
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v2, v3}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13659
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->clear()V

    .line 13660
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 13661
    iput v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 13663
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 13664
    .local v2, "numTags":I
    nop

    .line 13664
    .local v3, "i":I
    :goto_0
    if-ge v3, v2, :cond_2

    .line 13665
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 13666
    .local v4, "idx":I
    invoke-virtual {p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v5

    .line 13667
    .local v5, "str":Ljava/lang/String;
    if-eqz v5, :cond_1

    .line 13670
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 13671
    .local v6, "uid":I
    new-instance v7, Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v7}, Landroid/os/BatteryStats$HistoryTag;-><init>()V

    .line 13672
    .local v7, "tag":Landroid/os/BatteryStats$HistoryTag;
    iput-object v5, v7, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    .line 13673
    iput v6, v7, Landroid/os/BatteryStats$HistoryTag;->uid:I

    .line 13674
    iput v4, v7, Landroid/os/BatteryStats$HistoryTag;->poolIdx:I

    .line 13675
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    invoke-virtual {v8, v7, v9}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13676
    iget v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    if-lt v4, v8, :cond_0

    .line 13677
    add-int/lit8 v8, v4, 0x1

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextHistoryTagIdx:I

    .line 13679
    :cond_0
    iget v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    iget-object v9, v7, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v9}, Ljava/lang/String;->length()I

    move-result v9

    add-int/lit8 v9, v9, 0x1

    add-int/2addr v8, v9

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumHistoryTagChars:I

    .line 13664
    .end local v4    # "idx":I
    .end local v5    # "str":Ljava/lang/String;
    .end local v6    # "uid":I
    .end local v7    # "tag":Landroid/os/BatteryStats$HistoryTag;
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 13668
    .restart local v4    # "idx":I
    .restart local v5    # "str":Ljava/lang/String;
    :cond_1
    new-instance v6, Landroid/os/ParcelFormatException;

    const-string/jumbo v7, "null history tag string"

    invoke-direct {v6, v7}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 13682
    .end local v3    # "i":I
    .end local v4    # "idx":I
    .end local v5    # "str":Ljava/lang/String;
    :cond_2
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    .line 13683
    .local v3, "bufSize":I
    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I

    move-result v4

    .line 13684
    .local v4, "curPos":I
    sget v5, Lcom/android/internal/os/BatteryStatsImpl;->MAX_MAX_HISTORY_BUFFER:I

    mul-int/lit8 v5, v5, 0x3

    if-ge v3, v5, :cond_6

    .line 13687
    and-int/lit8 v5, v3, -0x4

    if-ne v5, v3, :cond_5

    .line 13693
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v5, p1, v4, v3}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    .line 13694
    add-int v5, v4, v3

    invoke-virtual {p1, v5}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13697
    if-eqz p2, :cond_3

    .line 13698
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readOldHistory(Landroid/os/Parcel;)V

    .line 13707
    :cond_3
    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    .line 13717
    iget-wide v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-lez v5, :cond_4

    .line 13718
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v5}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v5

    .line 13719
    .local v5, "oldnow":J
    iget-wide v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    sub-long/2addr v7, v5

    const-wide/16 v9, 0x1

    add-long/2addr v7, v9

    iput-wide v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    .line 13727
    .end local v5    # "oldnow":J
    :cond_4
    return-void

    .line 13688
    :cond_5
    new-instance v5, Landroid/os/ParcelFormatException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: history data buffer not aligned "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 13685
    :cond_6
    new-instance v5, Landroid/os/ParcelFormatException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: history data buffer too large "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v5
.end method

.method public readHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 11
    .param p1, "src"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;

    .line 3557
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v0

    .line 3558
    .local v0, "firstToken":I
    const v1, 0x7ffff

    and-int/2addr v1, v0

    .line 3559
    .local v1, "deltaTimeToken":I
    const/4 v2, 0x0

    iput-byte v2, p2, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    .line 3560
    const/4 v3, 0x1

    iput v3, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3564
    const v4, 0x7fffd

    const/4 v5, 0x2

    if-ge v1, v4, :cond_0

    .line 3565
    iget-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    int-to-long v8, v1

    add-long/2addr v6, v8

    iput-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    goto :goto_0

    .line 3566
    :cond_0
    if-ne v1, v4, :cond_1

    .line 3567
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v2

    iput-wide v2, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3568
    iget v2, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v2, v5

    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3570
    invoke-virtual {p2, p1}, Landroid/os/BatteryStats$HistoryItem;->readFromParcel(Landroid/os/Parcel;)V

    .line 3571
    return-void

    .line 3572
    :cond_1
    const v4, 0x7fffe

    if-ne v1, v4, :cond_2

    .line 3573
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 3574
    .local v4, "delta":I
    iget-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    int-to-long v8, v4

    add-long/2addr v6, v8

    iput-wide v6, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3575
    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v6, v3

    iput v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3577
    .end local v4    # "delta":I
    goto :goto_0

    .line 3578
    :cond_2
    invoke-virtual {p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v6

    .line 3580
    .local v6, "delta":J
    iget-wide v8, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    add-long/2addr v8, v6

    iput-wide v8, p2, Landroid/os/BatteryStats$HistoryItem;->time:J

    .line 3581
    iget v4, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v4, v5

    iput v4, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3585
    .end local v6    # "delta":J
    :goto_0
    const/high16 v4, 0x80000

    and-int/2addr v4, v0

    if-eqz v4, :cond_3

    .line 3586
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 3587
    .local v4, "batteryLevelInt":I
    invoke-direct {p0, v4, p2}, Lcom/android/internal/os/BatteryStatsImpl;->readBatteryLevelInt(ILandroid/os/BatteryStats$HistoryItem;)V

    .line 3588
    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v6, v3

    iput v6, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    goto :goto_1

    .line 3595
    .end local v4    # "batteryLevelInt":I
    :cond_3
    move v4, v2

    .line 3598
    .restart local v4    # "batteryLevelInt":I
    :goto_1
    const/high16 v6, 0x100000

    and-int/2addr v6, v0

    const v7, 0xffffff

    const/high16 v8, -0x2000000

    if-eqz v6, :cond_4

    .line 3599
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 3600
    .local v6, "stateInt":I
    and-int/2addr v8, v0

    and-int/2addr v7, v6

    or-int/2addr v7, v8

    iput v7, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3601
    shr-int/lit8 v7, v6, 0x1d

    and-int/lit8 v7, v7, 0x7

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 3603
    shr-int/lit8 v7, v6, 0x1a

    and-int/lit8 v7, v7, 0x7

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 3605
    shr-int/lit8 v7, v6, 0x18

    and-int/lit8 v7, v7, 0x3

    int-to-byte v7, v7

    iput-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3607
    iget-byte v7, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    packed-switch v7, :pswitch_data_0

    goto :goto_2

    .line 3615
    :pswitch_0
    const/4 v5, 0x4

    iput-byte v5, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    goto :goto_2

    .line 3612
    :pswitch_1
    iput-byte v5, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3613
    goto :goto_2

    .line 3609
    :pswitch_2
    iput-byte v3, p2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 3610
    nop

    .line 3618
    :goto_2
    iget v5, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v5, v3

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3625
    .end local v6    # "stateInt":I
    goto :goto_3

    .line 3626
    :cond_4
    and-int v5, v0, v8

    iget v6, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    and-int/2addr v6, v7

    or-int/2addr v5, v6

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 3629
    :goto_3
    const/high16 v5, 0x200000

    and-int/2addr v5, v0

    if-eqz v5, :cond_5

    .line 3630
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 3635
    :cond_5
    const/high16 v5, 0x400000

    and-int/2addr v5, v0

    const/4 v6, 0x0

    const v7, 0xffff

    if-eqz v5, :cond_8

    .line 3636
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 3637
    .local v5, "indexes":I
    and-int v8, v5, v7

    .line 3638
    .local v8, "wakeLockIndex":I
    shr-int/lit8 v9, v5, 0x10

    and-int/2addr v9, v7

    .line 3639
    .local v9, "wakeReasonIndex":I
    if-eq v8, v7, :cond_6

    .line 3640
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->localWakelockTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3641
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v8, v10}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    goto :goto_4

    .line 3645
    :cond_6
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3647
    :goto_4
    if-eq v9, v7, :cond_7

    .line 3648
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->localWakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3649
    iget-object v10, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    goto :goto_5

    .line 3653
    :cond_7
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3655
    :goto_5
    iget v10, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v10, v3

    iput v10, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3656
    .end local v5    # "indexes":I
    .end local v8    # "wakeLockIndex":I
    .end local v9    # "wakeReasonIndex":I
    goto :goto_6

    .line 3657
    :cond_8
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3658
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3661
    :goto_6
    const/high16 v5, 0x800000

    and-int/2addr v5, v0

    if-eqz v5, :cond_9

    .line 3662
    iget-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->localEventTag:Landroid/os/BatteryStats$HistoryTag;

    iput-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    .line 3663
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 3664
    .local v2, "codeAndIndex":I
    and-int v5, v2, v7

    iput v5, p2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3665
    shr-int/lit8 v5, v2, 0x10

    and-int/2addr v5, v7

    .line 3666
    .local v5, "index":I
    iget-object v7, p2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {p0, v5, v7}, Lcom/android/internal/os/BatteryStatsImpl;->readHistoryTag(ILandroid/os/BatteryStats$HistoryTag;)V

    .line 3667
    iget v7, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    add-int/2addr v7, v3

    iput v7, p2, Landroid/os/BatteryStats$HistoryItem;->numReadInts:I

    .line 3671
    .end local v2    # "codeAndIndex":I
    .end local v5    # "index":I
    goto :goto_7

    .line 3672
    :cond_9
    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    .line 3675
    :goto_7
    and-int/lit8 v2, v4, 0x1

    if-eqz v2, :cond_a

    .line 3676
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3677
    iget-object v2, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-virtual {v2, p1}, Landroid/os/BatteryStats$HistoryStepDetails;->readFromParcel(Landroid/os/Parcel;)V

    goto :goto_8

    .line 3679
    :cond_a
    iput-object v6, p2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3682
    :goto_8
    const/high16 v2, 0x1000000

    and-int/2addr v2, v0

    if-eqz v2, :cond_b

    .line 3683
    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    iput v2, p2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 3685
    :cond_b
    return-void

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public readKernelUidCpuActiveTimesLocked(Z)V
    .locals 7
    .param p1, "onBattery"    # Z
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 12352
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 12353
    .local v0, "startTimeMs":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    new-instance v3, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$mMCK0IbpOZu45KINuNCoRayjoDU;

    invoke-direct {v3, p0, p1}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$mMCK0IbpOZu45KINuNCoRayjoDU;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Z)V

    invoke-virtual {v2, v3}, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12369
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    sub-long/2addr v2, v0

    .line 12370
    .local v2, "elapsedTimeMs":J
    const-wide/16 v4, 0x64

    cmp-long v4, v2, v4

    if-ltz v4, :cond_0

    .line 12371
    const-string v4, "BatteryStatsImpl"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Reading cpu active times took "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v6, "ms"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12373
    :cond_0
    return-void
.end method

.method public readKernelUidCpuClusterTimesLocked(Z)V
    .locals 7
    .param p1, "onBattery"    # Z
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .line 12381
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 12382
    .local v0, "startTimeMs":J
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    new-instance v3, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$WJBQdQHGlhcwV7yfM8vNEWWvVp0;

    invoke-direct {v3, p0, p1}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$WJBQdQHGlhcwV7yfM8vNEWWvVp0;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Z)V

    invoke-virtual {v2, v3}, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12398
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    sub-long/2addr v2, v0

    .line 12399
    .local v2, "elapsedTimeMs":J
    const-wide/16 v4, 0x64

    cmp-long v4, v2, v4

    if-ltz v4, :cond_0

    .line 12400
    const-string v4, "BatteryStatsImpl"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Reading cpu cluster times took "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v6, "ms"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12402
    :cond_0
    return-void
.end method

.method public readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZ)V
    .locals 21
    .param p2, "onBattery"    # Z
    .param p3, "onBatteryScreenOff"    # Z
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;ZZ)V"
        }
    .end annotation

    .line 12240
    .local p1, "partialTimers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    move-object/from16 v7, p0

    move-object/from16 v8, p1

    .line 12240
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    .line 12241
    invoke-virtual {v0}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v9

    .line 12242
    .local v9, "perClusterTimesAvailable":Z
    if-nez v8, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v0

    :goto_0
    move v11, v0

    .line 12243
    .local v11, "numWakelocks":I
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v12

    .line 12244
    .local v12, "numClusters":I
    const/4 v0, 0x0

    iput-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    .line 12245
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v13

    .line 12246
    .local v13, "startTimeMs":J
    iget-object v15, v7, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    new-instance v6, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$qYIdEyLMO9XI4FHBl_g5LWknDZQ;

    move-object v0, v6

    move-object v1, v7

    move/from16 v2, p2

    move/from16 v3, p3

    move v4, v9

    move v5, v12

    move-object v10, v6

    move v6, v11

    invoke-direct/range {v0 .. v6}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$qYIdEyLMO9XI4FHBl_g5LWknDZQ;-><init>(Lcom/android/internal/os/BatteryStatsImpl;ZZZII)V

    invoke-virtual {v15, v10}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12311
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    sub-long/2addr v0, v13

    .line 12312
    .local v0, "elapsedTimeMs":J
    const-wide/16 v2, 0x64

    cmp-long v2, v0, v2

    if-ltz v2, :cond_1

    .line 12313
    const-string v2, "BatteryStatsImpl"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Reading cpu freq times took "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v4, "ms"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12316
    :cond_1
    iget-object v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    if-eqz v2, :cond_9

    .line 12317
    const/4 v2, 0x0

    .line 12317
    .local v2, "i":I
    :goto_1
    if-ge v2, v11, :cond_9

    .line 12318
    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    iget-object v3, v3, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 12319
    .local v3, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v4, :cond_2

    iget-object v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v4, v4

    if-eq v4, v12, :cond_3

    .line 12321
    :cond_2
    new-array v4, v12, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v4, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 12324
    :cond_3
    const/4 v4, 0x0

    .line 12324
    .local v4, "cluster":I
    :goto_2
    if-ge v4, v12, :cond_8

    .line 12325
    iget-object v5, v7, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v5, v4}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v5

    .line 12326
    .local v5, "speedsInCluster":I
    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    if-eqz v6, :cond_4

    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    array-length v6, v6

    if-eq v6, v5, :cond_5

    .line 12328
    :cond_4
    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v10, v5, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v10, v6, v4

    .line 12331
    :cond_5
    iget-object v6, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v6, v6, v4

    .line 12332
    .local v6, "cpuTimeUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    const/4 v10, 0x0

    .line 12332
    .local v10, "speed":I
    :goto_3
    if-ge v10, v5, :cond_7

    .line 12333
    aget-object v15, v6, v10

    if-nez v15, :cond_6

    .line 12334
    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-wide/from16 v16, v0

    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 12334
    .end local v0    # "elapsedTimeMs":J
    .local v16, "elapsedTimeMs":J
    invoke-direct {v15, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v15, v6, v10

    goto :goto_4

    .line 12336
    .end local v16    # "elapsedTimeMs":J
    .restart local v0    # "elapsedTimeMs":J
    :cond_6
    move-wide/from16 v16, v0

    .line 12336
    .end local v0    # "elapsedTimeMs":J
    .restart local v16    # "elapsedTimeMs":J
    :goto_4
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v0, v0, v4

    aget-wide v0, v0, v10

    sub-int v15, v11, v2

    move/from16 v18, v9

    int-to-long v8, v15

    .line 12336
    .end local v9    # "perClusterTimesAvailable":Z
    .local v18, "perClusterTimesAvailable":Z
    div-long/2addr v0, v8

    .line 12338
    .local v0, "allocationUs":J
    aget-object v8, v6, v10

    move/from16 v9, p2

    invoke-virtual {v8, v0, v1, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12339
    iget-object v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mWakeLockAllocationsUs:[[J

    aget-object v8, v8, v4

    aget-wide v19, v8, v10

    sub-long v19, v19, v0

    aput-wide v19, v8, v10

    .line 12332
    .end local v0    # "allocationUs":J
    add-int/lit8 v10, v10, 0x1

    move-wide/from16 v0, v16

    move/from16 v9, v18

    move-object/from16 v8, p1

    goto :goto_3

    .line 12324
    .end local v5    # "speedsInCluster":I
    .end local v6    # "cpuTimeUs":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .end local v10    # "speed":I
    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .local v0, "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_7
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12324
    .end local v0    # "elapsedTimeMs":J
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    add-int/lit8 v4, v4, 0x1

    move/from16 v9, v18

    move-object/from16 v8, p1

    goto :goto_2

    .line 12317
    .end local v3    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v4    # "cluster":I
    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_8
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12317
    .end local v0    # "elapsedTimeMs":J
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    add-int/lit8 v2, v2, 0x1

    move/from16 v9, v18

    move-object/from16 v8, p1

    goto/16 :goto_1

    .line 12344
    .end local v2    # "i":I
    .end local v16    # "elapsedTimeMs":J
    .end local v18    # "perClusterTimesAvailable":Z
    .restart local v0    # "elapsedTimeMs":J
    .restart local v9    # "perClusterTimesAvailable":Z
    :cond_9
    move-wide/from16 v16, v0

    move/from16 v18, v9

    move/from16 v9, p2

    .line 12344
    .end local v0    # "elapsedTimeMs":J
    .end local v9    # "perClusterTimesAvailable":Z
    .restart local v16    # "elapsedTimeMs":J
    .restart local v18    # "perClusterTimesAvailable":Z
    return-void
.end method

.method public readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V
    .locals 23
    .param p2, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p3, "onBattery"    # Z
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList<",
            "Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;",
            ">;",
            "Landroid/util/SparseLongArray;",
            "Z)V"
        }
    .end annotation

    .line 12132
    .local p1, "partialTimers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    .line 12132
    move/from16 v3, p3

    const-wide/16 v4, 0x0

    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12133
    if-nez v1, :cond_0

    const/4 v7, 0x0

    goto :goto_0

    :cond_0
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v7

    .line 12134
    .local v7, "numWakelocks":I
    :goto_0
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v8}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v8

    .line 12136
    .local v8, "startTimeMs":J
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    new-instance v11, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$cVkGM5pv4uMLFgnMwqPRDhEl5a0;

    invoke-direct {v11, v0, v7, v3, v2}, Lcom/android/internal/os/-$$Lambda$BatteryStatsImpl$cVkGM5pv4uMLFgnMwqPRDhEl5a0;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IZLandroid/util/SparseLongArray;)V

    invoke-virtual {v10, v11}, Lcom/android/internal/os/KernelUidCpuTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12189
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v10}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    sub-long/2addr v10, v8

    .line 12190
    .local v10, "elapsedTimeMs":J
    const-wide/16 v12, 0x64

    cmp-long v14, v10, v12

    if-ltz v14, :cond_1

    .line 12191
    const-string v14, "BatteryStatsImpl"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Reading cpu stats took "

    invoke-virtual {v15, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v15, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string/jumbo v6, "ms"

    invoke-virtual {v15, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v14, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12194
    :cond_1
    if-lez v7, :cond_3

    .line 12196
    iget-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    const-wide/16 v17, 0x32

    mul-long v14, v14, v17

    div-long/2addr v14, v12

    iput-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12197
    iget-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    mul-long v14, v14, v17

    div-long/2addr v14, v12

    iput-wide v14, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12200
    const/16 v16, 0x0

    .line 12200
    .local v16, "i":I
    :goto_1
    move/from16 v6, v16

    .line 12200
    .end local v16    # "i":I
    .local v6, "i":I
    if-ge v6, v7, :cond_3

    .line 12201
    invoke-virtual {v1, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 12202
    .local v12, "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iget-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    sub-int v15, v7, v6

    int-to-long v4, v15

    div-long/2addr v13, v4

    long-to-int v4, v13

    .line 12203
    .local v4, "userTimeUs":I
    iget-wide v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    sub-int v5, v7, v6

    move/from16 v19, v7

    move-wide/from16 v20, v8

    int-to-long v7, v5

    .line 12203
    .end local v7    # "numWakelocks":I
    .end local v8    # "startTimeMs":J
    .local v19, "numWakelocks":I
    .local v20, "startTimeMs":J
    div-long/2addr v13, v7

    long-to-int v5, v13

    .line 12215
    .local v5, "systemTimeUs":I
    iget-object v7, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget-object v7, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    int-to-long v8, v4

    invoke-virtual {v7, v8, v9, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12216
    iget-object v7, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget-object v7, v7, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    int-to-long v8, v5

    invoke-virtual {v7, v8, v9, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12217
    if-eqz v2, :cond_2

    .line 12218
    iget-object v7, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v7

    .line 12219
    .local v7, "uid":I
    const-wide/16 v8, 0x0

    invoke-virtual {v2, v7, v8, v9}, Landroid/util/SparseLongArray;->get(IJ)J

    move-result-wide v13

    int-to-long v8, v4

    add-long/2addr v13, v8

    int-to-long v8, v5

    add-long/2addr v13, v8

    invoke-virtual {v2, v7, v13, v14}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 12222
    .end local v7    # "uid":I
    :cond_2
    iget-object v7, v12, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    const-string v8, "*wakelock*"

    invoke-virtual {v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v7

    .line 12223
    .local v7, "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    div-int/lit16 v8, v4, 0x3e8

    div-int/lit16 v9, v5, 0x3e8

    invoke-virtual {v7, v8, v9, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(IIZ)V

    .line 12225
    iget-wide v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    int-to-long v13, v4

    sub-long/2addr v8, v13

    iput-wide v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuUserTimeUs:J

    .line 12226
    iget-wide v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    int-to-long v13, v5

    sub-long/2addr v8, v13

    iput-wide v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTempTotalCpuSystemTimeUs:J

    .line 12200
    .end local v4    # "userTimeUs":I
    .end local v5    # "systemTimeUs":I
    .end local v7    # "proc":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v12    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    add-int/lit8 v16, v6, 0x1

    .line 12200
    .end local v6    # "i":I
    .restart local v16    # "i":I
    move/from16 v7, v19

    move-wide/from16 v8, v20

    const-wide/16 v4, 0x0

    goto :goto_1

    .line 12229
    .end local v16    # "i":I
    .end local v19    # "numWakelocks":I
    .end local v20    # "startTimeMs":J
    .local v7, "numWakelocks":I
    .restart local v8    # "startTimeMs":J
    :cond_3
    move/from16 v19, v7

    move-wide/from16 v20, v8

    .line 12229
    .end local v7    # "numWakelocks":I
    .end local v8    # "startTimeMs":J
    .restart local v19    # "numWakelocks":I
    .restart local v20    # "startTimeMs":J
    return-void
.end method

.method public readLocked()V
    .locals 12

    .line 13604
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyFile:Lcom/android/internal/os/AtomicFile;

    if-eqz v0, :cond_0

    .line 13605
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->readDailyStatsLocked()V

    .line 13608
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    if-nez v0, :cond_1

    .line 13609
    const-string v0, "BatteryStats"

    const-string/jumbo v1, "readLocked: no file associated with this instance"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13610
    return-void

    .line 13613
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0}, Landroid/util/SparseArray;->clear()V

    .line 13616
    const/4 v0, 0x0

    :try_start_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    invoke-virtual {v1}, Lcom/android/internal/util/JournaledFile;->chooseForRead()Ljava/io/File;

    move-result-object v1

    .line 13617
    .local v1, "file":Ljava/io/File;
    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v2

    if-nez v2, :cond_2

    .line 13618
    return-void

    .line 13620
    :cond_2
    new-instance v2, Ljava/io/FileInputStream;

    invoke-direct {v2, v1}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    .line 13622
    .local v2, "stream":Ljava/io/FileInputStream;
    invoke-static {v2}, Lcom/android/internal/os/BatteryStatsHelper;->readFully(Ljava/io/FileInputStream;)[B

    move-result-object v3

    .line 13623
    .local v3, "raw":[B
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    .line 13624
    .local v4, "in":Landroid/os/Parcel;
    array-length v5, v3

    invoke-virtual {v4, v3, v0, v5}, Landroid/os/Parcel;->unmarshall([BII)V

    .line 13625
    invoke-virtual {v4, v0}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 13626
    invoke-virtual {v2}, Ljava/io/FileInputStream;->close()V

    .line 13628
    invoke-virtual {p0, v4}, Lcom/android/internal/os/BatteryStatsImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 13632
    .end local v1    # "file":Ljava/io/File;
    .end local v2    # "stream":Ljava/io/FileInputStream;
    .end local v3    # "raw":[B
    .end local v4    # "in":Landroid/os/Parcel;
    goto :goto_0

    .line 13629
    :catch_0
    move-exception v1

    .line 13630
    .local v1, "e":Ljava/lang/Exception;
    const-string v2, "BatteryStats"

    const-string v3, "Error reading battery statistics"

    invoke-static {v2, v3, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13631
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    .line 13634
    .end local v1    # "e":Ljava/lang/Exception;
    :goto_0
    sget-object v1, Landroid/os/Build;->ID:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 13636
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataPosition()I

    move-result v1

    if-lez v1, :cond_3

    .line 13637
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 13638
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v8

    .line 13639
    .local v8, "elapsedRealtime":J
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v10

    .line 13643
    .local v10, "uptime":J
    const/4 v1, 0x4

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    invoke-direct {p0, v8, v9, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryBufferLocked(JBLandroid/os/BatteryStats$HistoryItem;)V

    .line 13644
    const/4 v7, 0x0

    move-object v2, p0

    move-wide v3, v8

    move-wide v5, v10

    invoke-direct/range {v2 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 13647
    .end local v8    # "elapsedRealtime":J
    .end local v10    # "uptime":J
    :cond_3
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 13648
    return-void
.end method

.method readOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "in"    # Landroid/os/Parcel;

    .line 13731
    return-void
.end method

.method public readSummaryFromParcel(Landroid/os/Parcel;)V
    .locals 31
    .param p1, "in"    # Landroid/os/Parcel;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/ParcelFormatException;
        }
    .end annotation

    move-object/from16 v0, p0

    .line 13786
    move-object/from16 v1, p1

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 13787
    .local v2, "version":I
    const/16 v3, 0xb1

    if-eq v2, v3, :cond_0

    .line 13788
    const-string v4, "BatteryStats"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "readFromParcel: version got "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, ", expected "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, "; erasing old stats"

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13790
    return-void

    .line 13793
    :cond_0
    const/4 v3, 0x1

    invoke-virtual {v0, v1, v3}, Lcom/android/internal/os/BatteryStatsImpl;->readHistory(Landroid/os/Parcel;Z)V

    .line 13795
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 13796
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v4

    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    .line 13797
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v4

    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    .line 13798
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v4

    iput-wide v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartClockTime:J

    .line 13799
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v4

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    .line 13800
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v4

    iput-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    .line 13801
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13802
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13803
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    .line 13804
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 13805
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 13806
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 13807
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 13808
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    .line 13809
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 13810
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 13811
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 13812
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    .line 13813
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    .line 13814
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    iput v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    .line 13815
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v4, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13816
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v4, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13817
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v4, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13818
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v4, v1}, Landroid/os/BatteryStats$LevelStepTracker;->readFromParcel(Landroid/os/Parcel;)V

    .line 13819
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13820
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13821
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13822
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13823
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v4, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13824
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 13825
    .local v4, "NPKG":I
    const/4 v5, 0x0

    const/4 v6, 0x0

    if-lez v4, :cond_2

    .line 13826
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7, v4}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 13827
    :goto_0
    if-lez v4, :cond_3

    .line 13828
    add-int/lit8 v4, v4, -0x1

    .line 13829
    new-instance v7, Landroid/os/BatteryStats$PackageChange;

    invoke-direct {v7}, Landroid/os/BatteryStats$PackageChange;-><init>()V

    .line 13830
    .local v7, "pc":Landroid/os/BatteryStats$PackageChange;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v8

    iput-object v8, v7, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    .line 13831
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v8

    if-eqz v8, :cond_1

    move v8, v3

    goto :goto_1

    :cond_1
    move v8, v6

    :goto_1
    iput-boolean v8, v7, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    .line 13832
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v8

    iput-wide v8, v7, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    .line 13833
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 13834
    .end local v7    # "pc":Landroid/os/BatteryStats$PackageChange;
    goto :goto_0

    .line 13836
    :cond_2
    iput-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 13838
    :cond_3
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 13839
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 13840
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v7

    iput-wide v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 13842
    iget v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    add-int/2addr v7, v3

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    .line 13844
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 13845
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13846
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13847
    move v7, v6

    .line 13847
    .local v7, "i":I
    :goto_2
    const/4 v8, 0x5

    if-ge v7, v8, :cond_4

    .line 13848
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v8, v8, v7

    invoke-virtual {v8, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13847
    add-int/lit8 v7, v7, 0x1

    goto :goto_2

    .line 13850
    .end local v7    # "i":I
    :cond_4
    iput-boolean v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractive:Z

    .line 13851
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13852
    iput-boolean v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOn:Z

    .line 13853
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13854
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    .line 13855
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v9

    iput-wide v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    .line 13856
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13857
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13858
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13859
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13860
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13861
    move v7, v6

    .line 13861
    .restart local v7    # "i":I
    :goto_3
    sget v9, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    if-ge v7, v9, :cond_5

    .line 13862
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v9, v9, v7

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13861
    add-int/lit8 v7, v7, 0x1

    goto :goto_3

    .line 13864
    .end local v7    # "i":I
    :cond_5
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13865
    move v7, v6

    .line 13865
    .restart local v7    # "i":I
    :goto_4
    const/16 v9, 0x15

    if-ge v7, v9, :cond_6

    .line 13866
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v9, v9, v7

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13865
    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    .line 13868
    .end local v7    # "i":I
    :cond_6
    move v7, v6

    .line 13868
    .restart local v7    # "i":I
    :goto_5
    const/16 v9, 0xa

    if-ge v7, v9, :cond_7

    .line 13869
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v9, v9, v7

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13870
    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v9, v9, v7

    invoke-virtual {v9, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13868
    add-int/lit8 v7, v7, 0x1

    goto :goto_5

    .line 13872
    .end local v7    # "i":I
    :cond_7
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioPowerState:I

    .line 13873
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13874
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13875
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13876
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13877
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13878
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13879
    iput v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiRadioPowerState:I

    .line 13880
    iput-boolean v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOn:Z

    .line 13881
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13882
    iput-boolean v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunning:Z

    .line 13883
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13884
    move v7, v6

    .line 13884
    .restart local v7    # "i":I
    :goto_6
    const/16 v10, 0x8

    if-ge v7, v10, :cond_8

    .line 13885
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v10, v10, v7

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13884
    add-int/lit8 v7, v7, 0x1

    goto :goto_6

    .line 13887
    .end local v7    # "i":I
    :cond_8
    move v7, v6

    .line 13887
    .restart local v7    # "i":I
    :goto_7
    const/16 v10, 0xd

    if-ge v7, v10, :cond_9

    .line 13888
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v10, v10, v7

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13887
    add-int/lit8 v7, v7, 0x1

    goto :goto_7

    .line 13890
    .end local v7    # "i":I
    :cond_9
    move v7, v6

    .line 13890
    .restart local v7    # "i":I
    :goto_8
    if-ge v7, v8, :cond_a

    .line 13891
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v10, v10, v7

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13890
    add-int/lit8 v7, v7, 0x1

    goto :goto_8

    .line 13893
    .end local v7    # "i":I
    :cond_a
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13894
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13895
    move v7, v6

    .line 13895
    .restart local v7    # "i":I
    :goto_9
    const/4 v10, 0x2

    if-ge v7, v10, :cond_b

    .line 13896
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v10, v10, v7

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13895
    add-int/lit8 v7, v7, 0x1

    goto :goto_9

    .line 13898
    .end local v7    # "i":I
    :cond_b
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13899
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13900
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    if-eqz v7, :cond_c

    move v7, v3

    goto :goto_a

    :cond_c
    move v7, v6

    :goto_a
    iput-boolean v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 13901
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    if-eqz v7, :cond_d

    move v7, v3

    goto :goto_b

    :cond_d
    move v7, v6

    :goto_b
    iput-boolean v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 13902
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    if-eqz v7, :cond_e

    move v7, v3

    goto :goto_c

    :cond_e
    move v7, v6

    :goto_c
    iput-boolean v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 13904
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    iput v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    .line 13905
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnNesting:I

    .line 13906
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13907
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnNesting:I

    .line 13908
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13909
    iput v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanNesting:I

    .line 13910
    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13911
    iput-boolean v6, v0, Lcom/android/internal/os/BatteryStatsImpl;->mIsCellularTxPowerHigh:Z

    .line 13913
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v7

    .line 13914
    .local v7, "NRPMS":I
    const/16 v10, 0x2710

    if-gt v7, v10, :cond_59

    .line 13917
    move v11, v6

    .line 13917
    .local v11, "irpm":I
    :goto_d
    if-ge v11, v7, :cond_10

    .line 13918
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    if-eqz v12, :cond_f

    .line 13919
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v12

    .line 13920
    .local v12, "rpmName":Ljava/lang/String;
    invoke-virtual {v0, v12}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v13

    invoke-virtual {v13, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13917
    .end local v12    # "rpmName":Ljava/lang/String;
    :cond_f
    add-int/lit8 v11, v11, 0x1

    goto :goto_d

    .line 13923
    .end local v11    # "irpm":I
    :cond_10
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v11

    .line 13924
    .local v11, "NSORPMS":I
    if-gt v11, v10, :cond_58

    .line 13927
    move v12, v6

    .line 13927
    .local v12, "irpm":I
    :goto_e
    if-ge v12, v11, :cond_12

    .line 13928
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v13

    if-eqz v13, :cond_11

    .line 13929
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v13

    .line 13930
    .local v13, "rpmName":Ljava/lang/String;
    invoke-virtual {v0, v13}, Lcom/android/internal/os/BatteryStatsImpl;->getScreenOffRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v14

    invoke-virtual {v14, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13927
    .end local v13    # "rpmName":Ljava/lang/String;
    :cond_11
    add-int/lit8 v12, v12, 0x1

    goto :goto_e

    .line 13934
    .end local v12    # "irpm":I
    :cond_12
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    .line 13935
    .local v12, "NKW":I
    if-gt v12, v10, :cond_57

    .line 13938
    move v13, v6

    .line 13938
    .local v13, "ikw":I
    :goto_f
    if-ge v13, v12, :cond_14

    .line 13939
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    if-eqz v14, :cond_13

    .line 13940
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v14

    .line 13941
    .local v14, "kwltName":Ljava/lang/String;
    invoke-virtual {v0, v14}, Lcom/android/internal/os/BatteryStatsImpl;->getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v15

    invoke-virtual {v15, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13938
    .end local v14    # "kwltName":Ljava/lang/String;
    :cond_13
    add-int/lit8 v13, v13, 0x1

    goto :goto_f

    .line 13945
    .end local v13    # "ikw":I
    :cond_14
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v13

    .line 13946
    .local v13, "NWR":I
    if-gt v13, v10, :cond_56

    .line 13949
    move v14, v6

    .line 13949
    .local v14, "iwr":I
    :goto_10
    if-ge v14, v13, :cond_16

    .line 13950
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_15

    .line 13951
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v15

    .line 13952
    .local v15, "reasonName":Ljava/lang/String;
    invoke-virtual {v0, v15}, Lcom/android/internal/os/BatteryStatsImpl;->getWakeupReasonTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13949
    .end local v15    # "reasonName":Ljava/lang/String;
    :cond_15
    add-int/lit8 v14, v14, 0x1

    const/4 v3, 0x1

    goto :goto_10

    .line 13956
    .end local v14    # "iwr":I
    :cond_16
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    .line 13957
    .local v3, "NMS":I
    move v14, v6

    .line 13957
    .local v14, "ims":I
    :goto_11
    if-ge v14, v3, :cond_18

    .line 13958
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v15

    if-eqz v15, :cond_17

    .line 13959
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v8

    .line 13960
    .local v8, "kmstName":J
    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getKernelMemoryTimerLocked(J)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v15

    invoke-virtual {v15, v1}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13957
    .end local v8    # "kmstName":J
    :cond_17
    add-int/lit8 v14, v14, 0x1

    const/4 v8, 0x5

    const/16 v9, 0xa

    goto :goto_11

    .line 13964
    .end local v14    # "ims":I
    :cond_18
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v8

    .line 13965
    .local v8, "NU":I
    if-gt v8, v10, :cond_55

    .line 13968
    move v9, v6

    .line 13968
    .local v9, "iu":I
    :goto_12
    if-ge v9, v8, :cond_54

    .line 13969
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    .line 13970
    .local v14, "uid":I
    new-instance v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-direct {v15, v0, v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V

    .line 13971
    .local v15, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v10, v14, v15}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13973
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13974
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V

    .line 13976
    iput-boolean v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunning:Z

    .line 13977
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_19

    .line 13978
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13980
    :cond_19
    iput-boolean v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockOut:Z

    .line 13981
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_1a

    .line 13982
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13984
    :cond_1a
    iput-boolean v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanStarted:Z

    .line 13985
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_1b

    .line 13986
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13988
    :cond_1b
    const/4 v10, -0x1

    iput v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanBinStarted:I

    .line 13989
    move v10, v6

    .line 13989
    .local v10, "i":I
    :goto_13
    const/4 v6, 0x5

    if-ge v10, v6, :cond_1d

    .line 13990
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v17

    if-eqz v17, :cond_1c

    .line 13991
    invoke-virtual {v15, v10, v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->makeWifiBatchedScanBin(ILandroid/os/Parcel;)V

    .line 13992
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v10

    invoke-virtual {v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13989
    :cond_1c
    add-int/lit8 v10, v10, 0x1

    const/4 v6, 0x0

    goto :goto_13

    .line 13995
    .end local v10    # "i":I
    :cond_1d
    const/4 v6, 0x0

    iput-boolean v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastEnabled:Z

    .line 13996
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_1e

    .line 13997
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 13999
    :cond_1e
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_1f

    .line 14000
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createAudioTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14002
    :cond_1f
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_20

    .line 14003
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createVideoTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14005
    :cond_20
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_21

    .line 14006
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createFlashlightTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14008
    :cond_21
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_22

    .line 14009
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createCameraTurnedOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14011
    :cond_22
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_23

    .line 14012
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createForegroundActivityTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14014
    :cond_23
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_24

    .line 14015
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createForegroundServiceTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14017
    :cond_24
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_25

    .line 14018
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createAggregatedPartialWakelockTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14020
    :cond_25
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_26

    .line 14021
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothScanTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14023
    :cond_26
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_27

    .line 14024
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothUnoptimizedScanTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14026
    :cond_27
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_28

    .line 14027
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothScanResultCounterLocked()Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14029
    :cond_28
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_29

    .line 14030
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createBluetoothScanResultBgCounterLocked()Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14032
    :cond_29
    const/16 v10, 0x13

    iput v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessState:I

    .line 14033
    move v10, v6

    .line 14033
    .restart local v10    # "i":I
    :goto_14
    const/4 v6, 0x7

    if-ge v10, v6, :cond_2b

    .line 14034
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    if-eqz v6, :cond_2a

    .line 14035
    invoke-virtual {v15, v10, v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->makeProcessState(ILandroid/os/Parcel;)V

    .line 14036
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v6, v6, v10

    invoke-virtual {v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14033
    :cond_2a
    add-int/lit8 v10, v10, 0x1

    const/4 v6, 0x0

    goto :goto_14

    .line 14039
    .end local v10    # "i":I
    :cond_2b
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_2c

    .line 14040
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->createVibratorOnTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    move-result-object v10

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14043
    :cond_2c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_2e

    .line 14044
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-nez v10, :cond_2d

    .line 14045
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->initUserActivityLocked()V

    .line 14047
    :cond_2d
    const/4 v10, 0x0

    .line 14047
    .restart local v10    # "i":I
    :goto_15
    const/4 v6, 0x4

    if-ge v10, v6, :cond_2e

    .line 14048
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v6, v6, v10

    invoke-virtual {v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14047
    add-int/lit8 v10, v10, 0x1

    const/4 v6, 0x7

    goto :goto_15

    .line 14052
    .end local v10    # "i":I
    :cond_2e
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    if-eqz v6, :cond_31

    .line 14053
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-nez v6, :cond_2f

    .line 14054
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->initNetworkActivityLocked()V

    .line 14056
    :cond_2f
    const/4 v6, 0x0

    .line 14056
    .local v6, "i":I
    :goto_16
    const/16 v10, 0xa

    if-ge v6, v10, :cond_30

    .line 14057
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v6

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14058
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v10, v10, v6

    invoke-virtual {v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14056
    add-int/lit8 v6, v6, 0x1

    goto :goto_16

    .line 14060
    .end local v6    # "i":I
    :cond_30
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14061
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14064
    :cond_31
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14065
    iget-object v6, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14067
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    if-eqz v6, :cond_3a

    .line 14068
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 14069
    .local v6, "numClusters":I
    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-eqz v10, :cond_33

    iget-object v10, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v10}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v10

    if-ne v10, v6, :cond_32

    goto :goto_17

    .line 14070
    :cond_32
    new-instance v5, Landroid/os/ParcelFormatException;

    const-string v10, "Incompatible cpu cluster arrangement"

    invoke-direct {v5, v10}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 14073
    :cond_33
    :goto_17
    new-array v10, v6, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14074
    const/4 v10, 0x0

    .line 14074
    .local v10, "cluster":I
    :goto_18
    if-ge v10, v6, :cond_39

    .line 14075
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v17

    if-eqz v17, :cond_38

    .line 14076
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14077
    .local v5, "NSB":I
    move/from16 v18, v2

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    .line 14077
    .end local v2    # "version":I
    .local v18, "version":I
    if-eqz v2, :cond_35

    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    .line 14078
    invoke-virtual {v2, v10}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v2

    if-ne v2, v5, :cond_34

    .line 14083
    move/from16 v19, v3

    move/from16 v20, v4

    goto :goto_19

    .line 14079
    :cond_34
    new-instance v2, Landroid/os/ParcelFormatException;

    move/from16 v19, v3

    new-instance v3, Ljava/lang/StringBuilder;

    .line 14079
    .end local v3    # "NMS":I
    .local v19, "NMS":I
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    move/from16 v20, v4

    const-string v4, "File corrupt: too many speed bins "

    .line 14079
    .end local v4    # "NPKG":I
    .local v20, "NPKG":I
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 14083
    .end local v19    # "NMS":I
    .end local v20    # "NPKG":I
    .restart local v3    # "NMS":I
    .restart local v4    # "NPKG":I
    :cond_35
    move/from16 v19, v3

    move/from16 v20, v4

    .line 14083
    .end local v3    # "NMS":I
    .end local v4    # "NPKG":I
    .restart local v19    # "NMS":I
    .restart local v20    # "NPKG":I
    :goto_19
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v3, v5, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v3, v2, v10

    .line 14084
    const/4 v2, 0x0

    .line 14084
    .local v2, "speed":I
    :goto_1a
    if-ge v2, v5, :cond_37

    .line 14085
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_36

    .line 14086
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v10

    new-instance v4, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move/from16 v21, v5

    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14086
    .end local v5    # "NSB":I
    .local v21, "NSB":I
    invoke-direct {v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v4, v3, v2

    .line 14088
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v10

    aget-object v3, v3, v2

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_1b

    .line 14084
    .end local v21    # "NSB":I
    .restart local v5    # "NSB":I
    :cond_36
    move/from16 v21, v5

    .line 14084
    .end local v5    # "NSB":I
    .restart local v21    # "NSB":I
    :goto_1b
    add-int/lit8 v2, v2, 0x1

    move/from16 v5, v21

    goto :goto_1a

    .line 14091
    .end local v2    # "speed":I
    .end local v21    # "NSB":I
    :cond_37
    nop

    .line 14074
    const/4 v3, 0x0

    goto :goto_1c

    .line 14092
    .end local v18    # "version":I
    .end local v19    # "NMS":I
    .end local v20    # "NPKG":I
    .local v2, "version":I
    .restart local v3    # "NMS":I
    .restart local v4    # "NPKG":I
    :cond_38
    move/from16 v18, v2

    move/from16 v19, v3

    move/from16 v20, v4

    .line 14092
    .end local v2    # "version":I
    .end local v3    # "NMS":I
    .end local v4    # "NPKG":I
    .restart local v18    # "version":I
    .restart local v19    # "NMS":I
    .restart local v20    # "NPKG":I
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v3, 0x0

    aput-object v3, v2, v10

    .line 14074
    :goto_1c
    add-int/lit8 v10, v10, 0x1

    move-object v5, v3

    move/from16 v2, v18

    move/from16 v3, v19

    move/from16 v4, v20

    goto/16 :goto_18

    .line 14095
    .end local v6    # "numClusters":I
    .end local v10    # "cluster":I
    .end local v18    # "version":I
    .end local v19    # "NMS":I
    .end local v20    # "NPKG":I
    .restart local v2    # "version":I
    .restart local v3    # "NMS":I
    .restart local v4    # "NPKG":I
    :cond_39
    move/from16 v18, v2

    move/from16 v19, v3

    move/from16 v20, v4

    move-object v3, v5

    .line 14095
    .end local v2    # "version":I
    .end local v3    # "NMS":I
    .end local v4    # "NPKG":I
    .restart local v18    # "version":I
    .restart local v19    # "NMS":I
    .restart local v20    # "NPKG":I
    goto :goto_1d

    .line 14096
    .end local v18    # "version":I
    .end local v19    # "NMS":I
    .end local v20    # "NPKG":I
    .restart local v2    # "version":I
    .restart local v3    # "NMS":I
    .restart local v4    # "NPKG":I
    :cond_3a
    move/from16 v18, v2

    move/from16 v19, v3

    move/from16 v20, v4

    move-object v3, v5

    .line 14096
    .end local v2    # "version":I
    .end local v3    # "NMS":I
    .end local v4    # "NPKG":I
    .restart local v18    # "version":I
    .restart local v19    # "NMS":I
    .restart local v20    # "NPKG":I
    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14099
    :goto_1d
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-static {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v2

    iput-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14101
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-static {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v2

    iput-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14104
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14105
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->access$1900(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    .line 14107
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14108
    .local v2, "length":I
    const/4 v3, 0x7

    if-ne v2, v3, :cond_3b

    .line 14109
    new-array v3, v2, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14110
    const/4 v3, 0x0

    .line 14110
    .local v3, "procState":I
    :goto_1e
    if-ge v3, v2, :cond_3c

    .line 14111
    iget-object v4, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14112
    invoke-static {v1, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v5

    aput-object v5, v4, v3

    .line 14110
    add-int/lit8 v3, v3, 0x1

    goto :goto_1e

    .line 14116
    .end local v3    # "procState":I
    :cond_3b
    const/4 v3, 0x0

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14118
    :cond_3c
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14119
    const/4 v3, 0x7

    if-ne v2, v3, :cond_3d

    .line 14120
    new-array v3, v2, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14121
    const/4 v3, 0x0

    .line 14121
    .restart local v3    # "procState":I
    :goto_1f
    if-ge v3, v2, :cond_3e

    .line 14122
    iget-object v4, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    iget-object v5, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14123
    invoke-static {v1, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    move-result-object v5

    aput-object v5, v4, v3

    .line 14121
    add-int/lit8 v3, v3, 0x1

    goto :goto_1f

    .line 14127
    .end local v3    # "procState":I
    :cond_3d
    const/4 v3, 0x0

    iput-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    .line 14130
    :cond_3e
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_3f

    .line 14131
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2002(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14132
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2000(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_20

    .line 14134
    :cond_3f
    const/4 v3, 0x0

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2002(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14137
    :goto_20
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    if-eqz v3, :cond_40

    .line 14138
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2102(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14139
    invoke-static {v15}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2100(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14144
    const/4 v3, 0x0

    goto :goto_21

    .line 14141
    :cond_40
    const/4 v3, 0x0

    invoke-static {v15, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2102(Lcom/android/internal/os/BatteryStatsImpl$Uid;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 14144
    :goto_21
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v4

    .line 14145
    .local v4, "NW":I
    sget v5, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/4 v6, 0x1

    add-int/2addr v5, v6

    if-gt v4, v5, :cond_53

    .line 14148
    const/4 v5, 0x0

    .line 14148
    .local v5, "iw":I
    :goto_22
    if-ge v5, v4, :cond_41

    .line 14149
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v6

    .line 14150
    .local v6, "wlName":Ljava/lang/String;
    invoke-virtual {v15, v6, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readWakeSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14148
    .end local v6    # "wlName":Ljava/lang/String;
    add-int/lit8 v5, v5, 0x1

    goto :goto_22

    .line 14153
    .end local v5    # "iw":I
    :cond_41
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14154
    .local v5, "NS":I
    sget v6, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/4 v10, 0x1

    add-int/2addr v6, v10

    if-gt v5, v6, :cond_52

    .line 14157
    const/4 v6, 0x0

    .line 14157
    .local v6, "is":I
    :goto_23
    if-ge v6, v5, :cond_42

    .line 14158
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v10

    .line 14159
    .local v10, "name":Ljava/lang/String;
    invoke-virtual {v15, v10, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readSyncSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14157
    .end local v10    # "name":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    goto :goto_23

    .line 14162
    .end local v6    # "is":I
    :cond_42
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v6

    .line 14163
    .local v6, "NJ":I
    sget v10, Lcom/android/internal/os/BatteryStatsImpl;->MAX_WAKELOCKS_PER_UID:I

    const/16 v16, 0x1

    add-int/lit8 v10, v10, 0x1

    if-gt v6, v10, :cond_51

    .line 14166
    const/4 v10, 0x0

    .line 14166
    .local v10, "ij":I
    :goto_24
    if-ge v10, v6, :cond_43

    .line 14167
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v3

    .line 14168
    .local v3, "name":Ljava/lang/String;
    invoke-virtual {v15, v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readJobSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V

    .line 14166
    .end local v3    # "name":Ljava/lang/String;
    add-int/lit8 v10, v10, 0x1

    const/4 v3, 0x0

    goto :goto_24

    .line 14171
    .end local v10    # "ij":I
    :cond_43
    invoke-virtual {v15, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->readJobCompletionsFromParcelLocked(Landroid/os/Parcel;)V

    .line 14173
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14174
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14175
    iget-object v3, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v3, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14176
    const/4 v3, 0x0

    .line 14176
    .local v3, "i":I
    :goto_25
    sget-object v10, Lcom/android/internal/os/BatteryStatsImpl;->JOB_FRESHNESS_BUCKETS:[J

    array-length v10, v10

    if-ge v3, v10, :cond_45

    .line 14177
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v10

    if-eqz v10, :cond_44

    .line 14178
    iget-object v10, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    move/from16 v22, v2

    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    .line 14178
    .end local v2    # "length":I
    .local v22, "length":I
    move/from16 v23, v14

    iget-object v14, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBsi:Lcom/android/internal/os/BatteryStatsImpl;

    .line 14178
    .end local v14    # "uid":I
    .local v23, "uid":I
    iget-object v14, v14, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v2, v14}, Lcom/android/internal/os/BatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v2, v10, v3

    .line 14179
    iget-object v2, v15, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v2, v2, v3

    invoke-virtual {v2, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_26

    .line 14176
    .end local v22    # "length":I
    .end local v23    # "uid":I
    .restart local v2    # "length":I
    .restart local v14    # "uid":I
    :cond_44
    move/from16 v22, v2

    move/from16 v23, v14

    .line 14176
    .end local v2    # "length":I
    .end local v14    # "uid":I
    .restart local v22    # "length":I
    .restart local v23    # "uid":I
    :goto_26
    add-int/lit8 v3, v3, 0x1

    move/from16 v2, v22

    move/from16 v14, v23

    goto :goto_25

    .line 14183
    .end local v3    # "i":I
    .end local v22    # "length":I
    .end local v23    # "uid":I
    .restart local v2    # "length":I
    .restart local v14    # "uid":I
    :cond_45
    move/from16 v22, v2

    move/from16 v23, v14

    .line 14183
    .end local v2    # "length":I
    .end local v14    # "uid":I
    .restart local v22    # "length":I
    .restart local v23    # "uid":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14184
    .local v2, "NP":I
    const/16 v3, 0x3e8

    if-gt v2, v3, :cond_50

    .line 14187
    const/4 v10, 0x0

    .line 14187
    .local v10, "is":I
    :goto_27
    if-ge v10, v2, :cond_47

    .line 14188
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    .line 14189
    .local v14, "seNumber":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v17

    if-eqz v17, :cond_46

    .line 14190
    move/from16 v24, v7

    const/4 v3, 0x1

    invoke-virtual {v15, v14, v3}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getSensorTimerLocked(IZ)Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-result-object v7

    .line 14190
    .end local v7    # "NRPMS":I
    .local v24, "NRPMS":I
    invoke-virtual {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14190
    .end local v14    # "seNumber":I
    goto :goto_28

    .line 14187
    .end local v24    # "NRPMS":I
    .restart local v7    # "NRPMS":I
    :cond_46
    move/from16 v24, v7

    const/4 v3, 0x1

    .line 14187
    .end local v7    # "NRPMS":I
    .restart local v24    # "NRPMS":I
    :goto_28
    add-int/lit8 v10, v10, 0x1

    move/from16 v7, v24

    const/16 v3, 0x3e8

    goto :goto_27

    .line 14194
    .end local v10    # "is":I
    .end local v24    # "NRPMS":I
    .restart local v7    # "NRPMS":I
    :cond_47
    move/from16 v24, v7

    const/4 v3, 0x1

    .line 14194
    .end local v7    # "NRPMS":I
    .restart local v24    # "NRPMS":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14195
    const/16 v7, 0x3e8

    if-gt v2, v7, :cond_4f

    .line 14198
    const/4 v7, 0x0

    .line 14198
    .local v7, "ip":I
    :goto_29
    if-ge v7, v2, :cond_48

    .line 14199
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v10

    .line 14200
    .local v10, "procName":Ljava/lang/String;
    invoke-virtual {v15, v10}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getProcessStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v14

    .line 14201
    .local v14, "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    move/from16 v25, v4

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    .line 14201
    .end local v4    # "NW":I
    .local v25, "NW":I
    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedUserTime:J

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mUserTime:J

    .line 14202
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedSystemTime:J

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mSystemTime:J

    .line 14203
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v3

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedForegroundTime:J

    iput-wide v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    .line 14204
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedStarts:I

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mStarts:I

    .line 14205
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedNumCrashes:I

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    .line 14206
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v3

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mLoadedNumAnrs:I

    iput v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    .line 14207
    invoke-virtual {v14, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->readExcessivePowerFromParcelLocked(Landroid/os/Parcel;)V

    .line 14198
    .end local v10    # "procName":Ljava/lang/String;
    .end local v14    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    add-int/lit8 v7, v7, 0x1

    move/from16 v4, v25

    const/4 v3, 0x1

    goto :goto_29

    .line 14210
    .end local v7    # "ip":I
    .end local v25    # "NW":I
    .restart local v4    # "NW":I
    :cond_48
    move/from16 v25, v4

    .line 14210
    .end local v4    # "NW":I
    .restart local v25    # "NW":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v2

    .line 14211
    const/16 v3, 0x2710

    if-gt v2, v3, :cond_4e

    .line 14214
    const/4 v4, 0x0

    .line 14214
    .local v4, "ip":I
    :goto_2a
    if-ge v4, v2, :cond_4d

    .line 14215
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v7

    .line 14216
    .local v7, "pkgName":Ljava/lang/String;
    invoke-virtual {v15, v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v10

    .line 14217
    .local v10, "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v14

    .line 14218
    .local v14, "NWA":I
    const/16 v3, 0x3e8

    if-gt v14, v3, :cond_4c

    .line 14221
    iget-object v3, v10, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->clear()V

    .line 14222
    const/4 v3, 0x0

    .line 14222
    .local v3, "iwa":I
    :goto_2b
    if-ge v3, v14, :cond_49

    .line 14223
    move/from16 v26, v5

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v5

    .line 14224
    .local v5, "tag":Ljava/lang/String;
    .local v26, "NS":I
    move/from16 v27, v11

    new-instance v11, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    .line 14224
    .end local v11    # "NSORPMS":I
    .local v27, "NSORPMS":I
    move/from16 v28, v12

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14224
    .end local v12    # "NKW":I
    .local v28, "NKW":I
    invoke-direct {v11, v12}, Lcom/android/internal/os/BatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    .line 14225
    .local v11, "c":Lcom/android/internal/os/BatteryStatsImpl$Counter;
    invoke-virtual {v11, v1}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14226
    iget-object v12, v10, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v12, v5, v11}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14222
    .end local v5    # "tag":Ljava/lang/String;
    .end local v11    # "c":Lcom/android/internal/os/BatteryStatsImpl$Counter;
    add-int/lit8 v3, v3, 0x1

    move/from16 v5, v26

    move/from16 v11, v27

    move/from16 v12, v28

    goto :goto_2b

    .line 14228
    .end local v3    # "iwa":I
    .end local v26    # "NS":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .local v5, "NS":I
    .local v11, "NSORPMS":I
    .restart local v12    # "NKW":I
    :cond_49
    move/from16 v26, v5

    move/from16 v27, v11

    move/from16 v28, v12

    .line 14228
    .end local v5    # "NS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .restart local v26    # "NS":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v5

    .line 14229
    .end local v26    # "NS":I
    .restart local v5    # "NS":I
    const/16 v3, 0x3e8

    if-gt v5, v3, :cond_4b

    .line 14232
    const/4 v11, 0x0

    .line 14232
    .local v11, "is":I
    :goto_2c
    if-ge v11, v5, :cond_4a

    .line 14233
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v12

    .line 14234
    .local v12, "servName":Ljava/lang/String;
    invoke-virtual {v15, v7, v12}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v3

    .line 14235
    .local v3, "s":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    move-object/from16 v30, v12

    move/from16 v29, v13

    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readLong()J

    move-result-wide v12

    .line 14235
    .end local v12    # "servName":Ljava/lang/String;
    .end local v13    # "NWR":I
    .local v29, "NWR":I
    .local v30, "servName":Ljava/lang/String;
    iput-wide v12, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLoadedStartTime:J

    iput-wide v12, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStartTime:J

    .line 14236
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    iput v12, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLoadedStarts:I

    iput v12, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    .line 14237
    invoke-virtual/range {p1 .. p1}, Landroid/os/Parcel;->readInt()I

    move-result v12

    iput v12, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLoadedLaunches:I

    iput v12, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    .line 14232
    .end local v3    # "s":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .end local v30    # "servName":Ljava/lang/String;
    add-int/lit8 v11, v11, 0x1

    move/from16 v13, v29

    const/16 v3, 0x3e8

    goto :goto_2c

    .line 14214
    .end local v7    # "pkgName":Ljava/lang/String;
    .end local v10    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v11    # "is":I
    .end local v14    # "NWA":I
    .end local v29    # "NWR":I
    .restart local v13    # "NWR":I
    :cond_4a
    move/from16 v29, v13

    .line 14214
    .end local v13    # "NWR":I
    .restart local v29    # "NWR":I
    add-int/lit8 v4, v4, 0x1

    move/from16 v11, v27

    move/from16 v12, v28

    const/16 v3, 0x2710

    goto/16 :goto_2a

    .line 14230
    .end local v29    # "NWR":I
    .restart local v7    # "pkgName":Ljava/lang/String;
    .restart local v10    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .restart local v13    # "NWR":I
    .restart local v14    # "NWA":I
    :cond_4b
    move/from16 v29, v13

    .line 14230
    .end local v13    # "NWR":I
    .restart local v29    # "NWR":I
    new-instance v3, Landroid/os/ParcelFormatException;

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "File corrupt: too many services "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-direct {v3, v11}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 14219
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .local v11, "NSORPMS":I
    .local v12, "NKW":I
    .restart local v13    # "NWR":I
    :cond_4c
    move/from16 v26, v5

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 14219
    .end local v5    # "NS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v26    # "NS":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v3, Landroid/os/ParcelFormatException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "File corrupt: too many wakeup alarms "

    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v3, v5}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 13968
    .end local v2    # "NP":I
    .end local v4    # "ip":I
    .end local v6    # "NJ":I
    .end local v7    # "pkgName":Ljava/lang/String;
    .end local v10    # "p":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v14    # "NWA":I
    .end local v15    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v22    # "length":I
    .end local v23    # "uid":I
    .end local v25    # "NW":I
    .end local v26    # "NS":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    :cond_4d
    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 13968
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    add-int/lit8 v9, v9, 0x1

    move/from16 v2, v18

    move/from16 v3, v19

    move/from16 v4, v20

    move/from16 v7, v24

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/16 v10, 0x2710

    goto/16 :goto_12

    .line 14212
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .restart local v2    # "NP":I
    .restart local v5    # "NS":I
    .restart local v6    # "NJ":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    .restart local v15    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v22    # "length":I
    .restart local v23    # "uid":I
    .restart local v25    # "NW":I
    :cond_4e
    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 14212
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v3, Landroid/os/ParcelFormatException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: too many packages "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 14196
    .end local v25    # "NW":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .local v4, "NW":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    :cond_4f
    move/from16 v25, v4

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 14196
    .end local v4    # "NW":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v25    # "NW":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v3, Landroid/os/ParcelFormatException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: too many processes "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 14185
    .end local v24    # "NRPMS":I
    .end local v25    # "NW":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .restart local v4    # "NW":I
    .local v7, "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    :cond_50
    move/from16 v25, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 14185
    .end local v4    # "NW":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v24    # "NRPMS":I
    .restart local v25    # "NW":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v3, Landroid/os/ParcelFormatException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "File corrupt: too many sensors "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 14164
    .end local v22    # "length":I
    .end local v23    # "uid":I
    .end local v24    # "NRPMS":I
    .end local v25    # "NW":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .local v2, "length":I
    .restart local v4    # "NW":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    .local v14, "uid":I
    :cond_51
    move/from16 v22, v2

    move/from16 v25, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    move/from16 v23, v14

    .line 14164
    .end local v2    # "length":I
    .end local v4    # "NW":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .end local v14    # "uid":I
    .restart local v22    # "length":I
    .restart local v23    # "uid":I
    .restart local v24    # "NRPMS":I
    .restart local v25    # "NW":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many job timers "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 14155
    .end local v6    # "NJ":I
    .end local v22    # "length":I
    .end local v23    # "uid":I
    .end local v24    # "NRPMS":I
    .end local v25    # "NW":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .restart local v2    # "length":I
    .restart local v4    # "NW":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    .restart local v14    # "uid":I
    :cond_52
    move/from16 v22, v2

    move/from16 v25, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    move/from16 v23, v14

    .line 14155
    .end local v2    # "length":I
    .end local v4    # "NW":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .end local v14    # "uid":I
    .restart local v22    # "length":I
    .restart local v23    # "uid":I
    .restart local v24    # "NRPMS":I
    .restart local v25    # "NW":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many syncs "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 14146
    .end local v5    # "NS":I
    .end local v22    # "length":I
    .end local v23    # "uid":I
    .end local v24    # "NRPMS":I
    .end local v25    # "NW":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .restart local v2    # "length":I
    .restart local v4    # "NW":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    .restart local v14    # "uid":I
    :cond_53
    move/from16 v22, v2

    move/from16 v25, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    move/from16 v23, v14

    .line 14146
    .end local v2    # "length":I
    .end local v4    # "NW":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .end local v14    # "uid":I
    .restart local v22    # "length":I
    .restart local v23    # "uid":I
    .restart local v24    # "NRPMS":I
    .restart local v25    # "NW":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many wake locks "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v4, v25

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .end local v25    # "NW":I
    .restart local v4    # "NW":I
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 14241
    .end local v9    # "iu":I
    .end local v15    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v18    # "version":I
    .end local v19    # "NMS":I
    .end local v20    # "NPKG":I
    .end local v22    # "length":I
    .end local v23    # "uid":I
    .end local v24    # "NRPMS":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .local v2, "version":I
    .local v3, "NMS":I
    .local v4, "NPKG":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    :cond_54
    move/from16 v18, v2

    move/from16 v19, v3

    move/from16 v20, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 14241
    .end local v2    # "version":I
    .end local v3    # "NMS":I
    .end local v4    # "NPKG":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v18    # "version":I
    .restart local v19    # "NMS":I
    .restart local v20    # "NPKG":I
    .restart local v24    # "NRPMS":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    return-void

    .line 13966
    .end local v18    # "version":I
    .end local v19    # "NMS":I
    .end local v20    # "NPKG":I
    .end local v24    # "NRPMS":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .restart local v2    # "version":I
    .restart local v3    # "NMS":I
    .restart local v4    # "NPKG":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    :cond_55
    move/from16 v18, v2

    move/from16 v19, v3

    move/from16 v20, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 13966
    .end local v2    # "version":I
    .end local v3    # "NMS":I
    .end local v4    # "NPKG":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v18    # "version":I
    .restart local v19    # "NMS":I
    .restart local v20    # "NPKG":I
    .restart local v24    # "NRPMS":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many uids "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 13947
    .end local v8    # "NU":I
    .end local v18    # "version":I
    .end local v19    # "NMS":I
    .end local v20    # "NPKG":I
    .end local v24    # "NRPMS":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .end local v29    # "NWR":I
    .restart local v2    # "version":I
    .restart local v4    # "NPKG":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    .restart local v13    # "NWR":I
    :cond_56
    move/from16 v18, v2

    move/from16 v20, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    move/from16 v29, v13

    .line 13947
    .end local v2    # "version":I
    .end local v4    # "NPKG":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .end local v13    # "NWR":I
    .restart local v18    # "version":I
    .restart local v20    # "NPKG":I
    .restart local v24    # "NRPMS":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    .restart local v29    # "NWR":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many wakeup reasons "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v4, v29

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .end local v29    # "NWR":I
    .local v4, "NWR":I
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 13936
    .end local v18    # "version":I
    .end local v20    # "NPKG":I
    .end local v24    # "NRPMS":I
    .end local v27    # "NSORPMS":I
    .end local v28    # "NKW":I
    .restart local v2    # "version":I
    .local v4, "NPKG":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    .restart local v12    # "NKW":I
    :cond_57
    move/from16 v18, v2

    move/from16 v20, v4

    move/from16 v24, v7

    move/from16 v27, v11

    move/from16 v28, v12

    .line 13936
    .end local v2    # "version":I
    .end local v4    # "NPKG":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .end local v12    # "NKW":I
    .restart local v18    # "version":I
    .restart local v20    # "NPKG":I
    .restart local v24    # "NRPMS":I
    .restart local v27    # "NSORPMS":I
    .restart local v28    # "NKW":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many kernel wake locks "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v4, v28

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .end local v28    # "NKW":I
    .local v4, "NKW":I
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 13925
    .end local v18    # "version":I
    .end local v20    # "NPKG":I
    .end local v24    # "NRPMS":I
    .end local v27    # "NSORPMS":I
    .restart local v2    # "version":I
    .local v4, "NPKG":I
    .restart local v7    # "NRPMS":I
    .restart local v11    # "NSORPMS":I
    :cond_58
    move/from16 v18, v2

    move/from16 v20, v4

    move/from16 v24, v7

    move/from16 v27, v11

    .line 13925
    .end local v2    # "version":I
    .end local v4    # "NPKG":I
    .end local v7    # "NRPMS":I
    .end local v11    # "NSORPMS":I
    .restart local v18    # "version":I
    .restart local v20    # "NPKG":I
    .restart local v24    # "NRPMS":I
    .restart local v27    # "NSORPMS":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many screen-off rpm stats "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v4, v27

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .end local v27    # "NSORPMS":I
    .local v4, "NSORPMS":I
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 13915
    .end local v18    # "version":I
    .end local v20    # "NPKG":I
    .end local v24    # "NRPMS":I
    .restart local v2    # "version":I
    .local v4, "NPKG":I
    .restart local v7    # "NRPMS":I
    :cond_59
    move/from16 v18, v2

    move/from16 v20, v4

    move/from16 v24, v7

    .line 13915
    .end local v2    # "version":I
    .end local v4    # "NPKG":I
    .end local v7    # "NRPMS":I
    .restart local v18    # "version":I
    .restart local v20    # "NPKG":I
    .restart local v24    # "NRPMS":I
    new-instance v2, Landroid/os/ParcelFormatException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "File corrupt: too many rpm stats "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v4, v24

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .end local v24    # "NRPMS":I
    .local v4, "NRPMS":I
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Landroid/os/ParcelFormatException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public recordDailyStatsIfNeededLocked(Z)V
    .locals 6
    .param p1, "settled"    # Z

    .line 10324
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    .line 10325
    .local v0, "currentTime":J
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    cmp-long v2, v0, v2

    if-ltz v2, :cond_0

    .line 10326
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    .line 10327
    :cond_0
    if-eqz p1, :cond_1

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    cmp-long v2, v0, v2

    if-ltz v2, :cond_1

    .line 10328
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    goto :goto_0

    .line 10329
    :cond_1
    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    const-wide/32 v4, 0x5265c00

    sub-long/2addr v2, v4

    cmp-long v2, v0, v2

    if-gez v2, :cond_2

    .line 10330
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsLocked()V

    .line 10332
    :cond_2
    :goto_0
    return-void
.end method

.method public recordDailyStatsLocked()V
    .locals 10

    .line 10335
    new-instance v0, Landroid/os/BatteryStats$DailyItem;

    invoke-direct {v0}, Landroid/os/BatteryStats$DailyItem;-><init>()V

    .line 10336
    .local v0, "item":Landroid/os/BatteryStats$DailyItem;
    iget-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mStartTime:J

    .line 10337
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v1

    iput-wide v1, v0, Landroid/os/BatteryStats$DailyItem;->mEndTime:J

    .line 10338
    const/4 v1, 0x0

    .line 10339
    .local v1, "hasData":Z
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-lez v2, :cond_0

    .line 10340
    const/4 v1, 0x1

    .line 10341
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v3, v3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v2, v3, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mDischargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10345
    :cond_0
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v2, v2, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    if-lez v2, :cond_1

    .line 10346
    const/4 v1, 0x1

    .line 10347
    new-instance v2, Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v3, v3, Landroid/os/BatteryStats$LevelStepTracker;->mNumStepDurations:I

    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget-object v4, v4, Landroid/os/BatteryStats$LevelStepTracker;->mStepDurations:[J

    invoke-direct {v2, v3, v4}, Landroid/os/BatteryStats$LevelStepTracker;-><init>(I[J)V

    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mChargeSteps:Landroid/os/BatteryStats$LevelStepTracker;

    .line 10351
    :cond_1
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v2, :cond_2

    .line 10352
    const/4 v1, 0x1

    .line 10353
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    iput-object v2, v0, Landroid/os/BatteryStats$DailyItem;->mPackageChanges:Ljava/util/ArrayList;

    .line 10354
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    .line 10356
    :cond_2
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10357
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 10358
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateDailyDeadlineLocked()V

    .line 10360
    if-eqz v1, :cond_4

    .line 10361
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 10362
    .local v2, "startTime":J
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10363
    :goto_0
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    const/16 v5, 0xa

    if-le v4, v5, :cond_3

    .line 10364
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyItems:Ljava/util/ArrayList;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto :goto_0

    .line 10366
    :cond_3
    new-instance v4, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v4}, Ljava/io/ByteArrayOutputStream;-><init>()V

    .line 10368
    .local v4, "memStream":Ljava/io/ByteArrayOutputStream;
    :try_start_0
    new-instance v5, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v5}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 10369
    .local v5, "out":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v6, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v6}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v5, v4, v6}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 10370
    invoke-direct {p0, v5}, Lcom/android/internal/os/BatteryStatsImpl;->writeDailyItemsLocked(Lorg/xmlpull/v1/XmlSerializer;)V

    .line 10371
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    sub-long/2addr v6, v2

    .line 10372
    .local v6, "initialTime":J
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v8

    new-instance v9, Lcom/android/internal/os/BatteryStatsImpl$2;

    invoke-direct {v9, p0, v4, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$2;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Ljava/io/ByteArrayOutputStream;J)V

    invoke-virtual {v8, v9}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10397
    .end local v5    # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v6    # "initialTime":J
    goto :goto_1

    .line 10396
    :catch_0
    move-exception v5

    .line 10399
    .end local v2    # "startTime":J
    .end local v4    # "memStream":Ljava/io/ByteArrayOutputStream;
    :cond_4
    :goto_1
    return-void
.end method

.method public removeIsolatedUidLocked(I)V
    .locals 5
    .param p1, "isolatedUid"    # I
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 4078
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    .line 4079
    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    .line 4078
    const/16 v1, 0x2b

    const/4 v2, 0x0

    invoke-static {v1, v0, p1, v2}, Landroid/util/StatsLog;->write(IIII)I

    .line 4081
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseIntArray;->indexOfKey(I)I

    move-result v0

    .line 4082
    .local v0, "idx":I
    if-ltz v0, :cond_0

    .line 4083
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1, v0}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v1

    .line 4084
    .local v1, "ownerUid":I
    invoke-virtual {p0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v2

    .line 4085
    .local v2, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v2, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->removeIsolatedUid(I)V

    .line 4086
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseIntArray;->removeAt(I)V

    .line 4088
    .end local v1    # "ownerUid":I
    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    invoke-direct {v2, p0, p1, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IJ)V

    invoke-interface {v1, v2}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 4089
    return-void
.end method

.method public removeUidStatsLocked(I)V
    .locals 4
    .param p1, "uid"    # I

    .line 13294
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 13295
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingRemovedUids:Ljava/util/Queue;

    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v2

    invoke-direct {v1, p0, p1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$UidToRemove;-><init>(Lcom/android/internal/os/BatteryStatsImpl;IJ)V

    invoke-interface {v0, v1}, Ljava/util/Queue;->add(Ljava/lang/Object;)Z

    .line 13296
    return-void
.end method

.method public reportExcessiveCpuLocked(ILjava/lang/String;JJ)V
    .locals 7
    .param p1, "uid"    # I
    .param p2, "proc"    # Ljava/lang/String;
    .param p3, "overTime"    # J
    .param p5, "usedTime"    # J

    .line 4769
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result p1

    .line 4770
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 4771
    .local v0, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-eqz v0, :cond_0

    .line 4772
    move-object v1, v0

    move-object v2, p2

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->reportExcessiveCpuLocked(Ljava/lang/String;JJ)V

    .line 4774
    :cond_0
    return-void
.end method

.method public resetAllStatsCmdLocked()V
    .locals 10

    .line 10827
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    .line 10828
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v0

    .line 10829
    .local v0, "mSecUptime":J
    const-wide/16 v2, 0x3e8

    mul-long v4, v0, v2

    .line 10830
    .local v4, "uptime":J
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v6

    .line 10831
    .local v6, "mSecRealtime":J
    mul-long/2addr v2, v6

    .line 10832
    .local v2, "realtime":J
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    .line 10833
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 10834
    invoke-virtual {p0, v6, v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 10835
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 10837
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v8, v4, v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->reset(JJ)V

    .line 10838
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v8, v4, v5, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->reset(JJ)V

    .line 10839
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v8, v8, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v9, 0x80000

    and-int/2addr v8, v9

    if-nez v8, :cond_2

    .line 10840
    iget v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v8

    const/4 v9, 0x0

    if-eqz v8, :cond_0

    .line 10841
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10842
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10843
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10844
    :cond_0
    iget v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {p0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v8

    if-eqz v8, :cond_1

    .line 10845
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10846
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10847
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_0

    .line 10849
    :cond_1
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 10850
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 10851
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v8, v8, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 10853
    :goto_0
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 10854
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 10855
    iput v9, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 10857
    :cond_2
    invoke-direct {p0, v6, v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->initActiveHistoryEventsLocked(JJ)V

    .line 10858
    return-void
.end method

.method public scheduleRemoveIsolatedUidLocked(II)V
    .locals 2
    .param p1, "isolatedUid"    # I
    .param p2, "appUid"    # I

    .line 4064
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIsolatedUids:Landroid/util/SparseIntArray;

    const/4 v1, -0x1

    invoke-virtual {v0, p1, v1}, Landroid/util/SparseIntArray;->get(II)I

    move-result v0

    .line 4065
    .local v0, "curUid":I
    if-ne v0, p2, :cond_0

    .line 4066
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    if-eqz v1, :cond_0

    .line 4067
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    invoke-interface {v1, p1}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleCpuSyncDueToRemovedUid(I)Ljava/util/concurrent/Future;

    .line 4070
    :cond_0
    return-void
.end method

.method public setBatteryStateLocked(IIIIIIII)V
    .locals 29
    .param p1, "status"    # I
    .param p2, "health"    # I
    .param p3, "plugType"    # I
    .param p4, "level"    # I
    .param p5, "temp"    # I
    .param p6, "volt"    # I
    .param p7, "chargeUAh"    # I
    .param p8, "chargeFullUAh"    # I
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v9, p0

    move/from16 v10, p1

    move/from16 v11, p2

    move/from16 v12, p3

    move/from16 v13, p4

    move/from16 v14, p6

    move/from16 v15, p7

    .line 12618
    move/from16 v8, p8

    const/4 v7, 0x0

    move/from16 v0, p5

    invoke-static {v7, v0}, Ljava/lang/Math;->max(II)I

    move-result v6

    .line 12620
    .end local p5    # "temp":I
    .local v6, "temp":I
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    if-eqz v0, :cond_0

    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    invoke-direct {v9, v0, v10, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl;->reportChangesToStatsLog(Landroid/os/BatteryStats$HistoryItem;III)V

    .line 12623
    invoke-static {v12, v10}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery(II)Z

    move-result v5

    .line 12624
    .local v5, "onBattery":Z
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v3

    .line 12625
    .local v3, "uptime":J
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    .line 12626
    .local v1, "elapsedRealtime":J
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    const/4 v8, 0x1

    if-nez v0, :cond_3

    .line 12627
    iput-boolean v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHaveBatteryLevel:Z

    .line 12632
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-ne v5, v0, :cond_2

    .line 12633
    if-eqz v5, :cond_1

    .line 12634
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v16, -0x80001

    and-int v7, v7, v16

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    goto :goto_1

    .line 12636
    :cond_1
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v16, 0x80000

    or-int v7, v7, v16

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12640
    :cond_2
    :goto_1
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v7, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v16, 0x1000000

    or-int v7, v7, v16

    iput v7, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 12641
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v7, v10

    iput-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12642
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v7, v13

    iput-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12643
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v15, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12644
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12646
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    goto :goto_3

    .line 12647
    :cond_3
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    if-ne v0, v13, :cond_4

    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    if-eq v0, v5, :cond_6

    .line 12648
    :cond_4
    const/16 v0, 0x64

    if-lt v13, v0, :cond_5

    if-eqz v5, :cond_5

    move v0, v8

    goto :goto_2

    :cond_5
    const/4 v0, 0x0

    :goto_2
    invoke-virtual {v9, v0}, Lcom/android/internal/os/BatteryStatsImpl;->recordDailyStatsIfNeededLocked(Z)V

    .line 12650
    :cond_6
    :goto_3
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v7, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12651
    .local v7, "oldStatus":I
    if-eqz v5, :cond_8

    .line 12652
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12653
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_7

    .line 12654
    iput-boolean v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12655
    const/16 v16, 0x1

    move-object v0, v9

    move-wide/from16 v23, v1

    .end local v1    # "elapsedRealtime":J
    .local v23, "elapsedRealtime":J
    move-wide/from16 v25, v3

    .end local v3    # "uptime":J
    .local v25, "uptime":J
    move/from16 v27, v5

    move/from16 v5, v16

    .end local v5    # "onBattery":Z
    .local v27, "onBattery":Z
    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    goto :goto_4

    .line 12664
    .end local v23    # "elapsedRealtime":J
    .end local v25    # "uptime":J
    .end local v27    # "onBattery":Z
    .restart local v1    # "elapsedRealtime":J
    .restart local v3    # "uptime":J
    .restart local v5    # "onBattery":Z
    :cond_7
    move-wide/from16 v23, v1

    move-wide/from16 v25, v3

    move/from16 v27, v5

    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v5    # "onBattery":Z
    .restart local v23    # "elapsedRealtime":J
    .restart local v25    # "uptime":J
    .restart local v27    # "onBattery":Z
    goto :goto_4

    .line 12657
    .end local v23    # "elapsedRealtime":J
    .end local v25    # "uptime":J
    .end local v27    # "onBattery":Z
    .restart local v1    # "elapsedRealtime":J
    .restart local v3    # "uptime":J
    .restart local v5    # "onBattery":Z
    :cond_8
    move-wide/from16 v23, v1

    move-wide/from16 v25, v3

    move/from16 v27, v5

    .end local v1    # "elapsedRealtime":J
    .end local v3    # "uptime":J
    .end local v5    # "onBattery":Z
    .restart local v23    # "elapsedRealtime":J
    .restart local v25    # "uptime":J
    .restart local v27    # "onBattery":Z
    const/16 v0, 0x60

    if-ge v13, v0, :cond_9

    if-eq v10, v8, :cond_9

    .line 12659
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    if-nez v0, :cond_9

    .line 12660
    iput-boolean v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12661
    const/4 v5, 0x1

    move-object v0, v9

    move-wide/from16 v1, v23

    move-wide/from16 v3, v25

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    .line 12664
    :cond_9
    :goto_4
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    .line 12665
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    if-gez v0, :cond_a

    .line 12666
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    .line 12669
    :cond_a
    iget-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    const/4 v1, 0x2

    move/from16 v5, v27

    if-eq v5, v0, :cond_e

    .line 12670
    .end local v27    # "onBattery":Z
    .restart local v5    # "onBattery":Z
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v13

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12671
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v10

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12672
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v11

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 12673
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v2, v12

    iput-byte v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 12674
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-short v2, v6

    iput-short v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 12675
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-char v2, v14

    iput-char v2, v0, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 12676
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-ge v15, v0, :cond_d

    .line 12678
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v0, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    sub-int/2addr v0, v15

    int-to-long v2, v0

    .line 12679
    .local v2, "chargeDiff":J
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12680
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12681
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {v9, v0}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_b

    .line 12682
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12684
    :cond_b
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    if-ne v0, v8, :cond_c

    .line 12685
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_5

    .line 12686
    :cond_c
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    if-ne v0, v1, :cond_d

    .line 12687
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12690
    .end local v2    # "chargeDiff":J
    :cond_d
    :goto_5
    iget-object v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v15, v0, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12691
    move-object v0, v9

    move-wide/from16 v1, v23

    move-wide/from16 v3, v25

    move/from16 v27, v5

    .end local v5    # "onBattery":Z
    .restart local v27    # "onBattery":Z
    move v14, v6

    move v6, v7

    .end local v6    # "temp":I
    .local v14, "temp":I
    move/from16 v22, v7

    move v7, v13

    .end local v7    # "oldStatus":I
    .local v22, "oldStatus":I
    move v8, v15

    invoke-virtual/range {v0 .. v8}, Lcom/android/internal/os/BatteryStatsImpl;->setOnBatteryLocked(JJZIII)V

    .line 12797
    move v4, v14

    move-wide/from16 v7, v23

    move-wide/from16 v5, v25

    move/from16 v3, p6

    goto/16 :goto_b

    .line 12693
    .end local v14    # "temp":I
    .end local v22    # "oldStatus":I
    .end local v27    # "onBattery":Z
    .restart local v5    # "onBattery":Z
    .restart local v6    # "temp":I
    .restart local v7    # "oldStatus":I
    :cond_e
    move/from16 v27, v5

    move v14, v6

    move/from16 v22, v7

    .end local v5    # "onBattery":Z
    .end local v6    # "temp":I
    .end local v7    # "oldStatus":I
    .restart local v14    # "temp":I
    .restart local v22    # "oldStatus":I
    .restart local v27    # "onBattery":Z
    const/4 v0, 0x0

    .line 12694
    .local v0, "changed":Z
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-eq v2, v13, :cond_f

    .line 12695
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v13

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12696
    const/4 v0, 0x1

    .line 12700
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    iget-object v3, v9, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-wide v3, v3, Lcom/android/internal/os/BatteryStatsImpl$Constants;->BATTERY_LEVEL_COLLECTION_DELAY_MS:J

    invoke-interface {v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleSyncDueToBatteryLevelChange(J)Ljava/util/concurrent/Future;

    .line 12703
    :cond_f
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    if-eq v2, v10, :cond_10

    .line 12704
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v10

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryStatus:B

    .line 12705
    const/4 v0, 0x1

    .line 12707
    :cond_10
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    if-eq v2, v11, :cond_11

    .line 12708
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v11

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryHealth:B

    .line 12709
    const/4 v0, 0x1

    .line 12711
    :cond_11
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-byte v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    if-eq v2, v12, :cond_12

    .line 12712
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v3, v12

    iput-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryPlugType:B

    .line 12713
    const/4 v0, 0x1

    .line 12715
    :cond_12
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-short v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    add-int/lit8 v2, v2, 0xa

    if-ge v14, v2, :cond_13

    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-short v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    add-int/lit8 v2, v2, -0xa

    if-gt v14, v2, :cond_14

    .line 12717
    :cond_13
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-short v3, v14

    iput-short v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryTemperature:S

    .line 12718
    const/4 v0, 0x1

    .line 12720
    :cond_14
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-char v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    add-int/lit8 v2, v2, 0x14

    move v4, v14

    move/from16 v3, p6

    if-gt v3, v2, :cond_15

    .end local v14    # "temp":I
    .local v4, "temp":I
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget-char v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    add-int/lit8 v2, v2, -0x14

    if-ge v3, v2, :cond_16

    .line 12722
    :cond_15
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-char v5, v3

    iput-char v5, v2, Landroid/os/BatteryStats$HistoryItem;->batteryVoltage:C

    .line 12723
    const/4 v0, 0x1

    .line 12725
    :cond_16
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    add-int/lit8 v2, v2, 0xa

    if-ge v15, v2, :cond_18

    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    add-int/lit8 v2, v2, -0xa

    if-gt v15, v2, :cond_17

    goto :goto_6

    .line 12744
    :cond_17
    const/4 v7, 0x1

    goto :goto_8

    .line 12727
    :cond_18
    :goto_6
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    if-ge v15, v2, :cond_1b

    .line 12729
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v2, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    sub-int/2addr v2, v15

    int-to-long v5, v2

    .line 12730
    .local v5, "chargeDiff":J
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12731
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12732
    iget v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    invoke-virtual {v9, v2}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v2

    if-eqz v2, :cond_19

    .line 12733
    iget-object v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v2, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 12735
    :cond_19
    iget v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    const/4 v7, 0x1

    if-ne v2, v7, :cond_1a

    .line 12736
    iget-object v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_7

    .line 12737
    :cond_1a
    iget v2, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleMode:I

    if-ne v2, v1, :cond_1c

    .line 12738
    iget-object v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .end local v5    # "chargeDiff":J
    goto :goto_7

    .line 12741
    :cond_1b
    const/4 v7, 0x1

    :cond_1c
    :goto_7
    iget-object v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iput v15, v1, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .line 12742
    const/4 v0, 0x1

    .line 12744
    :goto_8
    iget v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    int-to-long v1, v1

    const/16 v5, 0x30

    shl-long/2addr v1, v5

    iget v5, v9, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    int-to-long v5, v5

    const/16 v8, 0x38

    shl-long/2addr v5, v8

    or-long/2addr v1, v5

    and-int/lit16 v5, v13, 0xff

    int-to-long v5, v5

    const/16 v8, 0x28

    shl-long/2addr v5, v8

    or-long/2addr v1, v5

    .line 12747
    .local v1, "modeBits":J
    if-eqz v27, :cond_1d

    .line 12748
    const/4 v5, 0x0

    invoke-virtual {v9, v5}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v6

    or-int/2addr v0, v6

    .line 12749
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    if-eq v6, v13, :cond_21

    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    if-le v6, v13, :cond_21

    .line 12750
    iget-object v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    sub-int v17, v8, v13

    move-object/from16 v16, v6

    move-wide/from16 v18, v1

    move-wide/from16 v20, v23

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12752
    iget-object v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    sub-int v17, v8, v13

    move-object/from16 v16, v6

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12754
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    .line 12755
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    .line 12756
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12757
    iput v5, v9, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    goto :goto_a

    .line 12760
    :cond_1d
    const/4 v5, 0x0

    const/16 v6, 0x5a

    if-lt v13, v6, :cond_1e

    .line 12763
    invoke-virtual {v9, v7}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v6

    or-int/2addr v0, v6

    .line 12764
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12765
    :cond_1e
    iget-boolean v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    if-nez v6, :cond_1f

    .line 12766
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-ge v6, v13, :cond_20

    .line 12769
    invoke-virtual {v9, v7}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v6

    or-int/2addr v0, v6

    .line 12770
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    goto :goto_9

    .line 12773
    :cond_1f
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-le v6, v13, :cond_20

    .line 12778
    invoke-virtual {v9, v5}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    move-result v6

    or-int/2addr v0, v6

    .line 12779
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12782
    :cond_20
    :goto_9
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    if-eq v6, v13, :cond_21

    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    if-ge v6, v13, :cond_21

    .line 12783
    iget-object v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    sub-int v17, v13, v8

    move-object/from16 v16, v6

    move-wide/from16 v18, v1

    move-wide/from16 v20, v23

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12785
    iget-object v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    iget v8, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    sub-int v17, v13, v8

    move-object/from16 v16, v6

    invoke-virtual/range {v16 .. v21}, Landroid/os/BatteryStats$LevelStepTracker;->addLevelSteps(IJJ)V

    .line 12787
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12788
    iput v13, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12789
    iget v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v6, v9, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12790
    iput v5, v9, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 12793
    :cond_21
    :goto_a
    if-eqz v0, :cond_22

    .line 12794
    move-wide/from16 v7, v23

    move-wide/from16 v5, v25

    invoke-virtual {v9, v7, v8, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .end local v0    # "changed":Z
    .end local v1    # "modeBits":J
    .end local v23    # "elapsedRealtime":J
    .end local v25    # "uptime":J
    .local v5, "uptime":J
    .local v7, "elapsedRealtime":J
    goto :goto_b

    .line 12797
    .end local v5    # "uptime":J
    .end local v7    # "elapsedRealtime":J
    .restart local v23    # "elapsedRealtime":J
    .restart local v25    # "uptime":J
    :cond_22
    move-wide/from16 v7, v23

    move-wide/from16 v5, v25

    .end local v23    # "elapsedRealtime":J
    .end local v25    # "uptime":J
    .restart local v5    # "uptime":J
    .restart local v7    # "elapsedRealtime":J
    :goto_b
    if-nez v27, :cond_24

    const/4 v0, 0x5

    if-eq v10, v0, :cond_23

    const/4 v0, 0x1

    if-ne v10, v0, :cond_24

    .line 12803
    :cond_23
    const/4 v0, 0x0

    iput-boolean v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12806
    :cond_24
    iget v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    const/4 v1, -0x1

    if-ne v0, v1, :cond_25

    .line 12807
    move/from16 v0, p8

    iput v0, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    goto :goto_c

    .line 12809
    :cond_25
    move/from16 v0, p8

    iget v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    invoke-static {v1, v0}, Ljava/lang/Math;->min(II)I

    .line 12811
    :goto_c
    iget v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-static {v1, v0}, Ljava/lang/Math;->max(II)I

    move-result v1

    iput v1, v9, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    .line 12812
    return-void
.end method

.method public setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V
    .locals 0
    .param p1, "cb"    # Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    .line 10293
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCallback:Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;

    .line 10294
    return-void
.end method

.method setChargingLocked(Z)Z
    .locals 3
    .param p1, "charging"    # Z

    .line 12405
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    if-eq v0, p1, :cond_1

    .line 12406
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    .line 12407
    if-eqz p1, :cond_0

    .line 12408
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const/high16 v2, 0x1000000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    goto :goto_0

    .line 12410
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    const v2, -0x1000001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .line 12412
    :goto_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x3

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 12413
    const/4 v0, 0x1

    return v0

    .line 12415
    :cond_1
    const/4 v0, 0x0

    return v0
.end method

.method public setExternalStatsSyncLocked(Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;)V
    .locals 0
    .param p1, "sync"    # Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 10303
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    .line 10304
    return-void
.end method

.method public setNoAutoReset(Z)V
    .locals 0
    .param p1, "enabled"    # Z

    .line 4367
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNoAutoReset:Z

    .line 4368
    return-void
.end method

.method protected setOnBatteryLocked(JJZIII)V
    .locals 25
    .param p1, "mSecRealtime"    # J
    .param p3, "mSecUptime"    # J
    .param p5, "onBattery"    # Z
    .param p6, "oldStatus"    # I
    .param p7, "level"    # I
    .param p8, "chargeUAh"    # I
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v7, p0

    move/from16 v8, p5

    move/from16 v9, p6

    move/from16 v10, p7

    .line 12421
    move/from16 v11, p8

    const/4 v12, 0x0

    .line 12422
    .local v12, "doWrite":Z
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    const/4 v1, 0x2

    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v13

    .line 12423
    .local v13, "m":Landroid/os/Message;
    iput v8, v13, Landroid/os/Message;->arg1:I

    .line 12424
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v13}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 12426
    const-wide/16 v0, 0x3e8

    mul-long v14, p3, v0

    .line 12427
    .local v14, "uptime":J
    mul-long v16, p1, v0

    .line 12428
    .local v16, "realtime":J
    iget v6, v7, Lcom/android/internal/os/BatteryStatsImpl;->mScreenState:I

    .line 12429
    .local v6, "screenState":I
    const/4 v0, 0x1

    if-eqz v8, :cond_a

    .line 12434
    const/4 v1, 0x0

    .line 12435
    .local v1, "reset":Z
    iget-boolean v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mNoAutoReset:Z

    if-nez v2, :cond_5

    const/4 v2, 0x5

    const/16 v3, 0x14

    if-eq v9, v2, :cond_1

    const/16 v2, 0x5a

    if-ge v10, v2, :cond_1

    iget v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    if-ge v2, v3, :cond_0

    const/16 v2, 0x50

    if-ge v10, v2, :cond_1

    .line 12438
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v2

    const/16 v4, 0xc8

    if-lt v2, v4, :cond_4

    iget-object v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    .line 12439
    invoke-virtual {v2}, Landroid/os/Parcel;->dataSize()I

    move-result v2

    sget v4, Lcom/android/internal/os/BatteryStatsImpl;->MAX_HISTORY_BUFFER:I

    if-lt v2, v4, :cond_4

    .line 12440
    :cond_1
    const-string v2, "BatteryStatsImpl"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Resetting battery stats: level="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " status="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " dischargeLevel="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v5, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " lowAmount="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12442
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v5, " highAmount="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12443
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 12440
    invoke-static {v2, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12447
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v2

    if-lt v2, v3, :cond_2

    .line 12448
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 12449
    .local v2, "startTime":J
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    .line 12450
    .local v4, "parcel":Landroid/os/Parcel;
    invoke-virtual {v7, v4, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    .line 12451
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v19

    move/from16 v21, v1

    sub-long v0, v19, v2

    .line 12452
    .end local v1    # "reset":Z
    .local v0, "initialTime":J
    .local v21, "reset":Z
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v5

    move-wide/from16 v22, v2

    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$3;

    .end local v2    # "startTime":J
    .local v22, "startTime":J
    invoke-direct {v2, v7, v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$3;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/os/Parcel;J)V

    invoke-virtual {v5, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .end local v0    # "initialTime":J
    .end local v4    # "parcel":Landroid/os/Parcel;
    .end local v22    # "startTime":J
    goto :goto_0

    .line 12480
    .end local v21    # "reset":Z
    .restart local v1    # "reset":Z
    :cond_2
    move/from16 v21, v1

    .end local v1    # "reset":Z
    .restart local v21    # "reset":Z
    :goto_0
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/internal/os/BatteryStatsImpl$4;

    invoke-direct {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$4;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 12496
    const/4 v0, 0x1

    .line 12497
    .end local v12    # "doWrite":Z
    .local v0, "doWrite":Z
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->resetAllStatsLocked()V

    .line 12498
    if-lez v11, :cond_3

    if-lez v10, :cond_3

    .line 12500
    div-int/lit16 v1, v11, 0x3e8

    int-to-double v1, v1

    int-to-double v3, v10

    const-wide/high16 v19, 0x4059000000000000L    # 100.0

    div-double v3, v3, v19

    div-double/2addr v1, v3

    double-to-int v1, v1

    iput v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 12502
    :cond_3
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStartLevel:I

    .line 12503
    const/4 v1, 0x1

    .line 12504
    .end local v21    # "reset":Z
    .restart local v1    # "reset":Z
    iget-object v2, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v2}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 12506
    move v12, v0

    .end local v0    # "doWrite":Z
    .end local v1    # "reset":Z
    .restart local v12    # "doWrite":Z
    .restart local v21    # "reset":Z
    :cond_4
    move/from16 v21, v1

    goto :goto_1

    .end local v21    # "reset":Z
    .restart local v1    # "reset":Z
    :cond_5
    move/from16 v21, v1

    .end local v1    # "reset":Z
    .restart local v21    # "reset":Z
    :goto_1
    iget-boolean v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCharging:Z

    if-eqz v0, :cond_6

    .line 12507
    const/4 v0, 0x0

    invoke-virtual {v7, v0}, Lcom/android/internal/os/BatteryStatsImpl;->setChargingLocked(Z)Z

    .line 12509
    :cond_6
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    .line 12510
    const/4 v0, 0x1

    iput-boolean v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 12511
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastDischargeStepLevel:I

    .line 12512
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mMinDischargeStepLevel:I

    .line 12513
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    .line 12514
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->clearTime()V

    .line 12515
    iget v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12516
    const/4 v5, 0x0

    iput v5, v7, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 12517
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 12518
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v1, v10

    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12519
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const v2, -0x80001

    and-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12522
    if-eqz v21, :cond_7

    .line 12523
    const/4 v0, 0x1

    iput-boolean v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mRecordingHistory:Z

    .line 12524
    move-object v0, v7

    move-wide/from16 v1, p1

    move-wide/from16 v3, p3

    move v8, v5

    move/from16 v5, v21

    invoke-direct/range {v0 .. v5}, Lcom/android/internal/os/BatteryStatsImpl;->startRecordingHistory(JJZ)V

    goto :goto_2

    .line 12526
    :cond_7
    move v8, v5

    :goto_2
    invoke-virtual/range {p0 .. p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 12527
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12528
    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_8

    .line 12529
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12530
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12531
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_3

    .line 12532
    :cond_8
    invoke-virtual {v7, v6}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenDoze(I)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 12533
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12534
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12535
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    goto :goto_3

    .line 12537
    :cond_9
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOnUnplugLevel:I

    .line 12538
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeUnplugLevel:I

    .line 12539
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffUnplugLevel:I

    .line 12541
    :goto_3
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    .line 12542
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    .line 12543
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    .line 12544
    const/4 v1, 0x1

    move-object v0, v7

    move v2, v6

    move-wide v3, v14

    move v8, v6

    move-wide/from16 v5, v16

    .end local v6    # "screenState":I
    .local v8, "screenState":I
    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 12545
    .end local v21    # "reset":Z
    nop

    .line 12567
    move/from16 v18, v8

    goto :goto_4

    .line 12546
    .end local v8    # "screenState":I
    .restart local v6    # "screenState":I
    :cond_a
    move v5, v6

    const/4 v8, 0x0

    .end local v6    # "screenState":I
    .local v5, "screenState":I
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargingStateLevel:I

    .line 12547
    iput-boolean v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    iput-boolean v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    .line 12548
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 12549
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    int-to-byte v1, v10

    iput-byte v1, v0, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    .line 12550
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryCur:Landroid/os/BatteryStats$HistoryItem;

    iget v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v2, 0x80000

    or-int/2addr v1, v2

    iput v1, v0, Landroid/os/BatteryStats$HistoryItem;->states:I

    .line 12553
    invoke-virtual/range {p0 .. p4}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryRecordLocked(JJ)V

    .line 12554
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    .line 12555
    iget v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    if-ge v10, v0, :cond_b

    .line 12556
    iget v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    iget v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    sub-int/2addr v1, v10

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    add-int/2addr v0, v1

    iput v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    .line 12557
    iget v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    iget v1, v7, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    sub-int/2addr v1, v10

    add-int/2addr v0, v1

    iput v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    .line 12559
    :cond_b
    invoke-virtual {v7, v5, v5}, Lcom/android/internal/os/BatteryStatsImpl;->updateDischargeScreenLevelsLocked(II)V

    .line 12560
    const/4 v1, 0x0

    move-object v0, v7

    move v2, v5

    move-wide v3, v14

    move/from16 v18, v5

    move-wide/from16 v5, v16

    .end local v5    # "screenState":I
    .local v18, "screenState":I
    invoke-virtual/range {v0 .. v6}, Lcom/android/internal/os/BatteryStatsImpl;->updateTimeBasesLocked(ZIJJ)V

    .line 12561
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v0}, Landroid/os/BatteryStats$LevelStepTracker;->init()V

    .line 12562
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastChargeStepLevel:I

    .line 12563
    iput v10, v7, Lcom/android/internal/os/BatteryStatsImpl;->mMaxChargeStepLevel:I

    .line 12564
    iget v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mCurStepMode:I

    iput v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mInitStepMode:I

    .line 12565
    iput v8, v7, Lcom/android/internal/os/BatteryStatsImpl;->mModStepMode:I

    .line 12567
    :goto_4
    if-nez v12, :cond_c

    iget-wide v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    const-wide/32 v2, 0xea60

    add-long/2addr v0, v2

    cmp-long v0, v0, p1

    if-gez v0, :cond_d

    .line 12568
    :cond_c
    iget-object v0, v7, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    if-eqz v0, :cond_d

    .line 12569
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->writeAsyncLocked()V

    .line 12572
    :cond_d
    return-void
.end method

.method public setPowerProfileLocked(Lcom/android/internal/os/PowerProfile;)V
    .locals 6
    .param p1, "profile"    # Lcom/android/internal/os/PowerProfile;

    .line 10271
    iput-object p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    .line 10276
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v0

    .line 10277
    .local v0, "numClusters":I
    new-array v1, v0, [Lcom/android/internal/os/KernelCpuSpeedReader;

    iput-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    .line 10278
    const/4 v1, 0x0

    .line 10279
    .local v1, "firstCpuOfCluster":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_0

    .line 10280
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v3, v2}, Lcom/android/internal/os/PowerProfile;->getNumSpeedStepsInCpuCluster(I)I

    move-result v3

    .line 10281
    .local v3, "numSpeedSteps":I
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    new-instance v5, Lcom/android/internal/os/KernelCpuSpeedReader;

    invoke-direct {v5, v1, v3}, Lcom/android/internal/os/KernelCpuSpeedReader;-><init>(II)V

    aput-object v5, v4, v2

    .line 10283
    iget-object v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v4, v2}, Lcom/android/internal/os/PowerProfile;->getNumCoresInCpuCluster(I)I

    move-result v4

    add-int/2addr v1, v4

    .line 10279
    .end local v3    # "numSpeedSteps":I
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 10286
    .end local v2    # "i":I
    :cond_0
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    const/4 v3, -0x1

    if-ne v2, v3, :cond_1

    .line 10288
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v2}, Lcom/android/internal/os/PowerProfile;->getBatteryCapacity()D

    move-result-wide v2

    double-to-int v2, v2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    .line 10290
    :cond_1
    return-void
.end method

.method public setPretendScreenOff(Z)V
    .locals 1
    .param p1, "pretendScreenOff"    # Z

    .line 4371
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPretendScreenOff:Z

    if-eq v0, p1, :cond_1

    .line 4372
    iput-boolean p1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPretendScreenOff:Z

    .line 4373
    if-eqz p1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x2

    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->noteScreenStateLocked(I)V

    .line 4375
    :cond_1
    return-void
.end method

.method public setRadioScanningTimeoutLocked(J)V
    .locals 1
    .param p1, "timeout"    # J

    .line 10297
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v0, :cond_0

    .line 10298
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setTimeout(J)V

    .line 10300
    :cond_0
    return-void
.end method

.method public setRecordAllHistoryLocked(Z)V
    .locals 21
    .param p1, "enabled"    # Z

    move-object/from16 v8, p0

    .line 4328
    move/from16 v9, p1

    iput-boolean v9, v8, Lcom/android/internal/os/BatteryStatsImpl;->mRecordAllHistory:Z

    .line 4329
    const/4 v10, 0x0

    const/4 v0, 0x1

    if-nez v9, :cond_2

    .line 4331
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/4 v2, 0x5

    invoke-virtual {v1, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    .line 4332
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    const/16 v2, 0xd

    invoke-virtual {v1, v2}, Landroid/os/BatteryStats$HistoryEventTracker;->removeEvents(I)V

    .line 4335
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v11

    .line 4337
    .local v11, "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v11, :cond_1

    .line 4338
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4339
    .local v12, "mSecRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4340
    .local v14, "mSecUptime":J
    invoke-virtual {v11}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v7

    :goto_0
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_1

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object v6, v0

    check-cast v6, Ljava/util/Map$Entry;

    .line 4341
    .local v6, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v6}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v5, v0

    check-cast v5, Landroid/util/SparseIntArray;

    .line 4342
    .local v5, "uids":Landroid/util/SparseIntArray;
    move v0, v10

    .local v0, "j":I
    :goto_1
    move v3, v0

    .end local v0    # "j":I
    .local v3, "j":I
    invoke-virtual {v5}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v3, v0, :cond_0

    .line 4343
    const/16 v16, 0x4001

    .line 4344
    invoke-interface {v6}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Ljava/lang/String;

    invoke-virtual {v5, v3}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v18

    .line 4343
    move-object v0, v8

    move-wide v1, v12

    move/from16 v19, v3

    move-wide v3, v14

    .end local v3    # "j":I
    .local v19, "j":I
    move-object/from16 v20, v5

    move/from16 v5, v16

    .end local v5    # "uids":Landroid/util/SparseIntArray;
    .local v20, "uids":Landroid/util/SparseIntArray;
    move-object/from16 v16, v6

    move-object/from16 v6, v17

    .end local v6    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .local v16, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    move-object/from16 v17, v7

    move/from16 v7, v18

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4342
    add-int/lit8 v0, v19, 0x1

    .end local v19    # "j":I
    .restart local v0    # "j":I
    move-object/from16 v6, v16

    move-object/from16 v7, v17

    move-object/from16 v5, v20

    goto :goto_1

    .line 4346
    .end local v0    # "j":I
    .end local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v20    # "uids":Landroid/util/SparseIntArray;
    :cond_0
    move-object/from16 v17, v7

    goto :goto_0

    .line 4348
    .end local v11    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v12    # "mSecRealtime":J
    .end local v14    # "mSecUptime":J
    :cond_1
    goto/16 :goto_4

    .line 4350
    :cond_2
    iget-object v1, v8, Lcom/android/internal/os/BatteryStatsImpl;->mActiveEvents:Landroid/os/BatteryStats$HistoryEventTracker;

    invoke-virtual {v1, v0}, Landroid/os/BatteryStats$HistoryEventTracker;->getStateForEvent(I)Ljava/util/HashMap;

    move-result-object v11

    .line 4352
    .restart local v11    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    if-eqz v11, :cond_4

    .line 4353
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v12

    .line 4354
    .restart local v12    # "mSecRealtime":J
    iget-object v0, v8, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v14

    .line 4355
    .restart local v14    # "mSecUptime":J
    invoke-virtual {v11}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v7

    :goto_2
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_4

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    move-object v6, v0

    check-cast v6, Ljava/util/Map$Entry;

    .line 4356
    .restart local v6    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    invoke-interface {v6}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    move-object v5, v0

    check-cast v5, Landroid/util/SparseIntArray;

    .line 4357
    .restart local v5    # "uids":Landroid/util/SparseIntArray;
    move v0, v10

    .restart local v0    # "j":I
    :goto_3
    move v3, v0

    .end local v0    # "j":I
    .restart local v3    # "j":I
    invoke-virtual {v5}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-ge v3, v0, :cond_3

    .line 4358
    const v16, 0x8001

    .line 4359
    invoke-interface {v6}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    move-object/from16 v17, v0

    check-cast v17, Ljava/lang/String;

    invoke-virtual {v5, v3}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v18

    .line 4358
    move-object v0, v8

    move-wide v1, v12

    move/from16 v19, v3

    move-wide v3, v14

    .end local v3    # "j":I
    .restart local v19    # "j":I
    move-object/from16 v20, v5

    move/from16 v5, v16

    .end local v5    # "uids":Landroid/util/SparseIntArray;
    .restart local v20    # "uids":Landroid/util/SparseIntArray;
    move-object/from16 v16, v6

    move-object/from16 v6, v17

    .end local v6    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .restart local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    move-object/from16 v17, v7

    move/from16 v7, v18

    invoke-virtual/range {v0 .. v7}, Lcom/android/internal/os/BatteryStatsImpl;->addHistoryEventLocked(JJILjava/lang/String;I)V

    .line 4357
    add-int/lit8 v0, v19, 0x1

    .end local v19    # "j":I
    .restart local v0    # "j":I
    move-object/from16 v6, v16

    move-object/from16 v7, v17

    move-object/from16 v5, v20

    goto :goto_3

    .line 4361
    .end local v0    # "j":I
    .end local v16    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v20    # "uids":Landroid/util/SparseIntArray;
    :cond_3
    move-object/from16 v17, v7

    goto :goto_2

    .line 4364
    .end local v11    # "active":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/util/SparseIntArray;>;"
    .end local v12    # "mSecRealtime":J
    .end local v14    # "mSecUptime":J
    :cond_4
    :goto_4
    return-void
.end method

.method public shutdownLocked()V
    .locals 4

    .line 13329
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v2}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v2

    invoke-direct {p0, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->recordShutdownLocked(JJ)V

    .line 13330
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->writeSyncLocked()V

    .line 13331
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mShuttingDown:Z

    .line 13332
    return-void
.end method

.method public startAddingCpuLocked()Z
    .locals 1

    .line 4727
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mExternalSync:Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->cancelCpuSyncDueToWakelockChange()V

    .line 4728
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    return v0
.end method

.method public startIteratingHistoryLocked()Z
    .locals 7

    .line 10698
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0}, Landroid/os/Parcel;->dataSize()I

    move-result v0

    const/4 v1, 0x0

    if-gtz v0, :cond_0

    .line 10699
    return v1

    .line 10701
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10702
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    .line 10703
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10704
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    new-array v2, v2, [Ljava/lang/String;

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    .line 10705
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    new-array v2, v2, [I

    iput-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    .line 10706
    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    .line 10707
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 10708
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$HistoryTag;

    .line 10709
    .local v3, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    .line 10710
    .local v4, "idx":I
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryStrings:[Ljava/lang/String;

    iget-object v6, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    aput-object v6, v5, v4

    .line 10711
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryUids:[I

    iget v6, v3, Landroid/os/BatteryStats$HistoryTag;->uid:I

    aput v6, v5, v4

    .line 10712
    iget v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    iget-object v6, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v6

    add-int/2addr v6, v0

    add-int/2addr v5, v6

    iput v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadHistoryChars:I

    .line 10713
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v3    # "tag":Landroid/os/BatteryStats$HistoryTag;
    .end local v4    # "idx":I
    goto :goto_0

    .line 10714
    :cond_1
    return v0
.end method

.method public startIteratingOldHistoryLocked()Z
    .locals 2

    .line 10636
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistory:Landroid/os/BatteryStats$HistoryItem;

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryIterator:Landroid/os/BatteryStats$HistoryItem;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 10637
    return v1

    .line 10639
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->setDataPosition(I)V

    .line 10640
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryReadTmp:Landroid/os/BatteryStats$HistoryItem;

    invoke-virtual {v0}, Landroid/os/BatteryStats$HistoryItem;->clear()V

    .line 10641
    iput-boolean v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mReadOverflow:Z

    .line 10642
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mIteratingHistory:Z

    .line 10643
    return v0
.end method

.method stopAllGpsSignalQualityTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 5249
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5250
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x2

    if-ge v2, v3, :cond_2

    .line 5251
    if-ne v2, p1, :cond_0

    .line 5252
    goto :goto_2

    .line 5254
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5255
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 5250
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5258
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method stopAllPhoneSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 5322
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5323
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    sget v3, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    if-ge v2, v3, :cond_2

    .line 5324
    if-ne v2, p1, :cond_0

    .line 5325
    goto :goto_2

    .line 5327
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5328
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 5323
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5331
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method stopAllWifiSignalStrengthTimersLocked(I)V
    .locals 4
    .param p1, "except"    # I

    .line 5989
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v0

    .line 5990
    .local v0, "elapsedRealtime":J
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    const/4 v3, 0x5

    if-ge v2, v3, :cond_2

    .line 5991
    if-ne v2, p1, :cond_0

    .line 5992
    goto :goto_2

    .line 5994
    :cond_0
    :goto_1
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->isRunningLocked()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 5995
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v2

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V

    goto :goto_1

    .line 5990
    :cond_1
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5998
    .end local v2    # "i":I
    :cond_2
    return-void
.end method

.method public systemServicesReady(Landroid/content/Context;)V
    .locals 2
    .param p1, "context"    # Landroid/content/Context;

    .line 13339
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Constants;->startObserving(Landroid/content/ContentResolver;)V

    .line 13340
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->registerUsbStateReceiver(Landroid/content/Context;)V

    .line 13341
    return-void
.end method

.method public trackPerProcStateCpuTimes()Z
    .locals 1

    .line 13335
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPerProcStateCpuTimesAvailable:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public updateBluetoothStateLocked(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V
    .locals 52
    .param p1, "info"    # Landroid/bluetooth/BluetoothActivityEnergyInfo;

    move-object/from16 v0, p0

    .line 11620
    move-object/from16 v1, p1

    if-eqz v1, :cond_12

    iget-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v2, :cond_0

    goto/16 :goto_b

    .line 11624
    :cond_0
    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    .line 11626
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    .line 11627
    .local v3, "elapsedRealtimeMs":J
    nop

    .line 11628
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerRxTimeMillis()J

    move-result-wide v5

    iget-object v7, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v7, v7, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->rxTimeMs:J

    sub-long/2addr v5, v7

    .line 11629
    .local v5, "rxTimeMs":J
    nop

    .line 11630
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerTxTimeMillis()J

    move-result-wide v7

    iget-object v9, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v9, v9, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->txTimeMs:J

    sub-long/2addr v7, v9

    .line 11631
    .local v7, "txTimeMs":J
    nop

    .line 11632
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerIdleTimeMillis()J

    move-result-wide v9

    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-wide v11, v11, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->idleTimeMs:J

    sub-long/2addr v9, v11

    .line 11641
    .local v9, "idleTimeMs":J
    const-wide/16 v11, 0x0

    .line 11643
    .local v11, "totalScanTimeMs":J
    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 11644
    .local v13, "uidCount":I
    move-wide v15, v11

    const/4 v11, 0x0

    .local v11, "i":I
    .local v15, "totalScanTimeMs":J
    :goto_0
    const-wide/16 v17, 0x3e8

    if-ge v11, v13, :cond_2

    .line 11645
    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v11}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11646
    .local v12, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-nez v2, :cond_1

    .line 11647
    goto :goto_1

    .line 11650
    :cond_1
    iget-object v2, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move-wide/from16 v20, v15

    mul-long v14, v3, v17

    .end local v15    # "totalScanTimeMs":J
    .local v20, "totalScanTimeMs":J
    invoke-virtual {v2, v14, v15}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v14

    div-long v14, v14, v17

    add-long v14, v20, v14

    .line 11644
    .end local v12    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v20    # "totalScanTimeMs":J
    .local v14, "totalScanTimeMs":J
    move-wide v15, v14

    .end local v14    # "totalScanTimeMs":J
    .restart local v15    # "totalScanTimeMs":J
    :goto_1
    add-int/lit8 v11, v11, 0x1

    const/4 v2, 0x1

    goto :goto_0

    .line 11654
    .end local v11    # "i":I
    :cond_2
    move-wide/from16 v20, v15

    .end local v15    # "totalScanTimeMs":J
    .restart local v20    # "totalScanTimeMs":J
    cmp-long v2, v20, v5

    if-lez v2, :cond_3

    const/4 v2, 0x1

    goto :goto_2

    :cond_3
    const/4 v2, 0x0

    .line 11655
    .local v2, "normalizeScanRxTime":Z
    :goto_2
    cmp-long v11, v20, v7

    if-lez v11, :cond_4

    const/16 v19, 0x1

    goto :goto_3

    :cond_4
    const/16 v19, 0x0

    :goto_3
    move/from16 v11, v19

    .line 11662
    .local v11, "normalizeScanTxTime":Z
    move-wide v14, v5

    .line 11663
    .local v14, "leftOverRxTimeMs":J
    move-wide/from16 v22, v7

    .line 11665
    .local v22, "leftOverTxTimeMs":J
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_4
    const-wide/16 v24, 0x0

    if-ge v12, v13, :cond_9

    .line 11666
    move/from16 v26, v13

    iget-object v13, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .end local v13    # "uidCount":I
    .local v26, "uidCount":I
    invoke-virtual {v13, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11667
    .local v13, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-wide/from16 v27, v9

    iget-object v9, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    .end local v9    # "idleTimeMs":J
    .local v27, "idleTimeMs":J
    if-nez v9, :cond_5

    .line 11668
    nop

    .line 11665
    move/from16 v35, v2

    move-wide/from16 v36, v3

    goto :goto_5

    .line 11671
    :cond_5
    iget-object v9, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    mul-long v0, v3, v17

    invoke-virtual {v9, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v0

    div-long v0, v0, v17

    .line 11673
    .local v0, "scanTimeSinceMarkMs":J
    cmp-long v9, v0, v24

    if-lez v9, :cond_8

    .line 11675
    iget-object v9, v13, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v9, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->setMark(J)V

    .line 11677
    move-wide v9, v0

    .line 11678
    .local v9, "scanTimeRxSinceMarkMs":J
    move-wide/from16 v24, v0

    .line 11680
    .local v24, "scanTimeTxSinceMarkMs":J
    if-eqz v2, :cond_6

    .line 11684
    mul-long v31, v5, v9

    div-long v9, v31, v20

    .line 11687
    :cond_6
    if-eqz v11, :cond_7

    .line 11691
    mul-long v31, v7, v24

    div-long v24, v31, v20

    .line 11694
    .end local v24    # "scanTimeTxSinceMarkMs":J
    .local v0, "scanTimeTxSinceMarkMs":J
    .local v33, "scanTimeSinceMarkMs":J
    :cond_7
    move-wide/from16 v33, v0

    move-wide/from16 v0, v24

    .line 11695
    move/from16 v35, v2

    invoke-virtual {v13}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v2

    .line 11696
    .local v2, "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .local v35, "normalizeScanRxTime":Z
    move-wide/from16 v36, v3

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    .end local v3    # "elapsedRealtimeMs":J
    .local v36, "elapsedRealtimeMs":J
    invoke-virtual {v3, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11697
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v3

    const/4 v4, 0x0

    aget-object v3, v3, v4

    invoke-virtual {v3, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11699
    sub-long/2addr v14, v9

    .line 11700
    sub-long v22, v22, v0

    .end local v0    # "scanTimeTxSinceMarkMs":J
    .end local v2    # "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v9    # "scanTimeRxSinceMarkMs":J
    .end local v13    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v33    # "scanTimeSinceMarkMs":J
    goto :goto_5

    .line 11665
    .end local v35    # "normalizeScanRxTime":Z
    .end local v36    # "elapsedRealtimeMs":J
    .local v2, "normalizeScanRxTime":Z
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_8
    move/from16 v35, v2

    move-wide/from16 v36, v3

    .end local v2    # "normalizeScanRxTime":Z
    .end local v3    # "elapsedRealtimeMs":J
    .restart local v35    # "normalizeScanRxTime":Z
    .restart local v36    # "elapsedRealtimeMs":J
    :goto_5
    add-int/lit8 v12, v12, 0x1

    move/from16 v13, v26

    move-wide/from16 v9, v27

    move/from16 v2, v35

    move-wide/from16 v3, v36

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    goto :goto_4

    .line 11713
    .end local v12    # "i":I
    .end local v26    # "uidCount":I
    .end local v27    # "idleTimeMs":J
    .end local v35    # "normalizeScanRxTime":Z
    .end local v36    # "elapsedRealtimeMs":J
    .restart local v2    # "normalizeScanRxTime":Z
    .restart local v3    # "elapsedRealtimeMs":J
    .local v9, "idleTimeMs":J
    .local v13, "uidCount":I
    :cond_9
    move/from16 v35, v2

    move-wide/from16 v36, v3

    move-wide/from16 v27, v9

    move/from16 v26, v13

    .end local v2    # "normalizeScanRxTime":Z
    .end local v3    # "elapsedRealtimeMs":J
    .end local v9    # "idleTimeMs":J
    .end local v13    # "uidCount":I
    .restart local v26    # "uidCount":I
    .restart local v27    # "idleTimeMs":J
    .restart local v35    # "normalizeScanRxTime":Z
    .restart local v36    # "elapsedRealtimeMs":J
    const-wide/16 v0, 0x0

    .line 11714
    .local v0, "totalTxBytes":J
    const-wide/16 v2, 0x0

    .line 11716
    .local v2, "totalRxBytes":J
    move-object/from16 v4, p1

    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getUidTraffic()[Landroid/bluetooth/UidTraffic;

    move-result-object v9

    .line 11717
    .local v9, "uidTraffic":[Landroid/bluetooth/UidTraffic;
    if-eqz v9, :cond_a

    array-length v10, v9

    goto :goto_6

    :cond_a
    const/4 v10, 0x0

    .line 11718
    .local v10, "numUids":I
    :goto_6
    move-wide v12, v0

    const/4 v0, 0x0

    .local v0, "i":I
    .local v12, "totalTxBytes":J
    :goto_7
    if-ge v0, v10, :cond_b

    .line 11719
    aget-object v1, v9, v0

    .line 11720
    .local v1, "traffic":Landroid/bluetooth/UidTraffic;
    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v16

    move/from16 v38, v11

    move-object/from16 v11, p0

    iget-object v4, v11, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .end local v11    # "normalizeScanTxTime":Z
    .local v38, "normalizeScanTxTime":Z
    iget-object v4, v4, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    .line 11721
    move-wide/from16 v39, v7

    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v7

    .line 11720
    .end local v7    # "txTimeMs":J
    .local v39, "txTimeMs":J
    invoke-virtual {v4, v7}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v7

    sub-long v7, v16, v7

    .line 11722
    .local v7, "rxBytes":J
    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v16

    iget-object v4, v11, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v4, v4, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    .line 11723
    move-wide/from16 v41, v5

    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v5

    .line 11722
    .end local v5    # "rxTimeMs":J
    .local v41, "rxTimeMs":J
    invoke-virtual {v4, v5}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v4

    sub-long v4, v16, v4

    .line 11726
    .local v4, "txBytes":J
    iget-object v6, v11, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/16 v16, 0x4

    aget-object v6, v6, v16

    invoke-virtual {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11727
    iget-object v6, v11, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/16 v16, 0x5

    aget-object v6, v6, v16

    invoke-virtual {v6, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11730
    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v6

    invoke-virtual {v11, v6}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v6

    invoke-virtual {v11, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v6

    .line 11731
    .local v6, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    const/16 v30, 0x4

    const-wide/16 v33, 0x0

    move-object/from16 v29, v6

    move-wide/from16 v31, v7

    invoke-virtual/range {v29 .. v34}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11732
    const/16 v30, 0x5

    move-wide/from16 v31, v4

    invoke-virtual/range {v29 .. v34}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11735
    add-long/2addr v2, v7

    .line 11736
    add-long/2addr v12, v4

    .line 11718
    .end local v1    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v4    # "txBytes":J
    .end local v6    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v7    # "rxBytes":J
    add-int/lit8 v0, v0, 0x1

    move/from16 v11, v38

    move-wide/from16 v7, v39

    move-wide/from16 v5, v41

    move-object/from16 v4, p1

    goto :goto_7

    .line 11739
    .end local v0    # "i":I
    .end local v38    # "normalizeScanTxTime":Z
    .end local v39    # "txTimeMs":J
    .end local v41    # "rxTimeMs":J
    .restart local v5    # "rxTimeMs":J
    .local v7, "txTimeMs":J
    .restart local v11    # "normalizeScanTxTime":Z
    :cond_b
    move-wide/from16 v41, v5

    move-wide/from16 v39, v7

    move/from16 v38, v11

    move-object/from16 v11, p0

    .end local v5    # "rxTimeMs":J
    .end local v7    # "txTimeMs":J
    .end local v11    # "normalizeScanTxTime":Z
    .restart local v38    # "normalizeScanTxTime":Z
    .restart local v39    # "txTimeMs":J
    .restart local v41    # "rxTimeMs":J
    cmp-long v0, v12, v24

    if-nez v0, :cond_c

    cmp-long v0, v2, v24

    if-eqz v0, :cond_10

    :cond_c
    cmp-long v0, v14, v24

    if-nez v0, :cond_d

    cmp-long v0, v22, v24

    if-eqz v0, :cond_10

    .line 11741
    :cond_d
    const/4 v0, 0x0

    .restart local v0    # "i":I
    :goto_8
    if-ge v0, v10, :cond_10

    .line 11742
    aget-object v1, v9, v0

    .line 11743
    .restart local v1    # "traffic":Landroid/bluetooth/UidTraffic;
    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getUid()I

    move-result v4

    .line 11744
    .local v4, "uid":I
    nop

    .line 11745
    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getRxBytes()J

    move-result-wide v5

    iget-object v7, v11, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    iget-object v7, v7, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidRxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v7, v4}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v7

    sub-long/2addr v5, v7

    .line 11746
    .local v5, "rxBytes":J
    nop

    .line 11747
    invoke-virtual {v1}, Landroid/bluetooth/UidTraffic;->getTxBytes()J

    move-result-wide v7

    move-object/from16 v43, v1

    iget-object v1, v11, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .end local v1    # "traffic":Landroid/bluetooth/UidTraffic;
    .local v43, "traffic":Landroid/bluetooth/UidTraffic;
    iget-object v1, v1, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->uidTxBytes:Landroid/util/SparseLongArray;

    invoke-virtual {v1, v4}, Landroid/util/SparseLongArray;->get(I)J

    move-result-wide v16

    sub-long v7, v7, v16

    .line 11749
    .local v7, "txBytes":J
    invoke-virtual {v11, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v1

    invoke-virtual {v11, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v1

    .line 11750
    .local v1, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    nop

    .line 11751
    move/from16 v44, v4

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateBluetoothControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v4

    .line 11753
    .local v4, "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .local v44, "uid":I
    cmp-long v16, v2, v24

    if-lez v16, :cond_e

    cmp-long v16, v5, v24

    if-lez v16, :cond_e

    .line 11754
    mul-long v16, v14, v5

    move-wide/from16 v45, v5

    div-long v5, v16, v2

    .line 11758
    .local v5, "timeRxMs":J
    .local v45, "rxBytes":J
    move-object/from16 v47, v1

    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    .end local v1    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .local v47, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v1, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11759
    sub-long/2addr v14, v5

    .end local v5    # "timeRxMs":J
    goto :goto_9

    .line 11762
    .end local v45    # "rxBytes":J
    .end local v47    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v1    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .local v5, "rxBytes":J
    :cond_e
    move-object/from16 v47, v1

    move-wide/from16 v45, v5

    .end local v1    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v5    # "rxBytes":J
    .restart local v45    # "rxBytes":J
    .restart local v47    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :goto_9
    cmp-long v1, v12, v24

    if-lez v1, :cond_f

    cmp-long v1, v7, v24

    if-lez v1, :cond_f

    .line 11763
    mul-long v5, v22, v7

    div-long/2addr v5, v12

    .line 11767
    .local v5, "timeTxMs":J
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    const/16 v16, 0x0

    aget-object v1, v1, v16

    invoke-virtual {v1, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11768
    sub-long v22, v22, v5

    .line 11741
    .end local v4    # "counter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v5    # "timeTxMs":J
    .end local v7    # "txBytes":J
    .end local v43    # "traffic":Landroid/bluetooth/UidTraffic;
    .end local v44    # "uid":I
    .end local v45    # "rxBytes":J
    .end local v47    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_f
    add-int/lit8 v0, v0, 0x1

    goto :goto_8

    .line 11773
    .end local v0    # "i":I
    :cond_10
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    move-wide/from16 v5, v41

    invoke-virtual {v0, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11774
    .end local v41    # "rxTimeMs":J
    .local v5, "rxTimeMs":J
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    const/4 v1, 0x0

    aget-object v0, v0, v1

    move-wide/from16 v7, v39

    invoke-virtual {v0, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11775
    .end local v39    # "txTimeMs":J
    .local v7, "txTimeMs":J
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    move-wide/from16 v48, v2

    move-wide/from16 v1, v27

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11778
    .end local v2    # "totalRxBytes":J
    .end local v27    # "idleTimeMs":J
    .local v1, "idleTimeMs":J
    .local v48, "totalRxBytes":J
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string v3, "bluetooth.controller.voltage"

    invoke-virtual {v0, v3}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v3

    const-wide v16, 0x408f400000000000L    # 1000.0

    div-double v3, v3, v16

    .line 11780
    .local v3, "opVolt":D
    const-wide/16 v16, 0x0

    cmpl-double v0, v3, v16

    if-eqz v0, :cond_11

    .line 11782
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v0

    .line 11783
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothActivityEnergyInfo;->getControllerEnergyUsed()J

    move-result-wide v16

    move-wide/from16 v50, v1

    iget-object v1, v11, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    .end local v1    # "idleTimeMs":J
    .local v50, "idleTimeMs":J
    iget-wide v1, v1, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->energy:J

    sub-long v1, v16, v1

    long-to-double v1, v1

    div-double/2addr v1, v3

    double-to-long v1, v1

    .line 11782
    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_a

    .line 11786
    .end local v50    # "idleTimeMs":J
    .restart local v1    # "idleTimeMs":J
    :cond_11
    move-wide/from16 v50, v1

    .end local v1    # "idleTimeMs":J
    .restart local v50    # "idleTimeMs":J
    :goto_a
    iget-object v0, v11, Lcom/android/internal/os/BatteryStatsImpl;->mLastBluetoothActivityInfo:Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$BluetoothActivityInfoCache;->set(Landroid/bluetooth/BluetoothActivityEnergyInfo;)V

    .line 11787
    return-void

    .line 11621
    .end local v3    # "opVolt":D
    .end local v5    # "rxTimeMs":J
    .end local v7    # "txTimeMs":J
    .end local v9    # "uidTraffic":[Landroid/bluetooth/UidTraffic;
    .end local v10    # "numUids":I
    .end local v12    # "totalTxBytes":J
    .end local v14    # "leftOverRxTimeMs":J
    .end local v20    # "totalScanTimeMs":J
    .end local v22    # "leftOverTxTimeMs":J
    .end local v26    # "uidCount":I
    .end local v35    # "normalizeScanRxTime":Z
    .end local v36    # "elapsedRealtimeMs":J
    .end local v38    # "normalizeScanTxTime":Z
    .end local v48    # "totalRxBytes":J
    .end local v50    # "idleTimeMs":J
    :cond_12
    :goto_b
    move-object v11, v0

    return-void
.end method

.method public updateClusterSpeedTimes(Landroid/util/SparseLongArray;Z)V
    .locals 21
    .param p1, "updatedUids"    # Landroid/util/SparseLongArray;
    .param p2, "onBattery"    # Z
    .annotation build Lcom/android/internal/annotations/VisibleForTesting;
    .end annotation

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    .line 12073
    const-wide/16 v2, 0x0

    .line 12075
    .local v2, "totalCpuClustersTimeMs":J
    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v4, v4

    new-array v4, v4, [[J

    .line 12076
    .local v4, "clusterSpeedTimesMs":[[J
    move-wide v6, v2

    const/4 v2, 0x0

    .local v2, "cluster":I
    .local v6, "totalCpuClustersTimeMs":J
    :goto_0
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v3, v3

    if-ge v2, v3, :cond_1

    .line 12077
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    aget-object v3, v3, v2

    invoke-virtual {v3}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    move-result-object v3

    aput-object v3, v4, v2

    .line 12078
    aget-object v3, v4, v2

    if-eqz v3, :cond_0

    .line 12079
    aget-object v3, v4, v2

    array-length v3, v3

    add-int/lit8 v3, v3, -0x1

    .local v3, "speed":I
    :goto_1
    if-ltz v3, :cond_0

    .line 12080
    aget-object v8, v4, v2

    aget-wide v8, v8, v3

    add-long/2addr v6, v8

    .line 12079
    add-int/lit8 v3, v3, -0x1

    goto :goto_1

    .line 12076
    .end local v3    # "speed":I
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12084
    .end local v2    # "cluster":I
    :cond_1
    const-wide/16 v2, 0x0

    cmp-long v2, v6, v2

    if-eqz v2, :cond_9

    .line 12088
    invoke-virtual/range {p1 .. p1}, Landroid/util/SparseLongArray;->size()I

    move-result v2

    .line 12089
    .local v2, "updatedUidsCount":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_2
    if-ge v3, v2, :cond_9

    .line 12090
    invoke-virtual {v1, v3}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v8

    invoke-virtual {v0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    .line 12091
    .local v8, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v1, v3}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v9

    .line 12093
    .local v9, "appCpuTimeUs":J
    iget-object v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v11}, Lcom/android/internal/os/PowerProfile;->getNumCpuClusters()I

    move-result v11

    .line 12094
    .local v11, "numClusters":I
    iget-object v12, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v12, :cond_2

    iget-object v12, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v12, v12

    if-eq v12, v11, :cond_3

    .line 12096
    :cond_2
    new-array v12, v11, [[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iput-object v12, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    .line 12099
    :cond_3
    const/4 v12, 0x0

    .local v12, "cluster":I
    :goto_3
    array-length v13, v4

    if-ge v12, v13, :cond_8

    .line 12100
    aget-object v13, v4, v12

    array-length v13, v13

    .line 12101
    .local v13, "speedsInCluster":I
    iget-object v14, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v14, v14, v12

    if-eqz v14, :cond_4

    iget-object v14, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v14, v14, v12

    array-length v14, v14

    if-eq v13, v14, :cond_5

    .line 12103
    :cond_4
    iget-object v14, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    new-array v15, v13, [Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aput-object v15, v14, v12

    .line 12107
    :cond_5
    iget-object v14, v8, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v14, v14, v12

    .line 12108
    .local v14, "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    const/4 v15, 0x0

    .local v15, "speed":I
    :goto_4
    if-ge v15, v13, :cond_7

    .line 12109
    aget-object v16, v14, v15

    if-nez v16, :cond_6

    .line 12110
    new-instance v5, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v5, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    aput-object v5, v14, v15

    .line 12112
    :cond_6
    aget-object v1, v14, v15

    aget-object v5, v4, v12

    aget-wide v17, v5, v15

    mul-long v17, v17, v9

    move-object/from16 v19, v4

    div-long v4, v17, v6

    .end local v4    # "clusterSpeedTimesMs":[[J
    .local v19, "clusterSpeedTimesMs":[[J
    move/from16 v0, p2

    invoke-virtual {v1, v4, v5, v0}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(JZ)V

    .line 12108
    add-int/lit8 v15, v15, 0x1

    move-object/from16 v4, v19

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    goto :goto_4

    .line 12099
    .end local v13    # "speedsInCluster":I
    .end local v14    # "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    .end local v15    # "speed":I
    .end local v19    # "clusterSpeedTimesMs":[[J
    .restart local v4    # "clusterSpeedTimesMs":[[J
    :cond_7
    move/from16 v0, p2

    move-object/from16 v19, v4

    .end local v4    # "clusterSpeedTimesMs":[[J
    .restart local v19    # "clusterSpeedTimesMs":[[J
    add-int/lit8 v12, v12, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    goto :goto_3

    .line 12089
    .end local v8    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v9    # "appCpuTimeUs":J
    .end local v11    # "numClusters":I
    .end local v12    # "cluster":I
    .end local v19    # "clusterSpeedTimesMs":[[J
    .restart local v4    # "clusterSpeedTimesMs":[[J
    :cond_8
    move/from16 v0, p2

    move-object/from16 v19, v4

    .end local v4    # "clusterSpeedTimesMs":[[J
    .restart local v19    # "clusterSpeedTimesMs":[[J
    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    goto :goto_2

    .line 12119
    .end local v2    # "updatedUidsCount":I
    .end local v3    # "i":I
    .end local v19    # "clusterSpeedTimesMs":[[J
    .restart local v4    # "clusterSpeedTimesMs":[[J
    :cond_9
    move/from16 v0, p2

    move-object/from16 v19, v4

    .end local v4    # "clusterSpeedTimesMs":[[J
    .restart local v19    # "clusterSpeedTimesMs":[[J
    return-void
.end method

.method public updateCpuTimeLocked(ZZ)V
    .locals 5
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .line 11969
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    if-nez v0, :cond_0

    .line 11970
    return-void

    .line 11977
    :cond_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    if-nez v0, :cond_1

    .line 11978
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    invoke-virtual {v0, v1}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->readFreqs(Lcom/android/internal/os/PowerProfile;)[J

    move-result-object v0

    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mCpuFreqs:[J

    .line 11984
    :cond_1
    const/4 v0, 0x0

    .line 11985
    .local v0, "partialTimersToConsider":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;>;"
    if-eqz p2, :cond_3

    .line 11986
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    move-object v0, v1

    .line 11987
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 11988
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPartialTimers:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    .line 11994
    .local v2, "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    iget-boolean v3, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mInList:Z

    if-eqz v3, :cond_2

    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    if-eqz v3, :cond_2

    iget-object v3, v2, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->mUid:Lcom/android/internal/os/BatteryStatsImpl$Uid;

    iget v3, v3, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUid:I

    const/16 v4, 0x3e8

    if-eq v3, v4, :cond_2

    .line 11995
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11987
    .end local v2    # "timer":Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
    :cond_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 11999
    .end local v1    # "i":I
    :cond_3
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->markPartialTimersAsEligible()V

    .line 12003
    const/4 v1, 0x0

    if-nez p1, :cond_6

    .line 12004
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuTimeReader:Lcom/android/internal/os/KernelUidCpuTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelUidCpuTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12005
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12006
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 12007
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz v2, :cond_4

    .line 12008
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuActiveTimeReader:Lcom/android/internal/os/KernelUidCpuActiveTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelUidCpuActiveTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12009
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuClusterTimeReader:Lcom/android/internal/os/KernelUidCpuClusterTimeReader;

    invoke-virtual {v2, v1}, Lcom/android/internal/os/KernelUidCpuClusterTimeReader;->readDelta(Lcom/android/internal/os/KernelUidCpuTimeReaderBase$Callback;)V

    .line 12010
    iget v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v1, v1, 0x2

    iput v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 12012
    :cond_4
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    array-length v1, v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "cluster":I
    :goto_1
    if-ltz v1, :cond_5

    .line 12013
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelCpuSpeedReaders:[Lcom/android/internal/os/KernelCpuSpeedReader;

    aget-object v2, v2, v1

    invoke-virtual {v2}, Lcom/android/internal/os/KernelCpuSpeedReader;->readDelta()[J

    .line 12012
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 12015
    .end local v1    # "cluster":I
    :cond_5
    return-void

    .line 12018
    :cond_6
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mUserInfoProvider:Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$UserInfoProvider;->refreshUserIds()V

    .line 12019
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelUidCpuFreqTimeReader:Lcom/android/internal/os/KernelUidCpuFreqTimeReader;

    invoke-virtual {v2}, Lcom/android/internal/os/KernelUidCpuFreqTimeReader;->perClusterTimesAvailable()Z

    move-result v2

    if-eqz v2, :cond_7

    .line 12020
    goto :goto_2

    :cond_7
    new-instance v1, Landroid/util/SparseLongArray;

    invoke-direct {v1}, Landroid/util/SparseLongArray;-><init>()V

    .line 12021
    .local v1, "updatedUids":Landroid/util/SparseLongArray;
    :goto_2
    invoke-virtual {p0, v0, v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuTimesLocked(Ljava/util/ArrayList;Landroid/util/SparseLongArray;Z)V

    .line 12024
    if-eqz v1, :cond_8

    .line 12025
    invoke-virtual {p0, v1, p1}, Lcom/android/internal/os/BatteryStatsImpl;->updateClusterSpeedTimes(Landroid/util/SparseLongArray;Z)V

    .line 12027
    :cond_8
    invoke-virtual {p0, v0, p1, p2}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuFreqTimesLocked(Ljava/util/ArrayList;ZZ)V

    .line 12028
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 12029
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v2, v2, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_ACTIVE_CLUSTER_TIME:Z

    if-eqz v2, :cond_9

    .line 12030
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuActiveTimesLocked(Z)V

    .line 12031
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->readKernelUidCpuClusterTimesLocked(Z)V

    .line 12032
    iget v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    add-int/lit8 v2, v2, 0x2

    iput v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNumAllUidCpuTimeReads:I

    .line 12034
    :cond_9
    return-void
.end method

.method public updateDailyDeadlineLocked()V
    .locals 6

    .line 10308
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    .line 10309
    .local v0, "currentTime":J
    invoke-static {}, Ljava/util/Calendar;->getInstance()Ljava/util/Calendar;

    move-result-object v2

    .line 10310
    .local v2, "calDeadline":Ljava/util/Calendar;
    invoke-virtual {v2, v0, v1}, Ljava/util/Calendar;->setTimeInMillis(J)V

    .line 10313
    const/4 v3, 0x6

    invoke-virtual {v2, v3}, Ljava/util/Calendar;->get(I)I

    move-result v4

    const/4 v5, 0x1

    add-int/2addr v4, v5

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10314
    const/4 v3, 0x0

    const/16 v4, 0xe

    invoke-virtual {v2, v4, v3}, Ljava/util/Calendar;->set(II)V

    .line 10315
    const/16 v4, 0xd

    invoke-virtual {v2, v4, v3}, Ljava/util/Calendar;->set(II)V

    .line 10316
    const/16 v4, 0xc

    invoke-virtual {v2, v4, v3}, Ljava/util/Calendar;->set(II)V

    .line 10317
    const/16 v3, 0xb

    invoke-virtual {v2, v3, v5}, Ljava/util/Calendar;->set(II)V

    .line 10318
    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v4

    iput-wide v4, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    .line 10319
    const/4 v4, 0x3

    invoke-virtual {v2, v3, v4}, Ljava/util/Calendar;->set(II)V

    .line 10320
    invoke-virtual {v2}, Ljava/util/Calendar;->getTimeInMillis()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    .line 10321
    return-void
.end method

.method updateDischargeScreenLevelsLocked(II)V
    .locals 0
    .param p1, "oldState"    # I
    .param p2, "newState"    # I

    .line 11013
    invoke-direct {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->updateOldDischargeScreenLevelLocked(I)V

    .line 11014
    invoke-direct {p0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->updateNewDischargeScreenLevelLocked(I)V

    .line 11015
    return-void
.end method

.method public updateKernelMemoryBandwidthLocked()V
    .locals 8

    .line 11928
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->updateStats()V

    .line 11929
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryBandwidthStats:Lcom/android/internal/os/KernelMemoryBandwidthStats;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelMemoryBandwidthStats;->getBandwidthEntries()Landroid/util/LongSparseLongArray;

    move-result-object v0

    .line 11930
    .local v0, "bandwidthEntries":Landroid/util/LongSparseLongArray;
    invoke-virtual {v0}, Landroid/util/LongSparseLongArray;->size()I

    move-result v1

    .line 11932
    .local v1, "bandwidthEntryCount":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_1

    .line 11934
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v4

    invoke-virtual {v3, v4, v5}, Landroid/util/LongSparseArray;->indexOfKey(J)I

    move-result v3

    move v4, v3

    .local v4, "index":I
    if-ltz v3, :cond_0

    .line 11935
    iget-object v3, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v4}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_1

    .line 11937
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_0
    new-instance v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v3, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    .line 11938
    .restart local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->keyAt(I)J

    move-result-wide v6

    invoke-virtual {v5, v6, v7, v3}, Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V

    .line 11940
    :goto_1
    invoke-virtual {v0, v2}, Landroid/util/LongSparseLongArray;->valueAt(I)J

    move-result-wide v5

    const/4 v7, 0x1

    invoke-virtual {v3, v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11932
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 11949
    .end local v2    # "i":I
    .end local v4    # "index":I
    :cond_1
    return-void
.end method

.method public updateKernelWakelocksLocked()V
    .locals 9

    .line 11848
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockReader:Lcom/android/internal/os/KernelWakelockReader;

    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpWakelockStats:Lcom/android/internal/os/KernelWakelockStats;

    invoke-virtual {v0, v1}, Lcom/android/internal/os/KernelWakelockReader;->readKernelWakelockStats(Lcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;

    move-result-object v0

    .line 11850
    .local v0, "wakelockStats":Lcom/android/internal/os/KernelWakelockStats;
    if-nez v0, :cond_0

    .line 11852
    const-string v1, "BatteryStatsImpl"

    const-string v2, "Couldn\'t get kernel wake lock stats"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11853
    return-void

    .line 11875
    :cond_0
    :try_start_0
    invoke-virtual {v0}, Lcom/android/internal/os/KernelWakelockStats;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_2

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 11876
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 11877
    .local v3, "name":Ljava/lang/String;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/KernelWakelockStats$Entry;

    .line 11879
    .local v4, "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    iget-object v5, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v5, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 11880
    .local v5, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-nez v5, :cond_1

    .line 11881
    new-instance v6, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    iget-object v7, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-direct {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V

    move-object v5, v6

    .line 11882
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v6, v3, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11885
    :cond_1
    iget-wide v6, v4, Lcom/android/internal/os/KernelWakelockStats$Entry;->mTotalTime:J

    iget v8, v4, Lcom/android/internal/os/KernelWakelockStats$Entry;->mCount:I

    invoke-virtual {v5, v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11886
    iget v6, v4, Lcom/android/internal/os/KernelWakelockStats$Entry;->mVersion:I

    invoke-virtual {v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->setUpdateVersion(I)V
    :try_end_0
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_0

    .line 11887
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/KernelWakelockStats$Entry;>;"
    .end local v3    # "name":Ljava/lang/String;
    .end local v4    # "kws":Lcom/android/internal/os/KernelWakelockStats$Entry;
    .end local v5    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    goto :goto_0

    .line 11891
    :cond_2
    nop

    .line 11894
    const/4 v1, 0x0

    .line 11897
    .local v1, "numWakelocksSetStale":I
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_4

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 11898
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 11899
    .local v4, "st":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->getUpdateVersion()I

    move-result v5

    iget v6, v0, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    if-eq v5, v6, :cond_3

    .line 11900
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->endSample()V

    .line 11901
    add-int/lit8 v1, v1, 0x1

    .line 11903
    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v4    # "st":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :cond_3
    goto :goto_1

    .line 11906
    :cond_4
    invoke-virtual {v0}, Lcom/android/internal/os/KernelWakelockStats;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_5

    .line 11907
    const-string v2, "BatteryStatsImpl"

    const-string v3, "All kernel wakelocks had time of zero"

    invoke-static {v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 11910
    :cond_5
    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    move-result v2

    if-ne v1, v2, :cond_6

    .line 11911
    const-string v2, "BatteryStatsImpl"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "All kernel wakelocks were set stale. new version="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v4, v0, Lcom/android/internal/os/KernelWakelockStats;->kernelWakelockVersion:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 11914
    :cond_6
    return-void

    .line 11888
    .end local v1    # "numWakelocksSetStale":I
    :catch_0
    move-exception v1

    .line 11889
    .local v1, "e":Ljava/lang/NullPointerException;
    const-string v2, "BatteryStatsImpl"

    const-string v3, "Couldn\'t update kernel wake lock stats"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11890
    return-void
.end method

.method public updateMobileRadioState(Landroid/telephony/ModemActivityInfo;)V
    .locals 47
    .param p1, "activityInfo"    # Landroid/telephony/ModemActivityInfo;

    move-object/from16 v1, p0

    .line 11385
    invoke-direct/range {p0 .. p1}, Lcom/android/internal/os/BatteryStatsImpl;->getDeltaModemActivityInfo(Landroid/telephony/ModemActivityInfo;)Landroid/telephony/ModemActivityInfo;

    move-result-object v2

    .line 11388
    .local v2, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    invoke-direct {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->addModemTxPowerToHistory(Landroid/telephony/ModemActivityInfo;)V

    .line 11391
    const/4 v3, 0x0

    .line 11392
    .local v3, "delta":Landroid/net/NetworkStats;
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemNetworkLock:Ljava/lang/Object;

    monitor-enter v4

    .line 11393
    :try_start_0
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemIfaces:[Ljava/lang/String;

    invoke-direct {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl;->readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_7

    .line 11394
    .local v0, "latestStats":Landroid/net/NetworkStats;
    if-eqz v0, :cond_0

    .line 11395
    :try_start_1
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11396
    invoke-interface {v6}, Landroid/util/Pools$Pool;->acquire()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/net/NetworkStats;

    .line 11395
    const/4 v7, 0x0

    invoke-static {v0, v5, v7, v7, v6}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;Landroid/net/NetworkStats;Landroid/net/NetworkStats$NonMonotonicObserver;Ljava/lang/Object;Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v5

    move-object v3, v5

    .line 11397
    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;

    invoke-interface {v5, v6}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11398
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastModemNetworkStats:Landroid/net/NetworkStats;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11398
    .end local v0    # "latestStats":Landroid/net/NetworkStats;
    goto :goto_0

    .line 11400
    :catchall_0
    move-exception v0

    move-object/from16 v44, v2

    goto/16 :goto_f

    :cond_0
    :goto_0
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_7

    .line 11402
    monitor-enter p0

    .line 11403
    :try_start_3
    iget-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_5

    if-nez v0, :cond_2

    .line 11404
    if-eqz v3, :cond_1

    .line 11405
    :try_start_4
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v3}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    goto :goto_1

    .line 11543
    :catchall_1
    move-exception v0

    move-object/from16 v44, v2

    goto/16 :goto_e

    .line 11407
    :cond_1
    :goto_1
    monitor-exit p0

    return-void

    .line 11410
    :cond_2
    const/4 v0, 0x5

    const/4 v4, 0x0

    const/4 v5, 0x1

    if-eqz v2, :cond_5

    .line 11411
    iput-boolean v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    .line 11412
    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v6

    .line 11413
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v7

    int-to-long v7, v7

    .line 11412
    invoke-virtual {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11414
    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getSleepTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v6

    .line 11415
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v7

    int-to-long v7, v7

    .line 11414
    invoke-virtual {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11416
    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v6}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v6

    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getRxTimeMillis()I

    move-result v7

    int-to-long v7, v7

    invoke-virtual {v6, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11417
    move v6, v4

    .line 11417
    .local v6, "lvl":I
    :goto_2
    if-ge v6, v0, :cond_3

    .line 11418
    iget-object v7, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v7

    aget-object v7, v7, v6

    .line 11419
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    move-result-object v8

    aget v8, v8, v6

    int-to-long v8, v8

    invoke-virtual {v7, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11417
    add-int/lit8 v6, v6, 0x1

    goto :goto_2

    .line 11423
    .end local v6    # "lvl":I
    :cond_3
    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v7, "modem.controller.voltage"

    invoke-virtual {v6, v7}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v6

    const-wide v8, 0x408f400000000000L    # 1000.0

    div-double/2addr v6, v8

    .line 11425
    .local v6, "opVolt":D
    const-wide/16 v8, 0x0

    cmpl-double v8, v6, v8

    if-eqz v8, :cond_5

    .line 11426
    nop

    .line 11427
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getSleepTimeMillis()I

    move-result v8

    int-to-double v8, v8

    iget-object v10, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v11, "modem.controller.sleep"

    .line 11428
    invoke-virtual {v10, v11}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v10

    mul-double/2addr v8, v10

    .line 11429
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getIdleTimeMillis()I

    move-result v10

    int-to-double v10, v10

    iget-object v12, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v13, "modem.controller.idle"

    .line 11430
    invoke-virtual {v12, v13}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v12

    mul-double/2addr v10, v12

    add-double/2addr v8, v10

    .line 11431
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getRxTimeMillis()I

    move-result v10

    int-to-double v10, v10

    iget-object v12, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v13, "modem.controller.rx"

    .line 11432
    invoke-virtual {v12, v13}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v12

    mul-double/2addr v10, v12

    add-double/2addr v8, v10

    .line 11433
    .local v8, "energyUsed":D
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    move-result-object v10

    .line 11434
    .local v10, "txTimeMs":[I
    move-wide v11, v8

    move v8, v4

    .line 11434
    .local v8, "i":I
    .local v11, "energyUsed":D
    :goto_3
    array-length v9, v10

    sget v13, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    invoke-static {v9, v13}, Ljava/lang/Math;->min(II)I

    move-result v9

    if-ge v8, v9, :cond_4

    .line 11436
    aget v9, v10, v8

    int-to-double v13, v9

    iget-object v9, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v15, "modem.controller.tx"

    invoke-virtual {v9, v15, v8}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;I)D

    move-result-wide v15

    mul-double/2addr v13, v15

    add-double/2addr v11, v13

    .line 11435
    add-int/lit8 v8, v8, 0x1

    goto :goto_3

    .line 11441
    .end local v8    # "i":I
    :cond_4
    iget-object v8, v1, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v8

    double-to-long v13, v11

    invoke-virtual {v8, v13, v14}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 11445
    .end local v6    # "opVolt":D
    .end local v10    # "txTimeMs":[I
    .end local v11    # "energyUsed":D
    :cond_5
    :try_start_5
    iget-object v6, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v6}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v6

    .line 11446
    .local v6, "elapsedRealtimeMs":J
    iget-object v8, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    const-wide/16 v9, 0x3e8

    mul-long/2addr v9, v6

    invoke-virtual {v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v8

    .line 11448
    .local v8, "radioTime":J
    iget-object v10, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v10, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    .line 11450
    const-wide/16 v10, 0x0

    .line 11451
    .local v10, "totalRxPackets":J
    const-wide/16 v12, 0x0

    .line 11452
    .local v12, "totalTxPackets":J
    if-eqz v3, :cond_10

    .line 11453
    new-instance v14, Landroid/net/NetworkStats$Entry;

    invoke-direct {v14}, Landroid/net/NetworkStats$Entry;-><init>()V

    .line 11454
    .local v14, "entry":Landroid/net/NetworkStats$Entry;
    invoke-virtual {v3}, Landroid/net/NetworkStats;->size()I

    move-result v15
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    .line 11455
    .local v15, "size":I
    move-wide/from16 v16, v12

    move-wide v11, v10

    move v10, v4

    .line 11455
    .end local v12    # "totalTxPackets":J
    .local v10, "i":I
    .local v11, "totalRxPackets":J
    .local v16, "totalTxPackets":J
    :goto_4
    const-wide/16 v18, 0x0

    if-ge v10, v15, :cond_8

    .line 11456
    :try_start_6
    invoke-virtual {v3, v10, v14}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v13

    move-object v14, v13

    .line 11457
    move-wide/from16 v20, v6

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    .line 11457
    .end local v6    # "elapsedRealtimeMs":J
    .local v20, "elapsedRealtimeMs":J
    cmp-long v5, v5, v18

    if-nez v5, :cond_6

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    cmp-long v5, v5, v18

    if-nez v5, :cond_6

    .line 11458
    nop

    .line 11455
    const/4 v5, 0x1

    goto/16 :goto_5

    .line 11467
    :cond_6
    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    add-long/2addr v11, v5

    .line 11468
    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long v16, v16, v5

    .line 11470
    iget v5, v14, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v5}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v5

    invoke-virtual {v1, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v22

    .line 11471
    .local v22, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    const/16 v23, 0x0

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->rxBytes:J
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-wide/from16 v24, v5

    move-wide/from16 v26, v0

    invoke-virtual/range {v22 .. v27}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11473
    const/16 v29, 0x1

    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v28, v22

    move-wide/from16 v30, v0

    move-wide/from16 v32, v5

    invoke-virtual/range {v28 .. v33}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11475
    iget v0, v14, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v0, :cond_7

    .line 11476
    const/16 v29, 0x6

    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->rxBytes:J

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-object/from16 v28, v22

    move-wide/from16 v30, v0

    move-wide/from16 v32, v5

    invoke-virtual/range {v28 .. v33}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11478
    const/16 v31, 0x7

    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v30, v22

    move-wide/from16 v32, v0

    move-wide/from16 v34, v5

    invoke-virtual/range {v30 .. v35}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 11482
    :cond_7
    move-object/from16 v1, p0

    :try_start_8
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v0, v0, v4

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->rxBytes:J

    invoke-virtual {v0, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11484
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v5, 0x1

    aget-object v0, v0, v5

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->txBytes:J

    invoke-virtual {v0, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11486
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v0, v0, v4

    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v0, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11488
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v5, 0x1

    aget-object v0, v0, v5

    iget-wide v6, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v0, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 11455
    .end local v22    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :goto_5
    add-int/lit8 v10, v10, 0x1

    move-wide/from16 v6, v20

    const/4 v0, 0x5

    goto/16 :goto_4

    .line 11543
    .end local v8    # "radioTime":J
    .end local v10    # "i":I
    .end local v11    # "totalRxPackets":J
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v15    # "size":I
    .end local v16    # "totalTxPackets":J
    .end local v20    # "elapsedRealtimeMs":J
    :catchall_2
    move-exception v0

    move-object/from16 v44, v2

    .line 11543
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .local v44, "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_6
    move-object/from16 v1, p0

    goto/16 :goto_e

    .line 11493
    .end local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v6    # "elapsedRealtimeMs":J
    .restart local v8    # "radioTime":J
    .restart local v11    # "totalRxPackets":J
    .restart local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .restart local v15    # "size":I
    .restart local v16    # "totalTxPackets":J
    :cond_8
    move-wide/from16 v20, v6

    .line 11493
    .end local v6    # "elapsedRealtimeMs":J
    .restart local v20    # "elapsedRealtimeMs":J
    add-long v5, v11, v16

    .line 11494
    .local v5, "totalPackets":J
    cmp-long v0, v5, v18

    if-lez v0, :cond_e

    .line 11495
    move v0, v4

    .line 11495
    .local v0, "i":I
    :goto_7
    if-ge v0, v15, :cond_d

    .line 11496
    :try_start_9
    invoke-virtual {v3, v0, v14}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v7

    move-object v14, v7

    .line 11497
    move-wide/from16 v36, v5

    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_5

    .line 11497
    .end local v5    # "totalPackets":J
    .local v36, "totalPackets":J
    cmp-long v4, v4, v18

    if-nez v4, :cond_9

    :try_start_a
    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->txPackets:J
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    cmp-long v4, v4, v18

    if-nez v4, :cond_9

    .line 11498
    nop

    .line 11495
    move/from16 v38, v0

    move-object/from16 v44, v2

    move-wide/from16 v5, v36

    goto/16 :goto_a

    .line 11501
    :cond_9
    :try_start_b
    iget v4, v14, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v4}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v4

    invoke-virtual {v1, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    .line 11504
    .local v4, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v5, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    move/from16 v38, v0

    :try_start_c
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    .line 11504
    .end local v0    # "i":I
    .local v38, "i":I
    add-long/2addr v5, v0

    .line 11505
    .local v5, "appPackets":J
    mul-long v0, v8, v5

    div-long v0, v0, v36

    .line 11506
    .local v0, "appRadioTime":J
    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteMobileRadioActiveTimeLocked(J)V

    .line 11510
    sub-long/2addr v8, v0

    .line 11511
    sub-long v22, v36, v5

    .line 11513
    .end local v36    # "totalPackets":J
    .local v22, "totalPackets":J
    if-eqz v2, :cond_c

    .line 11514
    nop

    .line 11515
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateModemControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v7
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_4

    .line 11516
    .local v7, "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    cmp-long v10, v11, v18

    if-lez v10, :cond_b

    move-wide/from16 v39, v0

    :try_start_d
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    .line 11516
    .end local v0    # "appRadioTime":J
    .local v39, "appRadioTime":J
    cmp-long v0, v0, v18

    if-lez v0, :cond_a

    .line 11517
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getRxTimeMillis()I

    move-result v10

    move-object/from16 v41, v4

    move-wide/from16 v42, v5

    int-to-long v4, v10

    .line 11517
    .end local v4    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v5    # "appPackets":J
    .local v41, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .local v42, "appPackets":J
    mul-long/2addr v0, v4

    div-long/2addr v0, v11

    .line 11519
    .local v0, "rxMs":J
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    .line 11519
    .end local v0    # "rxMs":J
    goto :goto_8

    .line 11522
    .end local v41    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v42    # "appPackets":J
    .restart local v4    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v5    # "appPackets":J
    :cond_a
    move-object/from16 v41, v4

    move-wide/from16 v42, v5

    .line 11522
    .end local v4    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v5    # "appPackets":J
    .restart local v41    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v42    # "appPackets":J
    goto :goto_8

    .line 11522
    .end local v39    # "appRadioTime":J
    .end local v41    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v42    # "appPackets":J
    .local v0, "appRadioTime":J
    .restart local v4    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v5    # "appPackets":J
    :cond_b
    move-wide/from16 v39, v0

    move-object/from16 v41, v4

    move-wide/from16 v42, v5

    .line 11522
    .end local v0    # "appRadioTime":J
    .end local v4    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v5    # "appPackets":J
    .restart local v39    # "appRadioTime":J
    .restart local v41    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .restart local v42    # "appPackets":J
    :goto_8
    cmp-long v0, v16, v18

    if-lez v0, :cond_c

    :try_start_e
    iget-wide v0, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    cmp-long v0, v0, v18

    if-lez v0, :cond_c

    .line 11523
    const/4 v0, 0x0

    .line 11523
    .local v0, "lvl":I
    :goto_9
    const/4 v1, 0x5

    if-ge v0, v1, :cond_c

    .line 11524
    iget-wide v4, v14, Landroid/net/NetworkStats$Entry;->txPackets:J

    .line 11525
    invoke-virtual {v2}, Landroid/telephony/ModemActivityInfo;->getTxTimeMillis()[I

    move-result-object v6

    aget v6, v6, v0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    move-object/from16 v44, v2

    int-to-long v1, v6

    .line 11525
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    mul-long/2addr v4, v1

    .line 11526
    .local v4, "txMs":J
    :try_start_f
    div-long v1, v4, v16

    .line 11527
    .end local v4    # "txMs":J
    .local v1, "txMs":J
    invoke-virtual {v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v4

    aget-object v4, v4, v0

    invoke-virtual {v4, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_3

    .line 11523
    .end local v1    # "txMs":J
    add-int/lit8 v0, v0, 0x1

    move-object/from16 v2, v44

    goto :goto_9

    .line 11543
    .end local v0    # "lvl":I
    .end local v7    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    .end local v8    # "radioTime":J
    .end local v11    # "totalRxPackets":J
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v15    # "size":I
    .end local v16    # "totalTxPackets":J
    .end local v20    # "elapsedRealtimeMs":J
    .end local v22    # "totalPackets":J
    .end local v38    # "i":I
    .end local v39    # "appRadioTime":J
    .end local v41    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v42    # "appPackets":J
    :catchall_3
    move-exception v0

    goto/16 :goto_6

    .line 11495
    .end local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v8    # "radioTime":J
    .restart local v11    # "totalRxPackets":J
    .restart local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .restart local v15    # "size":I
    .restart local v16    # "totalTxPackets":J
    .restart local v20    # "elapsedRealtimeMs":J
    .restart local v22    # "totalPackets":J
    .restart local v38    # "i":I
    :cond_c
    move-object/from16 v44, v2

    .line 11495
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    move-wide/from16 v5, v22

    .line 11495
    .end local v22    # "totalPackets":J
    .local v5, "totalPackets":J
    :goto_a
    add-int/lit8 v0, v38, 0x1

    .line 11495
    .end local v38    # "i":I
    .local v0, "i":I
    move-object/from16 v2, v44

    move-object/from16 v1, p0

    const/4 v4, 0x0

    goto/16 :goto_7

    .line 11543
    .end local v0    # "i":I
    .end local v5    # "totalPackets":J
    .end local v8    # "radioTime":J
    .end local v11    # "totalRxPackets":J
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v15    # "size":I
    .end local v16    # "totalTxPackets":J
    .end local v20    # "elapsedRealtimeMs":J
    .end local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_4
    move-exception v0

    move-object/from16 v44, v2

    move-object/from16 v1, p0

    goto :goto_e

    .line 11534
    .restart local v5    # "totalPackets":J
    .restart local v8    # "radioTime":J
    .restart local v11    # "totalRxPackets":J
    .restart local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .restart local v15    # "size":I
    .restart local v16    # "totalTxPackets":J
    .restart local v20    # "elapsedRealtimeMs":J
    :cond_d
    move-object/from16 v44, v2

    move-wide/from16 v36, v5

    .line 11534
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .end local v5    # "totalPackets":J
    .restart local v36    # "totalPackets":J
    .restart local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    goto :goto_b

    .line 11534
    .end local v36    # "totalPackets":J
    .end local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v5    # "totalPackets":J
    :cond_e
    move-object/from16 v44, v2

    .line 11534
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_b
    cmp-long v0, v8, v18

    if-lez v0, :cond_f

    .line 11536
    move-object/from16 v1, p0

    :try_start_10
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v0, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11537
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-wide/from16 v45, v5

    const-wide/16 v4, 0x1

    .line 11537
    .end local v5    # "totalPackets":J
    .local v45, "totalPackets":J
    invoke-virtual {v0, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    goto :goto_c

    .line 11540
    .end local v45    # "totalPackets":J
    .restart local v5    # "totalPackets":J
    :cond_f
    move-wide/from16 v45, v5

    move-object/from16 v1, p0

    .line 11540
    .end local v5    # "totalPackets":J
    .restart local v45    # "totalPackets":J
    :goto_c
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v3}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11541
    const/4 v3, 0x0

    .line 11541
    .end local v8    # "radioTime":J
    .end local v11    # "totalRxPackets":J
    .end local v14    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v15    # "size":I
    .end local v16    # "totalTxPackets":J
    .end local v20    # "elapsedRealtimeMs":J
    .end local v45    # "totalPackets":J
    goto :goto_d

    .line 11543
    .end local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :cond_10
    move-object/from16 v44, v2

    .line 11543
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_d
    monitor-exit p0

    .line 11544
    return-void

    .line 11543
    .end local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_5
    move-exception v0

    move-object/from16 v44, v2

    .line 11543
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_e
    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_6

    throw v0

    :catchall_6
    move-exception v0

    goto :goto_e

    .line 11400
    .end local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :catchall_7
    move-exception v0

    move-object/from16 v44, v2

    .line 11400
    .end local v2    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    .restart local v44    # "deltaInfo":Landroid/telephony/ModemActivityInfo;
    :goto_f
    :try_start_11
    monitor-exit v4
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_8

    throw v0

    :catchall_8
    move-exception v0

    goto :goto_f
.end method

.method public updateProcStateCpuTimes(ZZ)V
    .locals 10
    .param p1, "onBattery"    # Z
    .param p2, "onBatteryScreenOff"    # Z

    .line 403
    monitor-enter p0

    .line 404
    :try_start_0
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mConstants:Lcom/android/internal/os/BatteryStatsImpl$Constants;

    iget-boolean v0, v0, Lcom/android/internal/os/BatteryStatsImpl$Constants;->TRACK_CPU_TIMES_BY_PROC_STATE:Z

    if-nez v0, :cond_0

    .line 405
    monitor-exit p0

    return-void

    .line 407
    :cond_0
    invoke-direct {p0}, Lcom/android/internal/os/BatteryStatsImpl;->initKernelSingleUidTimeReaderLocked()Z

    move-result v0

    if-nez v0, :cond_1

    .line 408
    monitor-exit p0

    return-void

    .line 412
    :cond_1
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v0}, Lcom/android/internal/os/KernelSingleUidTimeReader;->hasStaleData()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 413
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->clear()V

    .line 414
    monitor-exit p0

    return-void

    .line 417
    :cond_2
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v0

    if-nez v0, :cond_3

    .line 418
    monitor-exit p0

    return-void

    .line 420
    :cond_3
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v0}, Landroid/util/SparseIntArray;->clone()Landroid/util/SparseIntArray;

    move-result-object v0

    .line 421
    .local v0, "uidStates":Landroid/util/SparseIntArray;
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingUids:Landroid/util/SparseIntArray;

    invoke-virtual {v1}, Landroid/util/SparseIntArray;->clear()V

    .line 422
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 423
    invoke-virtual {v0}, Landroid/util/SparseIntArray;->size()I

    move-result v1

    add-int/lit8 v1, v1, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_9

    .line 424
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v2

    .line 425
    .local v2, "uid":I
    invoke-virtual {v0, v1}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v3

    .line 428
    .local v3, "procState":I
    monitor-enter p0

    .line 432
    :try_start_1
    invoke-virtual {p0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getAvailableUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v4

    .line 433
    .local v4, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    if-nez v4, :cond_4

    .line 434
    monitor-exit p0

    goto :goto_4

    .line 436
    :cond_4
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    if-nez v5, :cond_5

    .line 437
    const/4 v5, 0x0

    .local v5, "isolatedUids":[I
    goto :goto_2

    .line 439
    .end local v5    # "isolatedUids":[I
    :cond_5
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    invoke-virtual {v5}, Landroid/util/IntArray;->toArray()[I

    move-result-object v5

    .line 440
    .restart local v5    # "isolatedUids":[I
    array-length v6, v5

    add-int/lit8 v6, v6, -0x1

    .local v6, "j":I
    :goto_1
    if-ltz v6, :cond_6

    .line 441
    iget-object v7, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mChildUids:Landroid/util/IntArray;

    invoke-virtual {v7, v6}, Landroid/util/IntArray;->get(I)I

    move-result v7

    aput v7, v5, v6

    .line 440
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 444
    .end local v6    # "j":I
    :cond_6
    :goto_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 445
    iget-object v6, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    invoke-virtual {v6, v2}, Lcom/android/internal/os/KernelSingleUidTimeReader;->readDeltaMs(I)[J

    move-result-object v6

    .line 446
    .local v6, "cpuTimesMs":[J
    if-eqz v5, :cond_7

    .line 447
    array-length v7, v5

    add-int/lit8 v7, v7, -0x1

    .local v7, "j":I
    :goto_3
    if-ltz v7, :cond_7

    .line 448
    iget-object v8, p0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelSingleUidTimeReader:Lcom/android/internal/os/KernelSingleUidTimeReader;

    aget v9, v5, v7

    .line 449
    invoke-virtual {v8, v9}, Lcom/android/internal/os/KernelSingleUidTimeReader;->readDeltaMs(I)[J

    move-result-object v8

    .line 448
    invoke-virtual {p0, v6, v8}, Lcom/android/internal/os/BatteryStatsImpl;->addCpuTimes([J[J)[J

    move-result-object v6

    .line 447
    add-int/lit8 v7, v7, -0x1

    goto :goto_3

    .line 452
    .end local v7    # "j":I
    :cond_7
    if-eqz p1, :cond_8

    if-eqz v6, :cond_8

    .line 453
    monitor-enter p0

    .line 454
    :try_start_2
    invoke-static {v4, v3, v6, p1}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$300(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 455
    invoke-static {v4, v3, v6, p2}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$400(Lcom/android/internal/os/BatteryStatsImpl$Uid;I[JZ)V

    .line 456
    monitor-exit p0

    goto :goto_4

    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v7

    .line 423
    .end local v2    # "uid":I
    .end local v3    # "procState":I
    .end local v4    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v5    # "isolatedUids":[I
    .end local v6    # "cpuTimesMs":[J
    :cond_8
    :goto_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 444
    .restart local v2    # "uid":I
    .restart local v3    # "procState":I
    :catchall_1
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v4

    .line 459
    .end local v1    # "i":I
    .end local v2    # "uid":I
    .end local v3    # "procState":I
    :cond_9
    return-void

    .line 422
    .end local v0    # "uidStates":Landroid/util/SparseIntArray;
    :catchall_2
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0
.end method

.method public updateRpmStatsLocked()V
    .locals 18

    .line 11795
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    if-nez v1, :cond_0

    return-void

    .line 11796
    :cond_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v1

    .line 11797
    .local v1, "now":J
    iget-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    sub-long v3, v1, v3

    const-wide/16 v5, 0x3e8

    cmp-long v3, v3, v5

    if-ltz v3, :cond_1

    .line 11798
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    iget-object v4, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    invoke-interface {v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;->fillLowPowerStats(Lcom/android/internal/os/RpmStats;)V

    .line 11799
    iput-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastRpmStatsUpdateTimeMs:J

    .line 11803
    :cond_1
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iget-object v3, v3, Lcom/android/internal/os/RpmStats;->mPlatformLowPowerStats:Ljava/util/Map;

    invoke-interface {v3}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    .line 11806
    .local v4, "pstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;>;"
    invoke-interface {v4}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    .line 11807
    .local v7, "pName":Ljava/lang/String;
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-wide v8, v8, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mTimeMs:J

    mul-long/2addr v8, v5

    .line 11808
    .local v8, "pTimeUs":J
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget v10, v10, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mCount:I

    .line 11809
    .local v10, "pCount":I
    invoke-virtual {v0, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v11

    invoke-virtual {v11, v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11816
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;

    iget-object v11, v11, Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;->mVoters:Ljava/util/Map;

    invoke-interface {v11}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v11

    invoke-interface {v11}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v11

    :goto_1
    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z

    move-result v12

    if-eqz v12, :cond_2

    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Ljava/util/Map$Entry;

    .line 11817
    .local v12, "voter":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v13, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v14, "."

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v12}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Ljava/lang/String;

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    .line 11818
    .local v13, "vName":Ljava/lang/String;
    invoke-interface {v12}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget-wide v14, v14, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    mul-long/2addr v14, v5

    .line 11819
    .local v14, "vTimeUs":J
    invoke-interface {v12}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v16

    move-object/from16 v5, v16

    check-cast v5, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v5, v5, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    .line 11820
    .local v5, "vCount":I
    invoke-virtual {v0, v13}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v6

    invoke-virtual {v6, v14, v15, v5}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11824
    .end local v5    # "vCount":I
    .end local v12    # "voter":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    .end local v13    # "vName":Ljava/lang/String;
    .end local v14    # "vTimeUs":J
    nop

    .line 11816
    const-wide/16 v5, 0x3e8

    goto :goto_1

    .line 11825
    .end local v4    # "pstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStatePlatformSleepState;>;"
    .end local v7    # "pName":Ljava/lang/String;
    .end local v8    # "pTimeUs":J
    .end local v10    # "pCount":I
    :cond_2
    nop

    .line 11803
    const-wide/16 v5, 0x3e8

    goto/16 :goto_0

    .line 11828
    :cond_3
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mTmpRpmStats:Lcom/android/internal/os/RpmStats;

    iget-object v3, v3, Lcom/android/internal/os/RpmStats;->mSubsystemLowPowerStats:Ljava/util/Map;

    invoke-interface {v3}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_5

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/Map$Entry;

    .line 11830
    .local v4, "subsys":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateSubsystem;>;"
    invoke-interface {v4}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 11832
    .local v5, "subsysName":Ljava/lang/String;
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;

    iget-object v6, v6, Lcom/android/internal/os/RpmStats$PowerStateSubsystem;->mStates:Ljava/util/Map;

    invoke-interface {v6}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v6

    invoke-interface {v6}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :goto_3
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_4

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/util/Map$Entry;

    .line 11833
    .local v7, "sstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v9, "."

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-interface {v7}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 11834
    .local v8, "name":Ljava/lang/String;
    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget-wide v9, v9, Lcom/android/internal/os/RpmStats$PowerStateElement;->mTimeMs:J

    const-wide/16 v11, 0x3e8

    mul-long/2addr v9, v11

    .line 11835
    .local v9, "timeUs":J
    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/internal/os/RpmStats$PowerStateElement;

    iget v13, v13, Lcom/android/internal/os/RpmStats$PowerStateElement;->mCount:I

    .line 11836
    .local v13, "count":I
    invoke-virtual {v0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getRpmTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    move-result-object v14

    invoke-virtual {v14, v9, v10, v13}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V

    .line 11840
    .end local v7    # "sstate":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateElement;>;"
    .end local v8    # "name":Ljava/lang/String;
    .end local v9    # "timeUs":J
    .end local v13    # "count":I
    goto :goto_3

    .line 11841
    .end local v4    # "subsys":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/RpmStats$PowerStateSubsystem;>;"
    .end local v5    # "subsysName":Ljava/lang/String;
    :cond_4
    const-wide/16 v11, 0x3e8

    goto :goto_2

    .line 11842
    :cond_5
    return-void
.end method

.method public updateTimeBasesLocked(ZIJJ)V
    .locals 18
    .param p1, "unplugged"    # Z
    .param p2, "screenState"    # I
    .param p3, "uptime"    # J
    .param p5, "realtime"    # J
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    move-object/from16 v0, p0

    move/from16 v7, p1

    move-wide/from16 v8, p3

    .line 3998
    move-wide/from16 v10, p5

    move/from16 v12, p2

    invoke-virtual {v0, v12}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn(I)Z

    move-result v1

    const/4 v13, 0x1

    xor-int/2addr v1, v13

    move v14, v1

    .line 3999
    .local v14, "screenOff":Z
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v1

    const/4 v15, 0x0

    if-eq v7, v1, :cond_0

    move v1, v13

    goto :goto_0

    :cond_0
    move v1, v15

    :goto_0
    move/from16 v16, v1

    .line 4000
    .local v16, "updateOnBatteryTimeBase":Z
    if-eqz v7, :cond_1

    if-eqz v14, :cond_1

    move v1, v13

    goto :goto_1

    :cond_1
    move v1, v15

    :goto_1
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 4001
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z

    move-result v2

    if-eq v1, v2, :cond_2

    move v1, v13

    goto :goto_2

    :cond_2
    move v1, v15

    :goto_2
    move/from16 v17, v1

    .line 4003
    .local v17, "updateOnBatteryScreenOffTimeBase":Z
    if-nez v17, :cond_3

    if-eqz v16, :cond_8

    .line 4004
    :cond_3
    if-eqz v17, :cond_4

    .line 4005
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateKernelWakelocksLocked()V

    .line 4006
    invoke-direct/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateBatteryPropertiesLocked()V

    .line 4011
    :cond_4
    if-eqz v16, :cond_5

    .line 4012
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->updateRpmStatsLocked()V

    .line 4020
    :cond_5
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move v2, v7

    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    .line 4021
    if-eqz v16, :cond_6

    .line 4022
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v13

    .local v1, "i":I
    :goto_3
    if-ltz v1, :cond_6

    .line 4023
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->updateOnBatteryBgTimeBase(JJ)Z

    .line 4022
    add-int/lit8 v1, v1, -0x1

    goto :goto_3

    .line 4026
    .end local v1    # "i":I
    :cond_6
    if-eqz v17, :cond_8

    .line 4027
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    if-eqz v7, :cond_7

    if-eqz v14, :cond_7

    move v2, v13

    goto :goto_4

    :cond_7
    move v2, v15

    :goto_4
    move-wide v3, v8

    move-wide v5, v10

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->setRunning(ZJJ)Z

    .line 4028
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v1

    sub-int/2addr v1, v13

    .restart local v1    # "i":I
    :goto_5
    if-ltz v1, :cond_8

    .line 4029
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    invoke-virtual {v2, v8, v9, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->updateOnBatteryScreenOffBgTimeBase(JJ)Z

    .line 4028
    add-int/lit8 v1, v1, -0x1

    goto :goto_5

    .line 4033
    .end local v1    # "i":I
    :cond_8
    return-void
.end method

.method public updateWifiState(Landroid/net/wifi/WifiActivityEnergyInfo;)V
    .locals 50
    .param p1, "info"    # Landroid/net/wifi/WifiActivityEnergyInfo;

    move-object/from16 v1, p0

    .line 11102
    const/4 v2, 0x0

    .line 11103
    .local v2, "delta":Landroid/net/NetworkStats;
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiNetworkLock:Ljava/lang/Object;

    monitor-enter v3

    .line 11104
    :try_start_0
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiIfaces:[Ljava/lang/String;

    invoke-direct {v1, v0}, Lcom/android/internal/os/BatteryStatsImpl;->readNetworkStatsLocked([Ljava/lang/String;)Landroid/net/NetworkStats;

    move-result-object v0

    .line 11105
    .local v0, "latestStats":Landroid/net/NetworkStats;
    if-eqz v0, :cond_0

    .line 11106
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    .line 11107
    invoke-interface {v5}, Landroid/util/Pools$Pool;->acquire()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/net/NetworkStats;

    .line 11106
    const/4 v6, 0x0

    invoke-static {v0, v4, v6, v6, v5}, Landroid/net/NetworkStats;->subtract(Landroid/net/NetworkStats;Landroid/net/NetworkStats;Landroid/net/NetworkStats$NonMonotonicObserver;Ljava/lang/Object;Landroid/net/NetworkStats;)Landroid/net/NetworkStats;

    move-result-object v4

    move-object v2, v4

    .line 11108
    iget-object v4, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    iget-object v5, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    invoke-interface {v4, v5}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11109
    iput-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mLastWifiNetworkStats:Landroid/net/NetworkStats;

    .line 11111
    .end local v0    # "latestStats":Landroid/net/NetworkStats;
    :cond_0
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 11113
    monitor-enter p0

    .line 11114
    :try_start_1
    iget-boolean v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryInternal:Z

    if-nez v0, :cond_2

    .line 11115
    if-eqz v2, :cond_1

    .line 11116
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v0, v2}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z

    .line 11118
    :cond_1
    monitor-exit p0

    return-void

    .line 11121
    :cond_2
    iget-object v0, v1, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v0}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v3

    .line 11122
    .local v3, "elapsedRealtimeMs":J
    new-instance v0, Landroid/util/SparseLongArray;

    invoke-direct {v0}, Landroid/util/SparseLongArray;-><init>()V

    .line 11123
    .local v0, "rxPackets":Landroid/util/SparseLongArray;
    new-instance v5, Landroid/util/SparseLongArray;

    invoke-direct {v5}, Landroid/util/SparseLongArray;-><init>()V

    .line 11124
    .local v5, "txPackets":Landroid/util/SparseLongArray;
    const-wide/16 v6, 0x0

    .line 11125
    .local v6, "totalTxPackets":J
    const-wide/16 v8, 0x0

    .line 11126
    .local v8, "totalRxPackets":J
    if-eqz v2, :cond_9

    .line 11127
    new-instance v13, Landroid/net/NetworkStats$Entry;

    invoke-direct {v13}, Landroid/net/NetworkStats$Entry;-><init>()V

    .line 11128
    .local v13, "entry":Landroid/net/NetworkStats$Entry;
    invoke-virtual {v2}, Landroid/net/NetworkStats;->size()I

    move-result v14

    .line 11129
    .local v14, "size":I
    move-wide v15, v8

    move-wide v7, v6

    const/4 v6, 0x0

    .line 11129
    .end local v8    # "totalRxPackets":J
    .local v6, "i":I
    .local v7, "totalTxPackets":J
    .local v15, "totalRxPackets":J
    :goto_0
    if-ge v6, v14, :cond_8

    .line 11130
    invoke-virtual {v2, v6, v13}, Landroid/net/NetworkStats;->getValues(ILandroid/net/NetworkStats$Entry;)Landroid/net/NetworkStats$Entry;

    move-result-object v9

    move-object v13, v9

    .line 11138
    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    const-wide/16 v17, 0x0

    cmp-long v9, v10, v17

    if-nez v9, :cond_3

    iget-wide v9, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    cmp-long v9, v9, v17

    if-nez v9, :cond_3

    .line 11140
    nop

    .line 11129
    move-wide/from16 v25, v3

    goto/16 :goto_2

    .line 11143
    :cond_3
    iget v9, v13, Landroid/net/NetworkStats$Entry;->uid:I

    invoke-virtual {v1, v9}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v9

    invoke-virtual {v1, v9}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v9

    .line 11144
    .local v9, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    const-wide/16 v17, 0x0

    cmp-long v10, v10, v17

    if-eqz v10, :cond_5

    .line 11145
    const/16 v20, 0x2

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    move-wide/from16 v25, v3

    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    .line 11145
    .end local v3    # "elapsedRealtimeMs":J
    .local v25, "elapsedRealtimeMs":J
    move-object/from16 v19, v9

    move-wide/from16 v21, v10

    move-wide/from16 v23, v3

    invoke-virtual/range {v19 .. v24}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11147
    iget v3, v13, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v3, :cond_4

    .line 11148
    const/16 v20, 0x8

    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    move-object/from16 v19, v9

    move-wide/from16 v21, v3

    move-wide/from16 v23, v10

    invoke-virtual/range {v19 .. v24}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11151
    :cond_4
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x2

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxBytes:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11153
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11156
    invoke-virtual {v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v3

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    invoke-virtual {v0, v3, v10, v11}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 11160
    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->rxPackets:J

    add-long/2addr v15, v3

    goto :goto_1

    .line 11163
    .end local v25    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_5
    move-wide/from16 v25, v3

    .line 11163
    .end local v3    # "elapsedRealtimeMs":J
    .restart local v25    # "elapsedRealtimeMs":J
    :goto_1
    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    const-wide/16 v10, 0x0

    cmp-long v3, v3, v10

    if-eqz v3, :cond_7

    .line 11164
    const/16 v20, 0x3

    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v19, v9

    move-wide/from16 v21, v3

    move-wide/from16 v23, v10

    invoke-virtual/range {v19 .. v24}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11166
    iget v3, v13, Landroid/net/NetworkStats$Entry;->set:I

    if-nez v3, :cond_6

    .line 11167
    const/16 v20, 0x9

    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    move-object/from16 v19, v9

    move-wide/from16 v21, v3

    move-wide/from16 v23, v10

    invoke-virtual/range {v19 .. v24}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteNetworkActivityLocked(IJJ)V

    .line 11170
    :cond_6
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    const/4 v4, 0x3

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txBytes:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11172
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v4

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11175
    invoke-virtual {v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getUid()I

    move-result v3

    iget-wide v10, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    invoke-virtual {v5, v3, v10, v11}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 11179
    iget-wide v3, v13, Landroid/net/NetworkStats$Entry;->txPackets:J

    add-long/2addr v7, v3

    .line 11129
    .end local v9    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    :cond_7
    :goto_2
    add-int/lit8 v6, v6, 0x1

    move-wide/from16 v3, v25

    goto/16 :goto_0

    .line 11182
    .end local v6    # "i":I
    .end local v25    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    :cond_8
    move-wide/from16 v25, v3

    .line 11182
    .end local v3    # "elapsedRealtimeMs":J
    .restart local v25    # "elapsedRealtimeMs":J
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkStatsPool:Landroid/util/Pools$Pool;

    invoke-interface {v3, v2}, Landroid/util/Pools$Pool;->release(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 11183
    const/4 v2, 0x0

    .line 11186
    .end local v13    # "entry":Landroid/net/NetworkStats$Entry;
    .end local v14    # "size":I
    move-wide v6, v7

    goto :goto_3

    .line 11186
    .end local v7    # "totalTxPackets":J
    .end local v15    # "totalRxPackets":J
    .end local v25    # "elapsedRealtimeMs":J
    .restart local v3    # "elapsedRealtimeMs":J
    .local v6, "totalTxPackets":J
    .restart local v8    # "totalRxPackets":J
    :cond_9
    move-wide/from16 v25, v3

    move-wide v15, v8

    .line 11186
    .end local v3    # "elapsedRealtimeMs":J
    .end local v8    # "totalRxPackets":J
    .restart local v15    # "totalRxPackets":J
    .restart local v25    # "elapsedRealtimeMs":J
    :goto_3
    if-eqz p1, :cond_12

    .line 11187
    const/4 v3, 0x1

    :try_start_2
    iput-boolean v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    .line 11190
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerTxTimeMillis()J

    move-result-wide v8

    .line 11191
    .local v8, "txTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerRxTimeMillis()J

    move-result-wide v10

    .line 11192
    .local v10, "rxTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerScanTimeMillis()J

    move-result-wide v13

    .line 11193
    .local v13, "scanTimeMs":J
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerIdleTimeMillis()J

    move-result-wide v19

    .line 11194
    .local v19, "idleTimeMs":J
    add-long v21, v8, v10

    add-long v21, v21, v19

    .line 11196
    .local v21, "totalTimeMs":J
    move-wide/from16 v23, v10

    .line 11197
    .local v23, "leftOverRxTimeMs":J
    move-wide/from16 v27, v8

    .line 11208
    .local v27, "leftOverTxTimeMs":J
    const-wide/16 v29, 0x0

    .line 11209
    .local v29, "totalWifiLockTimeMs":J
    const-wide/16 v31, 0x0

    .line 11213
    .local v31, "totalScanTimeMs":J
    iget-object v3, v1, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 11214
    .local v3, "uidStatsSize":I
    move-wide/from16 v33, v29

    const/16 v29, 0x0

    .line 11214
    .local v29, "i":I
    .local v33, "totalWifiLockTimeMs":J
    :goto_4
    move/from16 v35, v29

    .line 11214
    .end local v29    # "i":I
    .local v35, "i":I
    const-wide/16 v29, 0x3e8

    move/from16 v12, v35

    if-ge v12, v3, :cond_a

    .line 11215
    .end local v35    # "i":I
    .local v12, "i":I
    move-object/from16 v36, v2

    :try_start_3
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    .line 11215
    .end local v2    # "delta":Landroid/net/NetworkStats;
    .local v36, "delta":Landroid/net/NetworkStats;
    invoke-virtual {v2, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11218
    .local v2, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-wide/from16 v37, v13

    iget-object v13, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    .line 11218
    .end local v13    # "scanTimeMs":J
    .local v37, "scanTimeMs":J
    move-wide/from16 v39, v15

    mul-long v14, v25, v29

    .line 11218
    .end local v15    # "totalRxPackets":J
    .local v39, "totalRxPackets":J
    invoke-virtual {v13, v14, v15}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v13

    div-long v13, v13, v29

    add-long v31, v31, v13

    .line 11222
    iget-object v13, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    mul-long v14, v25, v29

    invoke-virtual {v13, v14, v15}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v13

    div-long v13, v13, v29

    add-long v33, v33, v13

    .line 11214
    .end local v2    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v29, v12, 0x1

    .line 11214
    .end local v12    # "i":I
    .restart local v29    # "i":I
    move-object/from16 v2, v36

    move-wide/from16 v13, v37

    move-wide/from16 v15, v39

    goto :goto_4

    .line 11238
    .end local v29    # "i":I
    .end local v36    # "delta":Landroid/net/NetworkStats;
    .end local v37    # "scanTimeMs":J
    .end local v39    # "totalRxPackets":J
    .local v2, "delta":Landroid/net/NetworkStats;
    .restart local v13    # "scanTimeMs":J
    .restart local v15    # "totalRxPackets":J
    :cond_a
    move-object/from16 v36, v2

    move-wide/from16 v37, v13

    move-wide/from16 v39, v15

    .line 11238
    .end local v2    # "delta":Landroid/net/NetworkStats;
    .end local v13    # "scanTimeMs":J
    .end local v15    # "totalRxPackets":J
    .restart local v36    # "delta":Landroid/net/NetworkStats;
    .restart local v37    # "scanTimeMs":J
    .restart local v39    # "totalRxPackets":J
    const/4 v2, 0x0

    .line 11238
    .local v2, "i":I
    :goto_5
    if-ge v2, v3, :cond_f

    .line 11239
    iget-object v12, v1, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v12, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 11241
    .local v12, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v13, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    mul-long v14, v25, v29

    invoke-virtual {v13, v14, v15}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v13

    div-long v13, v13, v29

    .line 11243
    .local v13, "scanTimeSinceMarkMs":J
    const-wide/16 v15, 0x0

    cmp-long v35, v13, v15

    if-lez v35, :cond_d

    .line 11245
    iget-object v15, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    move/from16 v41, v3

    move-wide/from16 v3, v25

    invoke-virtual {v15, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->setMark(J)V

    .line 11247
    .end local v25    # "elapsedRealtimeMs":J
    .local v3, "elapsedRealtimeMs":J
    .local v41, "uidStatsSize":I
    move-wide v15, v13

    .line 11248
    .local v15, "scanRxTimeSinceMarkMs":J
    move-wide/from16 v25, v13

    .line 11257
    .local v25, "scanTxTimeSinceMarkMs":J
    cmp-long v35, v31, v10

    if-lez v35, :cond_b

    .line 11258
    mul-long v42, v10, v15

    div-long v42, v42, v31

    move-wide/from16 v15, v42

    .line 11261
    .end local v15    # "scanRxTimeSinceMarkMs":J
    .local v10, "scanRxTimeSinceMarkMs":J
    .local v44, "rxTimeMs":J
    :cond_b
    move-wide/from16 v44, v10

    move-wide v10, v15

    cmp-long v15, v31, v8

    if-lez v15, :cond_c

    .line 11262
    mul-long v15, v8, v25

    div-long v15, v15, v31

    move-wide/from16 v25, v15

    .line 11272
    .end local v25    # "scanTxTimeSinceMarkMs":J
    .local v8, "scanTxTimeSinceMarkMs":J
    .local v46, "txTimeMs":J
    :cond_c
    move-wide/from16 v46, v8

    move-wide/from16 v8, v25

    .line 11273
    invoke-virtual {v12}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v15

    .line 11274
    .local v15, "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    move-wide/from16 v48, v13

    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v13

    .line 11274
    .end local v13    # "scanTimeSinceMarkMs":J
    .local v48, "scanTimeSinceMarkMs":J
    invoke-virtual {v13, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11275
    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v13

    const/4 v14, 0x0

    aget-object v13, v13, v14

    invoke-virtual {v13, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11277
    sub-long v23, v23, v10

    .line 11278
    sub-long v27, v27, v8

    .line 11278
    .end local v8    # "scanTxTimeSinceMarkMs":J
    .end local v10    # "scanRxTimeSinceMarkMs":J
    .end local v15    # "activityCounter":Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;
    goto :goto_6

    .line 11283
    .end local v41    # "uidStatsSize":I
    .end local v44    # "rxTimeMs":J
    .end local v46    # "txTimeMs":J
    .end local v48    # "scanTimeSinceMarkMs":J
    .local v3, "uidStatsSize":I
    .local v8, "txTimeMs":J
    .local v10, "rxTimeMs":J
    .restart local v13    # "scanTimeSinceMarkMs":J
    .local v25, "elapsedRealtimeMs":J
    :cond_d
    move/from16 v41, v3

    move-wide/from16 v46, v8

    move-wide/from16 v44, v10

    move-wide/from16 v48, v13

    move-wide/from16 v3, v25

    .line 11283
    .end local v8    # "txTimeMs":J
    .end local v10    # "rxTimeMs":J
    .end local v13    # "scanTimeSinceMarkMs":J
    .end local v25    # "elapsedRealtimeMs":J
    .local v3, "elapsedRealtimeMs":J
    .restart local v41    # "uidStatsSize":I
    .restart local v44    # "rxTimeMs":J
    .restart local v46    # "txTimeMs":J
    .restart local v48    # "scanTimeSinceMarkMs":J
    :goto_6
    iget-object v8, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    mul-long v9, v3, v29

    .line 11284
    invoke-virtual {v8, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->getTimeSinceMarkLocked(J)J

    move-result-wide v8

    div-long v8, v8, v29

    .line 11286
    .local v8, "wifiLockTimeSinceMarkMs":J
    const-wide/16 v10, 0x0

    cmp-long v13, v8, v10

    if-lez v13, :cond_e

    .line 11288
    iget-object v13, v12, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v13, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->setMark(J)V

    .line 11290
    mul-long v13, v8, v19

    div-long v13, v13, v33

    .line 11296
    .local v13, "myIdleTimeMs":J
    invoke-virtual {v12}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v15

    invoke-virtual {v15}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v15

    .line 11297
    invoke-virtual {v15, v13, v14}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11238
    .end local v8    # "wifiLockTimeSinceMarkMs":J
    .end local v12    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v13    # "myIdleTimeMs":J
    .end local v48    # "scanTimeSinceMarkMs":J
    :cond_e
    add-int/lit8 v2, v2, 0x1

    move-wide/from16 v25, v3

    move/from16 v3, v41

    move-wide/from16 v10, v44

    move-wide/from16 v8, v46

    goto/16 :goto_5

    .line 11308
    .end local v2    # "i":I
    .end local v41    # "uidStatsSize":I
    .end local v44    # "rxTimeMs":J
    .end local v46    # "txTimeMs":J
    .local v3, "uidStatsSize":I
    .local v8, "txTimeMs":J
    .restart local v10    # "rxTimeMs":J
    .restart local v25    # "elapsedRealtimeMs":J
    :cond_f
    move/from16 v41, v3

    move-wide/from16 v46, v8

    move-wide/from16 v44, v10

    move-wide/from16 v3, v25

    .line 11308
    .end local v8    # "txTimeMs":J
    .end local v10    # "rxTimeMs":J
    .end local v25    # "elapsedRealtimeMs":J
    .local v3, "elapsedRealtimeMs":J
    .restart local v41    # "uidStatsSize":I
    .restart local v44    # "rxTimeMs":J
    .restart local v46    # "txTimeMs":J
    const/4 v2, 0x0

    .line 11308
    .restart local v2    # "i":I
    :goto_7
    invoke-virtual {v5}, Landroid/util/SparseLongArray;->size()I

    move-result v8

    if-ge v2, v8, :cond_10

    .line 11309
    invoke-virtual {v5, v2}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v8

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    .line 11310
    .local v8, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v5, v2}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v9

    mul-long v9, v9, v27

    div-long/2addr v9, v6

    .line 11315
    .local v9, "myTxTimeMs":J
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v11

    invoke-virtual {v11}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v11

    const/4 v12, 0x0

    aget-object v11, v11, v12

    .line 11316
    invoke-virtual {v11, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11308
    .end local v8    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v9    # "myTxTimeMs":J
    add-int/lit8 v2, v2, 0x1

    goto :goto_7

    .line 11321
    .end local v2    # "i":I
    :cond_10
    const/4 v2, 0x0

    .line 11321
    .restart local v2    # "i":I
    :goto_8
    invoke-virtual {v0}, Landroid/util/SparseLongArray;->size()I

    move-result v8

    if-ge v2, v8, :cond_11

    .line 11322
    invoke-virtual {v0, v2}, Landroid/util/SparseLongArray;->keyAt(I)I

    move-result v8

    invoke-virtual {v1, v8}, Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;

    move-result-object v8

    .line 11323
    .restart local v8    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    invoke-virtual {v0, v2}, Landroid/util/SparseLongArray;->valueAt(I)J

    move-result-wide v9

    mul-long v9, v9, v23

    div-long v9, v9, v39

    .line 11328
    .local v9, "myRxTimeMs":J
    invoke-virtual {v8}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->getOrCreateWifiControllerActivityLocked()Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    move-result-object v11

    invoke-virtual {v11}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v11

    .line 11329
    invoke-virtual {v11, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11321
    .end local v8    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v9    # "myRxTimeMs":J
    add-int/lit8 v2, v2, 0x1

    goto :goto_8

    .line 11336
    .end local v2    # "i":I
    :cond_11
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getRxTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerRxTimeMillis()J

    move-result-wide v8

    invoke-virtual {v2, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11337
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getTxTimeCounters()[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    const/4 v8, 0x0

    aget-object v2, v2, v8

    .line 11338
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerTxTimeMillis()J

    move-result-wide v8

    .line 11337
    invoke-virtual {v2, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11339
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getScanTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    .line 11340
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerScanTimeMillis()J

    move-result-wide v8

    .line 11339
    invoke-virtual {v2, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11341
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getIdleTimeCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    .line 11342
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerIdleTimeMillis()J

    move-result-wide v8

    .line 11341
    invoke-virtual {v2, v8, v9}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11345
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mPowerProfile:Lcom/android/internal/os/PowerProfile;

    const-string/jumbo v8, "wifi.controller.voltage"

    invoke-virtual {v2, v8}, Lcom/android/internal/os/PowerProfile;->getAveragePower(Ljava/lang/String;)D

    move-result-wide v8

    const-wide v10, 0x408f400000000000L    # 1000.0

    div-double/2addr v8, v10

    .line 11347
    .local v8, "opVolt":D
    const-wide/16 v10, 0x0

    cmpl-double v2, v8, v10

    if-eqz v2, :cond_13

    .line 11349
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->getPowerCounter()Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v2

    .line 11350
    invoke-virtual/range {p1 .. p1}, Landroid/net/wifi/WifiActivityEnergyInfo;->getControllerEnergyUsed()J

    move-result-wide v10

    long-to-double v10, v10

    div-double/2addr v10, v8

    double-to-long v10, v10

    .line 11349
    invoke-virtual {v2, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->addCountLocked(J)V

    .line 11349
    .end local v0    # "rxPackets":Landroid/util/SparseLongArray;
    .end local v3    # "elapsedRealtimeMs":J
    .end local v5    # "txPackets":Landroid/util/SparseLongArray;
    .end local v6    # "totalTxPackets":J
    .end local v8    # "opVolt":D
    .end local v19    # "idleTimeMs":J
    .end local v21    # "totalTimeMs":J
    .end local v23    # "leftOverRxTimeMs":J
    .end local v27    # "leftOverTxTimeMs":J
    .end local v31    # "totalScanTimeMs":J
    .end local v33    # "totalWifiLockTimeMs":J
    .end local v37    # "scanTimeMs":J
    .end local v39    # "totalRxPackets":J
    .end local v41    # "uidStatsSize":I
    .end local v44    # "rxTimeMs":J
    .end local v46    # "txTimeMs":J
    goto :goto_9

    .line 11353
    .end local v36    # "delta":Landroid/net/NetworkStats;
    .local v2, "delta":Landroid/net/NetworkStats;
    :catchall_0
    move-exception v0

    move-object/from16 v36, v2

    .line 11353
    .end local v2    # "delta":Landroid/net/NetworkStats;
    .restart local v36    # "delta":Landroid/net/NetworkStats;
    goto :goto_a

    .line 11353
    .end local v36    # "delta":Landroid/net/NetworkStats;
    .restart local v2    # "delta":Landroid/net/NetworkStats;
    :cond_12
    move-object/from16 v36, v2

    .line 11353
    .end local v2    # "delta":Landroid/net/NetworkStats;
    .restart local v36    # "delta":Landroid/net/NetworkStats;
    :cond_13
    :goto_9
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 11354
    return-void

    .line 11353
    :catchall_1
    move-exception v0

    move-object/from16 v2, v36

    goto :goto_a

    .line 11353
    .end local v36    # "delta":Landroid/net/NetworkStats;
    .restart local v2    # "delta":Landroid/net/NetworkStats;
    :catchall_2
    move-exception v0

    :goto_a
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0

    .line 11111
    :catchall_3
    move-exception v0

    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    throw v0
.end method

.method public writeAsyncLocked()V
    .locals 1

    .line 13536
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeLocked(Z)V

    .line 13537
    return-void
.end method

.method writeHistory(Landroid/os/Parcel;ZZ)V
    .locals 5
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclData"    # Z
    .param p3, "andOldHistory"    # Z

    .line 13750
    iget-wide v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBaseTime:J

    iget-wide v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryElapsedRealtime:J

    add-long/2addr v0, v2

    invoke-virtual {p1, v0, v1}, Landroid/os/Parcel;->writeLong(J)V

    .line 13751
    const/4 v0, 0x0

    if-nez p2, :cond_0

    .line 13752
    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13753
    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 13754
    return-void

    .line 13756
    :cond_0
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 13757
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryTagPool:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 13758
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$HistoryTag;

    .line 13759
    .local v3, "tag":Landroid/os/BatteryStats$HistoryTag;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-virtual {p1, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 13760
    iget-object v4, v3, Landroid/os/BatteryStats$HistoryTag;->string:Ljava/lang/String;

    invoke-virtual {p1, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 13761
    iget v4, v3, Landroid/os/BatteryStats$HistoryTag;->uid:I

    invoke-virtual {p1, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 13762
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Landroid/os/BatteryStats$HistoryTag;Ljava/lang/Integer;>;"
    .end local v3    # "tag":Landroid/os/BatteryStats$HistoryTag;
    goto :goto_0

    .line 13763
    :cond_1
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->dataSize()I

    move-result v1

    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 13766
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    iget-object v2, p0, Lcom/android/internal/os/BatteryStatsImpl;->mHistoryBuffer:Landroid/os/Parcel;

    invoke-virtual {v2}, Landroid/os/Parcel;->dataSize()I

    move-result v2

    invoke-virtual {p1, v1, v0, v2}, Landroid/os/Parcel;->appendFrom(Landroid/os/Parcel;II)V

    .line 13768
    if-eqz p3, :cond_2

    .line 13769
    invoke-virtual {p0, p1}, Lcom/android/internal/os/BatteryStatsImpl;->writeOldHistory(Landroid/os/Parcel;)V

    .line 13771
    :cond_2
    return-void
.end method

.method public writeHistoryDelta(Landroid/os/Parcel;Landroid/os/BatteryStats$HistoryItem;Landroid/os/BatteryStats$HistoryItem;)V
    .locals 23
    .param p1, "dest"    # Landroid/os/Parcel;
    .param p2, "cur"    # Landroid/os/BatteryStats$HistoryItem;
    .param p3, "last"    # Landroid/os/BatteryStats$HistoryItem;

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    .line 3294
    move-object/from16 v3, p3

    if-eqz v3, :cond_21

    iget-byte v5, v2, Landroid/os/BatteryStats$HistoryItem;->cmd:B

    if-eqz v5, :cond_0

    goto/16 :goto_d

    .line 3300
    :cond_0
    iget-wide v5, v2, Landroid/os/BatteryStats$HistoryItem;->time:J

    iget-wide v7, v3, Landroid/os/BatteryStats$HistoryItem;->time:J

    sub-long/2addr v5, v7

    .line 3301
    .local v5, "deltaTime":J
    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v7

    .line 3302
    .local v7, "lastBatteryLevelInt":I
    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v8

    .line 3305
    .local v8, "lastStateInt":I
    const-wide/16 v9, 0x0

    cmp-long v9, v5, v9

    if-ltz v9, :cond_3

    const-wide/32 v9, 0x7fffffff

    cmp-long v9, v5, v9

    if-lez v9, :cond_1

    goto :goto_0

    .line 3307
    :cond_1
    const-wide/32 v9, 0x7fffd

    cmp-long v9, v5, v9

    if-ltz v9, :cond_2

    .line 3308
    const v9, 0x7fffe

    goto :goto_1

    .line 3310
    :cond_2
    long-to-int v9, v5

    goto :goto_1

    .line 3306
    :cond_3
    :goto_0
    const v9, 0x7ffff

    .line 3310
    .local v9, "deltaTimeToken":I
    :goto_1
    nop

    .line 3312
    iget v10, v2, Landroid/os/BatteryStats$HistoryItem;->states:I

    const/high16 v11, -0x2000000

    and-int/2addr v10, v11

    or-int/2addr v10, v9

    .line 3313
    .local v10, "firstToken":I
    iget-byte v11, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    iget-byte v12, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-le v11, v12, :cond_4

    .line 3314
    const/4 v11, 0x1

    goto :goto_2

    :cond_4
    const/4 v11, 0x0

    .line 3315
    .local v11, "includeStepDetails":I
    :goto_2
    if-nez v11, :cond_6

    iget-object v12, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    if-nez v12, :cond_5

    goto :goto_3

    :cond_5
    const/4 v12, 0x0

    goto :goto_4

    :cond_6
    :goto_3
    const/4 v12, 0x1

    .line 3317
    .local v12, "computeStepDetails":Z
    :goto_4
    invoke-direct {v0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->buildBatteryLevelInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v14

    or-int/2addr v14, v11

    .line 3318
    .local v14, "batteryLevelInt":I
    if-eq v14, v7, :cond_7

    const/4 v15, 0x1

    goto :goto_5

    :cond_7
    const/4 v15, 0x0

    .line 3319
    .local v15, "batteryLevelIntChanged":Z
    :goto_5
    if-eqz v15, :cond_8

    .line 3320
    const/high16 v16, 0x80000

    or-int v10, v10, v16

    .line 3322
    :cond_8
    invoke-direct {v0, v2}, Lcom/android/internal/os/BatteryStatsImpl;->buildStateInt(Landroid/os/BatteryStats$HistoryItem;)I

    move-result v13

    .line 3323
    .local v13, "stateInt":I
    if-eq v13, v8, :cond_9

    const/16 v16, 0x1

    goto :goto_6

    :cond_9
    const/16 v16, 0x0

    .line 3324
    .local v16, "stateIntChanged":Z
    :goto_6
    if-eqz v16, :cond_a

    .line 3325
    const/high16 v18, 0x100000

    or-int v10, v10, v18

    .line 3327
    :cond_a
    iget v4, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    move/from16 v19, v7

    iget v7, v3, Landroid/os/BatteryStats$HistoryItem;->states2:I

    .end local v7    # "lastBatteryLevelInt":I
    .local v19, "lastBatteryLevelInt":I
    if-eq v4, v7, :cond_b

    const/4 v4, 0x1

    goto :goto_7

    :cond_b
    const/4 v4, 0x0

    .line 3328
    .local v4, "state2IntChanged":Z
    :goto_7
    if-eqz v4, :cond_c

    .line 3329
    const/high16 v7, 0x200000

    or-int/2addr v10, v7

    .line 3331
    :cond_c
    iget-object v7, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-nez v7, :cond_d

    iget-object v7, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v7, :cond_e

    .line 3332
    :cond_d
    const/high16 v7, 0x400000

    or-int/2addr v10, v7

    .line 3334
    :cond_e
    iget v7, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v7, :cond_f

    .line 3335
    const/high16 v7, 0x800000

    or-int/2addr v10, v7

    .line 3338
    :cond_f
    iget v7, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    move/from16 v20, v8

    iget v8, v3, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    .end local v8    # "lastStateInt":I
    .local v20, "lastStateInt":I
    if-eq v7, v8, :cond_10

    const/16 v17, 0x1

    goto :goto_8

    :cond_10
    const/16 v17, 0x0

    :goto_8
    move/from16 v7, v17

    .line 3339
    .local v7, "batteryChargeChanged":Z
    if-eqz v7, :cond_11

    .line 3340
    const/high16 v8, 0x1000000

    or-int/2addr v10, v8

    .line 3342
    :cond_11
    invoke-virtual {v1, v10}, Landroid/os/Parcel;->writeInt(I)V

    .line 3346
    const v8, 0x7fffe

    if-lt v9, v8, :cond_13

    .line 3347
    if-ne v9, v8, :cond_12

    .line 3349
    long-to-int v8, v5

    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_9

    .line 3352
    :cond_12
    invoke-virtual {v1, v5, v6}, Landroid/os/Parcel;->writeLong(J)V

    .line 3355
    :cond_13
    :goto_9
    if-eqz v15, :cond_14

    .line 3356
    invoke-virtual {v1, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 3363
    :cond_14
    if-eqz v16, :cond_15

    .line 3364
    invoke-virtual {v1, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 3372
    :cond_15
    if-eqz v4, :cond_16

    .line 3373
    iget v8, v2, Landroid/os/BatteryStats$HistoryItem;->states2:I

    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 3377
    :cond_16
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    const v17, 0xffff

    if-nez v8, :cond_17

    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v8, :cond_1a

    .line 3380
    :cond_17
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v8, :cond_18

    .line 3381
    iget-object v8, v2, Landroid/os/BatteryStats$HistoryItem;->wakelockTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v8}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v8

    .local v8, "wakeLockIndex":I
    goto :goto_a

    .line 3385
    .end local v8    # "wakeLockIndex":I
    :cond_18
    move/from16 v8, v17

    .line 3387
    .restart local v8    # "wakeLockIndex":I
    :goto_a
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    if-eqz v3, :cond_19

    .line 3388
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->wakeReasonTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v3

    .local v3, "wakeReasonIndex":I
    goto :goto_b

    .line 3392
    .end local v3    # "wakeReasonIndex":I
    :cond_19
    move/from16 v3, v17

    .line 3394
    .restart local v3    # "wakeReasonIndex":I
    :goto_b
    shl-int/lit8 v18, v3, 0x10

    move/from16 v21, v3

    or-int v3, v18, v8

    .end local v3    # "wakeReasonIndex":I
    .local v21, "wakeReasonIndex":I
    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3396
    .end local v8    # "wakeLockIndex":I
    .end local v21    # "wakeReasonIndex":I
    :cond_1a
    iget v3, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    if-eqz v3, :cond_1b

    .line 3397
    iget-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->eventTag:Landroid/os/BatteryStats$HistoryTag;

    invoke-direct {v0, v3}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistoryTag(Landroid/os/BatteryStats$HistoryTag;)I

    move-result v3

    .line 3398
    .local v3, "index":I
    iget v8, v2, Landroid/os/BatteryStats$HistoryItem;->eventCode:I

    and-int v8, v8, v17

    shl-int/lit8 v17, v3, 0x10

    or-int v8, v8, v17

    .line 3399
    .local v8, "codeAndIndex":I
    invoke-virtual {v1, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 3404
    .end local v3    # "index":I
    .end local v8    # "codeAndIndex":I
    :cond_1b
    if-eqz v12, :cond_1e

    .line 3405
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    if-eqz v8, :cond_1c

    .line 3406
    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 3407
    invoke-interface {v3}, Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;->getPlatformLowPowerStats()Ljava/lang/String;

    move-result-object v3

    iput-object v3, v8, Landroid/os/BatteryStats$HistoryStepDetails;->statPlatformIdleState:Ljava/lang/String;

    .line 3411
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPlatformIdleStateCallback:Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;

    .line 3412
    invoke-interface {v8}, Lcom/android/internal/os/BatteryStatsImpl$PlatformIdleStateCallback;->getSubsystemLowPowerStats()Ljava/lang/String;

    move-result-object v8

    iput-object v8, v3, Landroid/os/BatteryStats$HistoryStepDetails;->statSubsystemPowerState:Ljava/lang/String;

    .line 3417
    :cond_1c
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iget-object v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-direct {v0, v3, v8}, Lcom/android/internal/os/BatteryStatsImpl;->computeHistoryStepDetails(Landroid/os/BatteryStats$HistoryStepDetails;Landroid/os/BatteryStats$HistoryStepDetails;)V

    .line 3418
    if-eqz v11, :cond_1d

    .line 3419
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    invoke-virtual {v3, v1}, Landroid/os/BatteryStats$HistoryStepDetails;->writeToParcel(Landroid/os/Parcel;)V

    .line 3421
    :cond_1d
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3422
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3426
    const/4 v3, 0x0

    goto :goto_c

    .line 3424
    :cond_1e
    const/4 v3, 0x0

    iput-object v3, v2, Landroid/os/BatteryStats$HistoryItem;->stepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3426
    :goto_c
    iget-byte v8, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    iget-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    if-ge v8, v3, :cond_1f

    .line 3427
    const/4 v3, 0x0

    iput-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepDetails:Landroid/os/BatteryStats$HistoryStepDetails;

    .line 3429
    :cond_1f
    iget-byte v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryLevel:B

    iput-byte v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastHistoryStepLevel:B

    .line 3431
    if-eqz v7, :cond_20

    .line 3433
    iget v3, v2, Landroid/os/BatteryStats$HistoryItem;->batteryChargeUAh:I

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3435
    :cond_20
    return-void

    .line 3295
    .end local v4    # "state2IntChanged":Z
    .end local v5    # "deltaTime":J
    .end local v7    # "batteryChargeChanged":Z
    .end local v9    # "deltaTimeToken":I
    .end local v10    # "firstToken":I
    .end local v11    # "includeStepDetails":I
    .end local v12    # "computeStepDetails":Z
    .end local v13    # "stateInt":I
    .end local v14    # "batteryLevelInt":I
    .end local v15    # "batteryLevelIntChanged":Z
    .end local v16    # "stateIntChanged":Z
    .end local v19    # "lastBatteryLevelInt":I
    .end local v20    # "lastStateInt":I
    :cond_21
    :goto_d
    const v3, 0x7fffd

    invoke-virtual {v1, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 3296
    const/4 v3, 0x0

    invoke-virtual {v2, v1, v3}, Landroid/os/BatteryStats$HistoryItem;->writeToParcel(Landroid/os/Parcel;I)V

    .line 3297
    return-void
.end method

.method writeLocked(Z)V
    .locals 3
    .param p1, "sync"    # Z

    .line 13544
    iget-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mFile:Lcom/android/internal/util/JournaledFile;

    if-nez v0, :cond_0

    .line 13545
    const-string v0, "BatteryStats"

    const-string/jumbo v1, "writeLocked: no file associated with this instance"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13546
    return-void

    .line 13549
    :cond_0
    iget-boolean v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mShuttingDown:Z

    if-eqz v0, :cond_1

    .line 13550
    return-void

    .line 13553
    :cond_1
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 13554
    .local v0, "out":Landroid/os/Parcel;
    const/4 v1, 0x1

    invoke-virtual {p0, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V

    .line 13555
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    iput-wide v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    .line 13557
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    if-eqz v1, :cond_2

    .line 13558
    iget-object v1, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V

    .line 13560
    :cond_2
    iput-object v0, p0, Lcom/android/internal/os/BatteryStatsImpl;->mPendingWrite:Landroid/os/Parcel;

    .line 13562
    if-eqz p1, :cond_3

    .line 13563
    invoke-virtual {p0}, Lcom/android/internal/os/BatteryStatsImpl;->commitPendingDataToDisk()V

    goto :goto_0

    .line 13565
    :cond_3
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v1

    new-instance v2, Lcom/android/internal/os/BatteryStatsImpl$5;

    invoke-direct {v2, p0}, Lcom/android/internal/os/BatteryStatsImpl$5;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V

    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 13571
    :goto_0
    return-void
.end method

.method writeOldHistory(Landroid/os/Parcel;)V
    .locals 0
    .param p1, "out"    # Landroid/os/Parcel;

    .line 13775
    return-void
.end method

.method public writeSummaryToParcel(Landroid/os/Parcel;Z)V
    .locals 32
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclHistory"    # Z

    move-object/from16 v0, p0

    move-object/from16 v7, p1

    .line 14250
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 14254
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    move-result-wide v8

    .line 14256
    .local v8, "startClockTime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long v10, v1, v3

    .line 14257
    .local v10, "NOW_SYS":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    mul-long v12, v1, v3

    .line 14259
    .local v12, "NOWREAL_SYS":J
    const/16 v1, 0xb1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14261
    const/4 v14, 0x1

    move/from16 v15, p2

    invoke-virtual {v0, v7, v15, v14}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistory(Landroid/os/Parcel;ZZ)V

    .line 14263
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14264
    const/4 v5, 0x0

    invoke-virtual {v0, v10, v11, v5}, Lcom/android/internal/os/BatteryStatsImpl;->computeUptime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14265
    invoke-virtual {v0, v12, v13, v5}, Lcom/android/internal/os/BatteryStatsImpl;->computeRealtime(JI)J

    move-result-wide v1

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14266
    invoke-virtual {v7, v8, v9}, Landroid/os/Parcel;->writeLong(J)V

    .line 14267
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14268
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14269
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v2, v7

    move-wide v3, v10

    move v14, v5

    move-wide v5, v12

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14270
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14271
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14272
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14273
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14274
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14275
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14276
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14277
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14278
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getLowDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14279
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getHighDischargeAmountSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14280
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenOnSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14281
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenOffSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14282
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getDischargeAmountScreenDozeSinceCharge()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14283
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14284
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14285
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14286
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 14287
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14288
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14289
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14290
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14291
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14292
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    if-eqz v1, :cond_1

    .line 14293
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 14294
    .local v1, "NPKG":I
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14295
    move v2, v14

    .local v2, "i":I
    :goto_0
    if-ge v2, v1, :cond_0

    .line 14296
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyPackageChanges:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/BatteryStats$PackageChange;

    .line 14297
    .local v3, "pc":Landroid/os/BatteryStats$PackageChange;
    iget-object v4, v3, Landroid/os/BatteryStats$PackageChange;->mPackageName:Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14298
    iget-boolean v4, v3, Landroid/os/BatteryStats$PackageChange;->mUpdate:Z

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14299
    iget-wide v4, v3, Landroid/os/BatteryStats$PackageChange;->mVersionCode:J

    invoke-virtual {v7, v4, v5}, Landroid/os/Parcel;->writeLong(J)V

    .line 14295
    .end local v3    # "pc":Landroid/os/BatteryStats$PackageChange;
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 14301
    .end local v1    # "NPKG":I
    .end local v2    # "i":I
    :cond_0
    goto :goto_1

    .line 14302
    :cond_1
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14304
    :goto_1
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDailyStartTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14305
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMinDailyDeadline:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14306
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNextMaxDailyDeadline:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14308
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14309
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14310
    move v1, v14

    .local v1, "i":I
    :goto_2
    const/4 v5, 0x5

    if-ge v1, v5, :cond_2

    .line 14311
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14310
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 14313
    .end local v1    # "i":I
    :cond_2
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14314
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14315
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14316
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14317
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14318
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14319
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14320
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14321
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14322
    move v1, v14

    .restart local v1    # "i":I
    :goto_3
    sget v2, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    if-ge v1, v2, :cond_3

    .line 14323
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14322
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 14325
    .end local v1    # "i":I
    :cond_3
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14326
    move v1, v14

    .restart local v1    # "i":I
    :goto_4
    const/16 v2, 0x15

    if-ge v1, v2, :cond_4

    .line 14327
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14326
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 14329
    .end local v1    # "i":I
    :cond_4
    move v1, v14

    .restart local v1    # "i":I
    :goto_5
    const/16 v6, 0xa

    if-ge v1, v6, :cond_5

    .line 14330
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14331
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14329
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 14333
    .end local v1    # "i":I
    :cond_5
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14334
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14335
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14336
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14337
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14338
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14339
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14340
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14341
    move v1, v14

    .restart local v1    # "i":I
    :goto_6
    const/16 v2, 0x8

    if-ge v1, v2, :cond_6

    .line 14342
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14341
    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    .line 14344
    .end local v1    # "i":I
    :cond_6
    move v1, v14

    .restart local v1    # "i":I
    :goto_7
    const/16 v2, 0xd

    if-ge v1, v2, :cond_7

    .line 14345
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14344
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 14347
    .end local v1    # "i":I
    :cond_7
    move v1, v14

    .restart local v1    # "i":I
    :goto_8
    if-ge v1, v5, :cond_8

    .line 14348
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14347
    add-int/lit8 v1, v1, 0x1

    goto :goto_8

    .line 14350
    .end local v1    # "i":I
    :cond_8
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14351
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14352
    move v1, v14

    .restart local v1    # "i":I
    :goto_9
    const/4 v2, 0x2

    if-ge v1, v2, :cond_9

    .line 14353
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14352
    add-int/lit8 v1, v1, 0x1

    goto :goto_9

    .line 14355
    .end local v1    # "i":I
    :cond_9
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14356
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeSummaryToParcel(Landroid/os/Parcel;)V

    .line 14357
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14358
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14359
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14361
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14362
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14363
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14364
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14366
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14367
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_a
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_b

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14368
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14369
    .local v3, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v3, :cond_a

    .line 14370
    const/4 v4, 0x1

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14371
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14372
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_b

    .line 14374
    :cond_a
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14376
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_b
    goto :goto_a

    .line 14377
    :cond_b
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14378
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_c
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14379
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14380
    .restart local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v3, :cond_c

    .line 14381
    const/4 v4, 0x1

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14382
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14383
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_d

    .line 14385
    :cond_c
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14387
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_d
    goto :goto_c

    .line 14389
    :cond_d
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14390
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_e
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_f

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14391
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14392
    .local v3, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v3, :cond_e

    .line 14393
    const/4 v4, 0x1

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14394
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14395
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_f

    .line 14397
    :cond_e
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14399
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_f
    goto :goto_e

    .line 14401
    :cond_f
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14402
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_10
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_11

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 14403
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 14404
    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_10

    .line 14405
    const/4 v4, 0x1

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14406
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14407
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_11

    .line 14409
    :cond_10
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14411
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_11
    goto :goto_10

    .line 14413
    :cond_11
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14414
    move v1, v14

    .restart local v1    # "i":I
    :goto_12
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_13

    .line 14415
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Timer;

    .line 14416
    .local v2, "kmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    if-eqz v2, :cond_12

    .line 14417
    const/4 v3, 0x1

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 14418
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v3

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14419
    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_13

    .line 14421
    :cond_12
    invoke-virtual {v7, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 14414
    .end local v2    # "kmt":Lcom/android/internal/os/BatteryStatsImpl$Timer;
    :goto_13
    add-int/lit8 v1, v1, 0x1

    goto :goto_12

    .line 14425
    .end local v1    # "i":I
    :cond_13
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 14426
    .local v3, "NU":I
    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 14427
    move v1, v14

    .local v1, "iu":I
    :goto_14
    move v4, v1

    .end local v1    # "iu":I
    .local v4, "iu":I
    if-ge v4, v3, :cond_46

    .line 14428
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v4}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14429
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    move-object v2, v1

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 14431
    .local v2, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    iget-object v1, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v14, v2

    move-object v2, v7

    .end local v2    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .local v14, "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move/from16 v17, v3

    move/from16 v18, v4

    move-wide v3, v10

    .end local v3    # "NU":I
    .end local v4    # "iu":I
    .local v17, "NU":I
    .local v18, "iu":I
    move-wide/from16 v19, v8

    move v8, v5

    move v9, v6

    move-wide v5, v12

    .end local v8    # "startClockTime":J
    .local v19, "startClockTime":J
    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14432
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mOnBatteryScreenOffBackgroundTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V

    .line 14434
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_14

    .line 14435
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14436
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_15

    .line 14438
    :cond_14
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14440
    :goto_15
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_15

    .line 14441
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14442
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFullWifiLockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_16

    .line 14444
    :cond_15
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14446
    :goto_16
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_16

    .line 14447
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14448
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_17

    .line 14450
    :cond_16
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14452
    :goto_17
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_18
    if-ge v1, v8, :cond_18

    .line 14453
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    if-eqz v2, :cond_17

    .line 14454
    const/4 v2, 0x1

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14455
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiBatchedScanTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_19

    .line 14457
    :cond_17
    const/4 v2, 0x0

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14452
    :goto_19
    add-int/lit8 v1, v1, 0x1

    goto :goto_18

    .line 14460
    .end local v1    # "i":I
    :cond_18
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_19

    .line 14461
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14462
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWifiMulticastTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1a

    .line 14464
    :cond_19
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14466
    :goto_1a
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1a

    .line 14467
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14468
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAudioTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1b

    .line 14470
    :cond_1a
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14472
    :goto_1b
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1b

    .line 14473
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14474
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVideoTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1c

    .line 14476
    :cond_1b
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14478
    :goto_1c
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1c

    .line 14479
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14480
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mFlashlightTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1d

    .line 14482
    :cond_1c
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14484
    :goto_1d
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1d

    .line 14485
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14486
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCameraTurnedOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1e

    .line 14488
    :cond_1d
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14490
    :goto_1e
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1e

    .line 14491
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14492
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundActivityTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_1f

    .line 14494
    :cond_1e
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14496
    :goto_1f
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v1, :cond_1f

    .line 14497
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14498
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mForegroundServiceTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_20

    .line 14500
    :cond_1f
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14502
    :goto_20
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_20

    .line 14503
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14504
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mAggregatedPartialWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_21

    .line 14506
    :cond_20
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14508
    :goto_21
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_21

    .line 14509
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14510
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_22

    .line 14512
    :cond_21
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14514
    :goto_22
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v1, :cond_22

    .line 14515
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14516
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothUnoptimizedScanTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_23

    .line 14518
    :cond_22
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14520
    :goto_23
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-eqz v1, :cond_23

    .line 14521
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14522
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_24

    .line 14524
    :cond_23
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14526
    :goto_24
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-eqz v1, :cond_24

    .line 14527
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14528
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mBluetoothScanResultBgCounter:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_25

    .line 14530
    :cond_24
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14532
    :goto_25
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_26
    const/4 v2, 0x7

    if-ge v1, v2, :cond_26

    .line 14533
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    if-eqz v2, :cond_25

    .line 14534
    const/4 v2, 0x1

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14535
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_27

    .line 14537
    :cond_25
    const/4 v2, 0x0

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14532
    :goto_27
    add-int/lit8 v1, v1, 0x1

    goto :goto_26

    .line 14540
    .end local v1    # "i":I
    :cond_26
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    if-eqz v1, :cond_27

    .line 14541
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14542
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mVibratorOnTimer:Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$BatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14547
    const/4 v1, 0x0

    goto :goto_28

    .line 14544
    :cond_27
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14547
    :goto_28
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    if-nez v2, :cond_28

    .line 14548
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_2a

    .line 14550
    :cond_28
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14551
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_29
    const/4 v2, 0x4

    if-ge v1, v2, :cond_29

    .line 14552
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14551
    add-int/lit8 v1, v1, 0x1

    goto :goto_29

    .line 14556
    .end local v1    # "i":I
    :cond_29
    :goto_2a
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-nez v1, :cond_2a

    .line 14557
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_2c

    .line 14559
    :cond_2a
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14560
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_2b
    if-ge v1, v9, :cond_2b

    .line 14561
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14562
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14560
    add-int/lit8 v1, v1, 0x1

    goto :goto_2b

    .line 14564
    .end local v1    # "i":I
    :cond_2b
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14565
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mMobileRadioActiveCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14568
    :goto_2c
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mUserCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14569
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSystemCpuTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14571
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    if-eqz v1, :cond_2f

    .line 14572
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14573
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14574
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterSpeedTimesUs:[[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_2d
    if-ge v3, v2, :cond_30

    aget-object v4, v1, v3

    .line 14575
    .local v4, "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    if-eqz v4, :cond_2e

    .line 14576
    const/4 v5, 0x1

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14577
    array-length v5, v4

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14578
    array-length v5, v4

    const/4 v6, 0x0

    :goto_2e
    if-ge v6, v5, :cond_2d

    aget-object v8, v4, v6

    .line 14579
    .local v8, "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    if-eqz v8, :cond_2c

    .line 14580
    const/4 v9, 0x1

    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 14581
    invoke-virtual {v8, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14578
    const/4 v9, 0x0

    goto :goto_2f

    .line 14583
    :cond_2c
    const/4 v9, 0x0

    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 14578
    .end local v8    # "c":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :goto_2f
    add-int/lit8 v6, v6, 0x1

    const/4 v8, 0x5

    const/16 v9, 0xa

    goto :goto_2e

    .line 14574
    :cond_2d
    const/4 v9, 0x0

    goto :goto_30

    .line 14587
    :cond_2e
    const/4 v9, 0x0

    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 14574
    .end local v4    # "cpuSpeeds":[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
    :goto_30
    add-int/lit8 v3, v3, 0x1

    const/4 v8, 0x5

    const/16 v9, 0xa

    goto :goto_2d

    .line 14591
    :cond_2f
    const/4 v9, 0x0

    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 14594
    :cond_30
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14595
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mScreenOffCpuFreqTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v7, v1}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14597
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuActiveTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14598
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mCpuClusterTimesMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    invoke-static {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->access$2200(Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;Landroid/os/Parcel;)V

    .line 14600
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_31

    .line 14601
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14602
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_31
    if-ge v3, v2, :cond_32

    aget-object v4, v1, v3

    .line 14603
    .local v4, "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    invoke-static {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14602
    .end local v4    # "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    add-int/lit8 v3, v3, 0x1

    goto :goto_31

    .line 14606
    :cond_31
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14608
    :cond_32
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    if-eqz v1, :cond_33

    .line 14609
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v1, v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14610
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcStateScreenOffTimeMs:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;

    array-length v2, v1

    const/4 v3, 0x0

    :goto_32
    if-ge v3, v2, :cond_34

    aget-object v4, v1, v3

    .line 14611
    .restart local v4    # "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    invoke-static {v7, v4}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V

    .line 14610
    .end local v4    # "counters":Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
    add-int/lit8 v3, v3, 0x1

    goto :goto_32

    .line 14614
    :cond_33
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14617
    :cond_34
    invoke-static {v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2000(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-eqz v1, :cond_35

    .line 14618
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14619
    invoke-static {v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2000(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_33

    .line 14621
    :cond_35
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14624
    :goto_33
    invoke-static {v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2100(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    if-eqz v1, :cond_36

    .line 14625
    const/4 v1, 0x1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14626
    invoke-static {v14}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2100(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    move-result-object v1

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_34

    .line 14628
    :cond_36
    const/4 v1, 0x0

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14631
    :goto_34
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mWakelockStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 14632
    .local v1, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v2

    .line 14633
    .local v2, "NW":I
    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14634
    const/4 v3, 0x0

    .local v3, "iw":I
    :goto_35
    if-ge v3, v2, :cond_3b

    .line 14635
    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14636
    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;

    .line 14637
    .local v4, "wl":Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_37

    .line 14638
    const/4 v5, 0x1

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14639
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerFull:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_36

    .line 14641
    :cond_37
    const/4 v5, 0x0

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14643
    :goto_36
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    if-eqz v5, :cond_38

    .line 14644
    const/4 v5, 0x1

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14645
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerPartial:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v5, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_37

    .line 14647
    :cond_38
    const/4 v5, 0x0

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14649
    :goto_37
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_39

    .line 14650
    const/4 v5, 0x1

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14651
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerWindow:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_38

    .line 14653
    :cond_39
    const/4 v5, 0x0

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14655
    :goto_38
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    if-eqz v5, :cond_3a

    .line 14656
    const/4 v5, 0x1

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14657
    iget-object v5, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;->mTimerDraw:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v5, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    goto :goto_39

    .line 14659
    :cond_3a
    const/4 v5, 0x0

    invoke-virtual {v7, v5}, Landroid/os/Parcel;->writeInt(I)V

    .line 14634
    .end local v4    # "wl":Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;
    :goto_39
    add-int/lit8 v3, v3, 0x1

    goto :goto_35

    .line 14663
    .end local v3    # "iw":I
    :cond_3b
    iget-object v3, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSyncStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v3

    .line 14664
    .local v3, "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v4

    .line 14665
    .local v4, "NS":I
    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeInt(I)V

    .line 14666
    const/4 v5, 0x0

    .local v5, "is":I
    :goto_3a
    if-ge v5, v4, :cond_3c

    .line 14667
    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14668
    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v6, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14666
    add-int/lit8 v5, v5, 0x1

    goto :goto_3a

    .line 14671
    .end local v5    # "is":I
    :cond_3c
    iget-object v5, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobStats:Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    .line 14672
    .local v5, "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v6

    .line 14673
    .local v6, "NJ":I
    invoke-virtual {v7, v6}, Landroid/os/Parcel;->writeInt(I)V

    .line 14674
    const/4 v8, 0x0

    .local v8, "ij":I
    :goto_3b
    if-ge v8, v6, :cond_3d

    .line 14675
    invoke-virtual {v5, v8}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14676
    invoke-virtual {v5, v8}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v9, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14674
    add-int/lit8 v8, v8, 0x1

    goto :goto_3b

    .line 14679
    .end local v8    # "ij":I
    :cond_3d
    invoke-virtual {v14, v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->writeJobCompletionsToParcelLocked(Landroid/os/Parcel;)V

    .line 14681
    iget-object v8, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredEventCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14682
    iget-object v8, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsDeferredCount:Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14683
    iget-object v8, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessTimeMs:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v8, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14684
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_3c
    sget-object v9, Lcom/android/internal/os/BatteryStatsImpl;->JOB_FRESHNESS_BUCKETS:[J

    array-length v9, v9

    if-ge v8, v9, :cond_3f

    .line 14685
    iget-object v9, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v9, v9, v8

    if-eqz v9, :cond_3e

    .line 14686
    const/4 v9, 0x1

    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 14687
    iget-object v9, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mJobsFreshnessBuckets:[Lcom/android/internal/os/BatteryStatsImpl$Counter;

    aget-object v9, v9, v8

    invoke-virtual {v9, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    goto :goto_3d

    .line 14689
    :cond_3e
    const/4 v9, 0x0

    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 14684
    :goto_3d
    add-int/lit8 v8, v8, 0x1

    goto :goto_3c

    .line 14693
    .end local v8    # "i":I
    :cond_3f
    iget-object v8, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v8

    .line 14694
    .local v8, "NSE":I
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 14695
    const/4 v9, 0x0

    .local v9, "ise":I
    :goto_3e
    if-ge v9, v8, :cond_41

    .line 14696
    move-object/from16 v21, v1

    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    .end local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .local v21, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14697
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mSensorStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;

    .line 14698
    .local v1, "se":Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;
    move/from16 v22, v2

    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    .end local v2    # "NW":I
    .local v22, "NW":I
    if-eqz v2, :cond_40

    .line 14699
    const/4 v2, 0x1

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14700
    iget-object v2, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;->mTimer:Lcom/android/internal/os/BatteryStatsImpl$DualTimer;

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V

    .line 14695
    const/4 v2, 0x0

    goto :goto_3f

    .line 14702
    :cond_40
    const/4 v2, 0x0

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeInt(I)V

    .line 14695
    .end local v1    # "se":Lcom/android/internal/os/BatteryStatsImpl$Uid$Sensor;
    :goto_3f
    add-int/lit8 v9, v9, 0x1

    move-object/from16 v1, v21

    move/from16 v2, v22

    goto :goto_3e

    .line 14706
    .end local v9    # "ise":I
    .end local v21    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .end local v22    # "NW":I
    .local v1, "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .restart local v2    # "NW":I
    :cond_41
    move-object/from16 v21, v1

    move/from16 v22, v2

    const/4 v2, 0x0

    .end local v1    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .end local v2    # "NW":I
    .restart local v21    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .restart local v22    # "NW":I
    iget-object v1, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 14707
    .local v1, "NP":I
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14708
    move v9, v2

    .local v9, "ip":I
    :goto_40
    if-ge v9, v1, :cond_42

    .line 14709
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v2, v9}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14710
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mProcessStats:Landroid/util/ArrayMap;

    invoke-virtual {v2, v9}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 14711
    .local v2, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    move-object/from16 v23, v3

    move/from16 v24, v4

    iget-wide v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mUserTime:J

    .end local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .end local v4    # "NS":I
    .local v23, "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .local v24, "NS":I
    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14712
    iget-wide v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mSystemTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14713
    iget-wide v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mForegroundTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14714
    iget v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mStarts:I

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 14715
    iget v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumCrashes:I

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 14716
    iget v3, v2, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->mNumAnrs:I

    invoke-virtual {v7, v3}, Landroid/os/Parcel;->writeInt(I)V

    .line 14717
    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->writeExcessivePowerToParcelLocked(Landroid/os/Parcel;)V

    .line 14708
    .end local v2    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    add-int/lit8 v9, v9, 0x1

    move-object/from16 v3, v23

    move/from16 v4, v24

    const/4 v2, 0x0

    goto :goto_40

    .line 14720
    .end local v9    # "ip":I
    .end local v23    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .end local v24    # "NS":I
    .restart local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .restart local v4    # "NS":I
    :cond_42
    move-object/from16 v23, v3

    move/from16 v24, v4

    .end local v3    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .end local v4    # "NS":I
    .restart local v23    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .restart local v24    # "NS":I
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 14721
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14722
    if-lez v1, :cond_45

    .line 14724
    iget-object v2, v14, Lcom/android/internal/os/BatteryStatsImpl$Uid;->mPackageStats:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_41
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_45

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/Map$Entry;

    .line 14725
    .local v3, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14726
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    .line 14727
    .local v4, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    iget-object v9, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v9}, Landroid/util/ArrayMap;->size()I

    move-result v9

    .line 14728
    .local v9, "NWA":I
    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 14729
    const/16 v16, 0x0

    .local v16, "iwa":I
    :goto_42
    move/from16 v25, v16

    .end local v16    # "iwa":I
    .local v25, "iwa":I
    move/from16 v26, v1

    move/from16 v1, v25

    if-ge v1, v9, :cond_43

    .line 14730
    .end local v25    # "iwa":I
    .local v1, "iwa":I
    .local v26, "NP":I
    move-object/from16 v27, v2

    iget-object v2, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v7, v2}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14731
    iget-object v2, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mWakeupAlarms:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$Counter;

    invoke-virtual {v2, v7}, Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V

    .line 14729
    add-int/lit8 v16, v1, 0x1

    .end local v1    # "iwa":I
    .restart local v16    # "iwa":I
    move/from16 v1, v26

    move-object/from16 v2, v27

    goto :goto_42

    .line 14733
    .end local v16    # "iwa":I
    :cond_43
    move-object/from16 v27, v2

    iget-object v1, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 14734
    .end local v24    # "NS":I
    .local v1, "NS":I
    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14735
    const/4 v2, 0x0

    .local v2, "is":I
    :goto_43
    if-ge v2, v1, :cond_44

    .line 14736
    move/from16 v28, v1

    iget-object v1, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    .end local v1    # "NS":I
    .local v28, "NS":I
    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14737
    iget-object v1, v4, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->mServiceStats:Landroid/util/ArrayMap;

    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    .line 14738
    .local v1, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    move-object/from16 v29, v3

    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    .line 14739
    .end local v3    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    .local v29, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    move-object/from16 v30, v4

    invoke-virtual {v3, v10, v11}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J

    move-result-wide v3

    .line 14738
    .end local v4    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .local v30, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v1, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getStartTimeToNowLocked(J)J

    move-result-wide v3

    .line 14740
    .local v3, "time":J
    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 14741
    iget v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mStarts:I

    invoke-virtual {v7, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 14742
    iget v0, v1, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->mLaunches:I

    invoke-virtual {v7, v0}, Landroid/os/Parcel;->writeInt(I)V

    .line 14735
    .end local v1    # "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    .end local v3    # "time":J
    add-int/lit8 v2, v2, 0x1

    move/from16 v1, v28

    move-object/from16 v3, v29

    move-object/from16 v4, v30

    move-object/from16 v0, p0

    goto :goto_43

    .line 14744
    .end local v2    # "is":I
    .end local v9    # "NWA":I
    .end local v28    # "NS":I
    .end local v29    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;>;"
    .end local v30    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .local v1, "NS":I
    :cond_44
    move/from16 v28, v1

    .line 14724
    .end local v1    # "NS":I
    .restart local v28    # "NS":I
    move/from16 v1, v26

    move-object/from16 v2, v27

    move/from16 v24, v28

    move-object/from16 v0, p0

    goto/16 :goto_41

    .line 14427
    .end local v5    # "jobStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .end local v6    # "NJ":I
    .end local v8    # "NSE":I
    .end local v14    # "u":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    .end local v21    # "wakeStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;>;"
    .end local v22    # "NW":I
    .end local v23    # "syncStats":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$DualTimer;>;"
    .end local v26    # "NP":I
    .end local v28    # "NS":I
    :cond_45
    add-int/lit8 v1, v18, 0x1

    .end local v18    # "iu":I
    .local v1, "iu":I
    move/from16 v3, v17

    move-wide/from16 v8, v19

    move-object/from16 v0, p0

    const/4 v5, 0x5

    const/16 v6, 0xa

    const/4 v14, 0x0

    goto/16 :goto_14

    .line 14747
    .end local v1    # "iu":I
    .end local v17    # "NU":I
    .end local v19    # "startClockTime":J
    .local v3, "NU":I
    .local v8, "startClockTime":J
    :cond_46
    move/from16 v17, v3

    move-wide/from16 v19, v8

    .end local v3    # "NU":I
    .end local v8    # "startClockTime":J
    .restart local v17    # "NU":I
    .restart local v19    # "startClockTime":J
    return-void
.end method

.method public writeSyncLocked()V
    .locals 1

    .line 13540
    const/4 v0, 0x1

    invoke-virtual {p0, v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeLocked(Z)V

    .line 13541
    return-void
.end method

.method public writeToParcel(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    .line 14965
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    .line 14966
    return-void
.end method

.method writeToParcelLocked(Landroid/os/Parcel;ZI)V
    .locals 21
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "inclUids"    # Z
    .param p3, "flags"    # I

    move-object/from16 v0, p0

    move-object/from16 v7, p1

    .line 14975
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->pullPendingStateUpdatesLocked()V

    .line 14979
    invoke-virtual/range {p0 .. p0}, Lcom/android/internal/os/BatteryStatsImpl;->getStartClockTime()J

    move-result-wide v8

    .line 14981
    .local v8, "startClockTime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->uptimeMillis()J

    move-result-wide v1

    const-wide/16 v3, 0x3e8

    mul-long v10, v1, v3

    .line 14982
    .local v10, "uSecUptime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mClocks:Lcom/android/internal/os/BatteryStatsImpl$Clocks;

    invoke-interface {v1}, Lcom/android/internal/os/BatteryStatsImpl$Clocks;->elapsedRealtime()J

    move-result-wide v1

    mul-long v12, v1, v3

    .line 14983
    .local v12, "uSecRealtime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v14

    .line 14984
    .local v14, "batteryRealtime":J
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual {v1, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J

    move-result-wide v16

    .line 14986
    .local v16, "batteryScreenOffRealtime":J
    const v1, -0x458a8b8b

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14988
    const/4 v5, 0x1

    const/4 v6, 0x0

    invoke-virtual {v0, v7, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->writeHistory(Landroid/os/Parcel;ZZ)V

    .line 14990
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartCount:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14991
    invoke-virtual {v7, v8, v9}, Landroid/os/Parcel;->writeLong(J)V

    .line 14992
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mStartPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14993
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEndPlatformVersion:Ljava/lang/String;

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 14994
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14995
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUptimeStart:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14996
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14997
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRealtimeStart:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 14998
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBattery:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 14999
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mEstimatedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15000
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMinLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15001
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMaxLearnedBatteryCapacity:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15002
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    move-object v2, v7

    move-wide v3, v10

    move-wide/from16 v18, v8

    move v9, v5

    move v8, v6

    move-wide v5, v12

    .end local v8    # "startClockTime":J
    .local v18, "startClockTime":J
    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    .line 15003
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mOnBatteryScreenOffTimeBase:Lcom/android/internal/os/BatteryStatsImpl$TimeBase;

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeToParcel(Landroid/os/Parcel;JJ)V

    .line 15005
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15006
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenDozeTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15007
    move v1, v8

    .local v1, "i":I
    :goto_0
    const/4 v2, 0x5

    if-ge v1, v2, :cond_0

    .line 15008
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenBrightnessTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15007
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 15010
    .end local v1    # "i":I
    :cond_0
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mInteractiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15011
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPowerSaveModeEnabledTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15012
    iget-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestLightIdleTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15013
    iget-wide v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLongestFullIdleTime:J

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15014
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeLightTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15015
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdleModeFullTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15016
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceLightIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15017
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDeviceIdlingTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15018
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15019
    move v1, v8

    .restart local v1    # "i":I
    :goto_1
    sget v3, Landroid/telephony/SignalStrength;->NUM_SIGNAL_STRENGTH_BINS:I

    if-ge v1, v3, :cond_1

    .line 15020
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15019
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 15022
    .end local v1    # "i":I
    :cond_1
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneSignalScanningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15023
    move v1, v8

    .restart local v1    # "i":I
    :goto_2
    const/16 v3, 0x15

    if-ge v1, v3, :cond_2

    .line 15024
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mPhoneDataConnectionsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15023
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 15026
    .end local v1    # "i":I
    :cond_2
    move v1, v8

    .restart local v1    # "i":I
    :goto_3
    const/16 v3, 0xa

    if-ge v1, v3, :cond_3

    .line 15027
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkByteActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15028
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNetworkPacketActivityCounters:[Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15026
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 15030
    .end local v1    # "i":I
    :cond_3
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15031
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActivePerAppTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15032
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveAdjustedTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15033
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownTime:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15034
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mMobileRadioActiveUnknownCount:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15035
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiMulticastWakelockTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15036
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15037
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGlobalWifiRunningTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15038
    move v1, v8

    .restart local v1    # "i":I
    :goto_4
    const/16 v3, 0x8

    if-ge v1, v3, :cond_4

    .line 15039
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15038
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 15041
    .end local v1    # "i":I
    :cond_4
    move v1, v8

    .restart local v1    # "i":I
    :goto_5
    const/16 v3, 0xd

    if-ge v1, v3, :cond_5

    .line 15042
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSupplStateTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15041
    add-int/lit8 v1, v1, 0x1

    goto :goto_5

    .line 15044
    .end local v1    # "i":I
    :cond_5
    move v1, v8

    .restart local v1    # "i":I
    :goto_6
    if-ge v1, v2, :cond_6

    .line 15045
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiSignalStrengthsTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v3, v3, v1

    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15044
    add-int/lit8 v1, v1, 0x1

    goto :goto_6

    .line 15047
    .end local v1    # "i":I
    :cond_6
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActiveTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15048
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWifiActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15049
    move v1, v8

    .restart local v1    # "i":I
    :goto_7
    const/4 v2, 0x2

    if-ge v1, v2, :cond_7

    .line 15050
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mGpsSignalQualityTimer:[Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    aget-object v2, v2, v1

    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15049
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 15052
    .end local v1    # "i":I
    :cond_7
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15053
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mModemActivity:Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;

    invoke-virtual {v1, v7, v8}, Lcom/android/internal/os/BatteryStatsImpl$ControllerActivityCounterImpl;->writeToParcel(Landroid/os/Parcel;I)V

    .line 15054
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasWifiReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15055
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasBluetoothReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15056
    iget-boolean v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHasModemReporting:Z

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15058
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15059
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLoadedNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15060
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUnpluggedNumConnectivityChange:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15061
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mFlashlightOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15062
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCameraOnTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15063
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mBluetoothScanTimer:Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;

    invoke-virtual {v1, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->writeToParcel(Landroid/os/Parcel;J)V

    .line 15064
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeUnplugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15065
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargePlugLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15066
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCurrentLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15067
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mCurrentBatteryLevel:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15068
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLowDischargeAmountSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15069
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mHighDischargeAmountSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15070
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOn:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15071
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOnSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15072
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOff:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15073
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenOffSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15074
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDoze:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15075
    iget v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeAmountScreenDozeSinceCharge:I

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15076
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 15077
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mChargeStepTracker:Landroid/os/BatteryStats$LevelStepTracker;

    invoke-virtual {v1, v7}, Landroid/os/BatteryStats$LevelStepTracker;->writeToParcel(Landroid/os/Parcel;)V

    .line 15078
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15079
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenOffCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15080
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeScreenDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15081
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeLightDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15082
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mDischargeDeepDozeCounter:Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;

    invoke-virtual {v1, v7}, Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeToParcel(Landroid/os/Parcel;)V

    .line 15083
    iget-wide v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mLastWriteTime:J

    invoke-virtual {v7, v1, v2}, Landroid/os/Parcel;->writeLong(J)V

    .line 15085
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15086
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_8
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_9

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15087
    .local v2, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15088
    .local v3, "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_8

    .line 15089
    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 15090
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15091
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_9

    .line 15093
    :cond_8
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15095
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_9
    goto :goto_8

    .line 15096
    :cond_9
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15097
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mScreenOffRpmStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_a
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_b

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15098
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15099
    .restart local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_a

    .line 15100
    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 15101
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15102
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_b

    .line 15104
    :cond_a
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15106
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "rpmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_b
    goto :goto_a

    .line 15108
    :cond_b
    if-eqz p2, :cond_f

    .line 15109
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15110
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelWakelockStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_c
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15111
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15112
    .local v3, "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_c

    .line 15113
    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 15114
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15115
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_d

    .line 15117
    :cond_c
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15119
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "kwlt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_d
    goto :goto_c

    .line 15120
    :cond_d
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15121
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mWakeupReasonStats:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_e
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_10

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 15122
    .restart local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15123
    .local v3, "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v3, :cond_e

    .line 15124
    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 15125
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v7, v4}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 15126
    invoke-virtual {v3, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_f

    .line 15128
    :cond_e
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15130
    .end local v2    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;>;"
    .end local v3    # "timer":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_f
    goto :goto_e

    .line 15132
    :cond_f
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15133
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15136
    :cond_10
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v1}, Landroid/util/LongSparseArray;->size()I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15137
    move v1, v8

    .restart local v1    # "i":I
    :goto_10
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2}, Landroid/util/LongSparseArray;->size()I

    move-result v2

    if-ge v1, v2, :cond_12

    .line 15138
    iget-object v2, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v2, v1}, Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;

    .line 15139
    .local v2, "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    if-eqz v2, :cond_11

    .line 15140
    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 15141
    iget-object v3, v0, Lcom/android/internal/os/BatteryStatsImpl;->mKernelMemoryStats:Landroid/util/LongSparseArray;

    invoke-virtual {v3, v1}, Landroid/util/LongSparseArray;->keyAt(I)J

    move-result-wide v3

    invoke-virtual {v7, v3, v4}, Landroid/os/Parcel;->writeLong(J)V

    .line 15142
    invoke-virtual {v2, v7, v12, v13}, Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->writeToParcel(Landroid/os/Parcel;J)V

    goto :goto_11

    .line 15144
    :cond_11
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15137
    .end local v2    # "kmt":Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
    :goto_11
    add-int/lit8 v1, v1, 0x1

    goto :goto_10

    .line 15148
    .end local v1    # "i":I
    :cond_12
    if-eqz p2, :cond_14

    .line 15149
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v9

    .line 15150
    .local v9, "size":I
    invoke-virtual {v7, v9}, Landroid/os/Parcel;->writeInt(I)V

    .line 15151
    nop

    .local v8, "i":I
    :goto_12
    if-ge v8, v9, :cond_13

    .line 15152
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v8}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v1

    invoke-virtual {v7, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 15153
    iget-object v1, v0, Lcom/android/internal/os/BatteryStatsImpl;->mUidStats:Landroid/util/SparseArray;

    invoke-virtual {v1, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v20, v1

    check-cast v20, Lcom/android/internal/os/BatteryStatsImpl$Uid;

    .line 15155
    .local v20, "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    move-object/from16 v1, v20

    move-object v2, v7

    move-wide v3, v10

    move-wide v5, v12

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid;->writeToParcelLocked(Landroid/os/Parcel;JJ)V

    .line 15151
    .end local v20    # "uid":Lcom/android/internal/os/BatteryStatsImpl$Uid;
    add-int/lit8 v8, v8, 0x1

    goto :goto_12

    .line 15157
    .end local v8    # "i":I
    .end local v9    # "size":I
    :cond_13
    goto :goto_13

    .line 15158
    :cond_14
    invoke-virtual {v7, v8}, Landroid/os/Parcel;->writeInt(I)V

    .line 15160
    :goto_13
    return-void
.end method

.method public writeToParcelWithoutUids(Landroid/os/Parcel;I)V
    .locals 1
    .param p1, "out"    # Landroid/os/Parcel;
    .param p2, "flags"    # I

    .line 14969
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/internal/os/BatteryStatsImpl;->writeToParcelLocked(Landroid/os/Parcel;ZI)V

    .line 14970
    return-void
.end method
